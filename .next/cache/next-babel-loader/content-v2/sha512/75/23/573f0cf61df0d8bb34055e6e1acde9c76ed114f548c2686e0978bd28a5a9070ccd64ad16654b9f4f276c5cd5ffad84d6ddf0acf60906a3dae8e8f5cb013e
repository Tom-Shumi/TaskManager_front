{"ast":null,"code":"import _regeneratorRuntime from \"/Users/shumiya/Desktop/dev/react/shumipro_front/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/shumiya/Desktop/dev/react/shumipro_front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/shumiya/Desktop/dev/react/shumipro_front/src/pages/DailyTask.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Layout from '../components/common/Layout';\nimport { authentication } from '../components/util/AuthenticationUtil';\nimport dynamic from \"next/dynamic\";\nimport { Button } from 'react-bootstrap';\nimport * as DatePickerUtil from '../components/util/DatePickerUtil';\nimport DailyTaskBoard from '../components/DailyTask/DailyTaskBoard';\nimport DailyTaskEditModal from '../components/DailyTask/DailyTaskEditModal';\n\nvar DailyTask = function DailyTask() {\n  _s();\n\n  // 初期表示フラグ\n  var _useState = useState(true),\n      initDispFlg = _useState[0],\n      setInitDispFlg = _useState[1]; // 合計タスク数\n\n\n  var _useState2 = useState(0),\n      totalTaskCount = _useState2[0],\n      setTotalTaskCount = _useState2[1]; // 完了タスク数\n\n\n  var _useState3 = useState(0),\n      doneTaskCount = _useState3[0],\n      setDoneTaskCount = _useState3[1]; // 合計Done時間\n\n\n  var _useState4 = useState(\"\"),\n      totalDoneTime = _useState4[0],\n      setTotalDoneTime = _useState4[1]; // デイリータスク登録モーダル表示フラグ\n\n\n  var _useState5 = useState(false),\n      dailyTaskEditModalDispFlg = _useState5[0],\n      setDailyTaskEditModalDispFlg = _useState5[1]; // 編集対象デイリータスク\n\n\n  var _useState6 = useState(null),\n      targetDailyTask = _useState6[0],\n      setTargetDailyTask = _useState6[1];\n\n  authentication();\n\n  var showDailyTaskEditModal = function showDailyTaskEditModal(dailyTask) {\n    setTargetDailyTask(dailyTask);\n    setDailyTaskEditModalDispFlg(true);\n  };\n\n  var closeDailyTaskEditModal = function closeDailyTaskEditModal() {\n    setDailyTaskEditModalDispFlg(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    title: \"Daily Task : \" + DatePickerUtil.curentDateStrYYYYMMDD() + \".\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      className: \"button_md margin_side_10\",\n      onClick: function onClick() {\n        return showDailyTaskEditModal(null);\n      },\n      children: \"create task\"\n    }, \"create\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }, _this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"success\",\n      className: \"button_md\",\n      children: \"history\"\n    }, \"history\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"display_inline margin_side_10\",\n      children: [\"Achievement: \", doneTaskCount, \" of \", totalTaskCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"display_inline margin_side_10\",\n      children: [\"Total Done Time: \", totalDoneTime]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"display_inline margin_side_10\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          name: \"includeDeleteTask\",\n          id: \"includeDeleteTask\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, _this), \" Including delete task\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }, _this), /*#__PURE__*/_jsxDEV(DailyTaskBoard, {\n      initDispFlg: initDispFlg,\n      setInitDispFlg: setInitDispFlg,\n      setTotalTaskCount: setTotalTaskCount,\n      setDoneTaskCount: setDoneTaskCount,\n      setTotalDoneTime: setTotalDoneTime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }, _this), dailyTaskEditModalDispFlg && /*#__PURE__*/_jsxDEV(DailyTaskEditModal, {\n      close: closeDailyTaskEditModal,\n      setInitDispFlg: setInitDispFlg,\n      dailyTask: targetDailyTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(DailyTask, \"yMi8asMH7dHVqJX7RY9SZgBclRc=\");\n\n_c = DailyTask;\nvar DynamicTask = dynamic({\n  loader: function () {\n    var _loader = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", DailyTask);\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function loader() {\n      return _loader.apply(this, arguments);\n    }\n\n    return loader;\n  }()\n}, {\n  ssr: false\n});\nexport default DynamicTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"DailyTask\");","map":{"version":3,"sources":["/Users/shumiya/Desktop/dev/react/shumipro_front/src/pages/DailyTask.tsx"],"names":["React","useState","Layout","authentication","dynamic","Button","DatePickerUtil","DailyTaskBoard","DailyTaskEditModal","DailyTask","initDispFlg","setInitDispFlg","totalTaskCount","setTotalTaskCount","doneTaskCount","setDoneTaskCount","totalDoneTime","setTotalDoneTime","dailyTaskEditModalDispFlg","setDailyTaskEditModalDispFlg","targetDailyTask","setTargetDailyTask","showDailyTaskEditModal","dailyTask","closeDailyTaskEditModal","curentDateStrYYYYMMDD","DynamicTask","loader","ssr"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Layout from '../components/common/Layout';\nimport {authentication} from '../components/util/AuthenticationUtil';\nimport dynamic from \"next/dynamic\";\nimport {Button} from 'react-bootstrap';\nimport * as DatePickerUtil from '../components/util/DatePickerUtil';\nimport DailyTaskBoard from '../components/DailyTask/DailyTaskBoard';\nimport { DailyTask as DailyTaskClass } from '../components/common/interface';\nimport DailyTaskEditModal from '../components/DailyTask/DailyTaskEditModal';\n\n\nconst DailyTask: React.FC = () => {\n    // 初期表示フラグ\n    const [initDispFlg, setInitDispFlg] = useState<Boolean>(true);\n    // 合計タスク数\n    const [totalTaskCount, setTotalTaskCount] = useState<number>(0);\n    // 完了タスク数\n    const [doneTaskCount, setDoneTaskCount] = useState<number>(0);\n    // 合計Done時間\n    const [totalDoneTime, setTotalDoneTime] = useState<string>(\"\");\n    // デイリータスク登録モーダル表示フラグ\n    const [dailyTaskEditModalDispFlg, setDailyTaskEditModalDispFlg] = useState<Boolean>(false);\n    // 編集対象デイリータスク\n    const [targetDailyTask, setTargetDailyTask] = useState<DailyTaskClass>(null);\n\n    authentication();\n\n    const showDailyTaskEditModal = (dailyTask: DailyTaskClass) => {\n      setTargetDailyTask(dailyTask);\n      setDailyTaskEditModalDispFlg(true);\n  }\n\n  const closeDailyTaskEditModal = () => {\n    setDailyTaskEditModalDispFlg(false);\n  }\n\n    return (\n        <Layout title={\"Daily Task : \" + DatePickerUtil.curentDateStrYYYYMMDD() + \".\"}>\n          <Button key=\"create\" variant=\"primary\" className=\"button_md margin_side_10\" onClick={ () => showDailyTaskEditModal(null)}>create task</Button>\n          <Button key=\"history\" variant=\"success\" className=\"button_md\">history</Button>\n          <div className=\"display_inline margin_side_10\">Achievement: {doneTaskCount} of {totalTaskCount}</div>\n          <div className=\"display_inline margin_side_10\">Total Done Time: {totalDoneTime}</div>\n          <div className=\"display_inline margin_side_10\">\n            <label>\n              <input type=\"checkbox\" name=\"includeDeleteTask\" id=\"includeDeleteTask\"/> Including delete task\n            </label>\n          </div>\n\n          <DailyTaskBoard\n            initDispFlg = {initDispFlg}\n            setInitDispFlg = {setInitDispFlg}\n            setTotalTaskCount = {setTotalTaskCount}\n            setDoneTaskCount = {setDoneTaskCount}\n            setTotalDoneTime = {setTotalDoneTime}\n          />\n\n          {dailyTaskEditModalDispFlg && \n            <DailyTaskEditModal \n              close = {closeDailyTaskEditModal}\n              setInitDispFlg = {setInitDispFlg}\n              dailyTask = {targetDailyTask}\n            />\n          }\n        </Layout>\n    )\n}\n\nconst DynamicTask = dynamic(\n    {\n      loader: async () => DailyTask,\n    },\n    { ssr: false }\n  );\n  \n  export default DynamicTask;"]},"metadata":{},"sourceType":"module"}