{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _defineProperty from \"/Users/shumiya/Desktop/dev/react/shumipro_front/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport { Modal, Button, Form, Row, Col } from 'react-bootstrap';\nimport { getApiClient } from '../util/AuthenticationUtil';\nimport Router from 'next/router';\nimport DatePicker, { registerLocale } from \"react-datepicker\";\nimport moment from 'moment';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport ja from 'date-fns/locale/ja';\nimport * as DatePickerUtil from '../util/DatePickerUtil';\nimport * as ConversionUtil from '../util/ConversionUtil';\nregisterLocale('ja', ja);\n\nvar TaskEditModal = function TaskEditModal(props) {\n  var initDate = DatePickerUtil.toUtcIso8601str(moment());\n\n  var _useState = useState({\n    id: -1,\n    task: \"\",\n    priority: 1,\n    description: \"\",\n    status: 1,\n    date: initDate\n  }),\n      form = _useState[0],\n      setForm = _useState[1]; // 初期表示処理\n\n\n  useEffect(function () {\n    if (props.task != null) {\n      var dateStr;\n\n      if (props.task.status == 3) {\n        dateStr = props.task.doneDate;\n      } else {\n        dateStr = props.task.planDate;\n      }\n\n      setForm({\n        id: props.task.id,\n        task: props.task.taskTitle,\n        priority: props.task.priority,\n        description: props.task.description,\n        status: props.task.status,\n        date: DatePickerUtil.parseDate(dateStr)\n      });\n    }\n  }, []); // form入力のハンドリング\n  // 日付を空欄には更新不可\n\n  var handleChange = function handleChange(input) {\n    return function (e) {\n      return setForm(_objectSpread(_objectSpread({}, form), {}, _defineProperty({}, input, e.target.value)));\n    };\n  }; // form入力（日付）のハンドリング\n\n\n  var handleChangeDate = function handleChangeDate(date) {\n    setForm({\n      id: form.id,\n      task: form.task,\n      priority: form.priority,\n      description: form.description,\n      status: form.status,\n      date: DatePickerUtil.toUtcIso8601str(moment(date))\n    });\n  }; // cookieを使用するaxios生成\n\n\n  var client = getApiClient(); // executeボタン押下処理\n\n  var clickExecute = function clickExecute() {\n    execute();\n  }; // リクエスト用json取得\n\n\n  var getJsonParams = function getJsonParams() {\n    var params = {\n      task: form.task,\n      priority: form.priority,\n      status: form.status,\n      description: form.description,\n      date: form.date\n    };\n    return JSON.stringify(params);\n  }; // task登録\n\n\n  var create = function create() {\n    var jsonParams = getJsonParams();\n    client.post(process.env.NEXT_PUBLIC_API_SERVER + process.env.NEXT_PUBLIC_API_TASK, jsonParams, {\n      headers: {\n        'content-type': 'application/json'\n      }\n    }).then(function (response) {\n      props.setInitDispFlg(true);\n      props.close();\n    })[\"catch\"](function () {\n      Router.push('/Error?400');\n    });\n  }; // task更新\n\n\n  var update = function update() {\n    var jsonParams = getJsonParams();\n    client.put(process.env.NEXT_PUBLIC_API_SERVER + process.env.NEXT_PUBLIC_API_TASK + \"/\" + props.task.id, jsonParams, {\n      headers: {\n        'content-type': 'application/json'\n      }\n    }).then(function (response) {\n      props.setInitDispFlg(true);\n      props.close();\n    })[\"catch\"](function () {\n      Router.push('/Error?400');\n    });\n  }; // タイトル表示文字列設定\n\n\n  var title;\n  var execute;\n\n  switch (props.execSbt) {\n    case \"1\":\n      title = 'Create task';\n      execute = create;\n      break;\n\n    case \"2\":\n      title = 'Update task';\n      execute = update;\n      break;\n  } // 日付表示文字列設定\n\n\n  var dateTitleStr = ConversionUtil.conversionDateStr(form.status);\n  return /*#__PURE__*/_jsxs(Modal, {\n    show: true,\n    onHide: props.close,\n    children: [/*#__PURE__*/_jsx(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsx(Modal.Title, {\n        children: title\n      })\n    }), /*#__PURE__*/_jsx(Modal.Body, {\n      children: /*#__PURE__*/_jsx(Form, {\n        children: /*#__PURE__*/_jsxs(Row, {\n          children: [/*#__PURE__*/_jsx(Col, {\n            xs: 4,\n            className: \"modal_label\",\n            children: /*#__PURE__*/_jsx(\"strong\", {\n              children: \"Task\"\n            })\n          }), /*#__PURE__*/_jsx(Col, {\n            xs: 8,\n            className: \"modal_input\",\n            children: /*#__PURE__*/_jsx(Form.Control, {\n              type: \"text\",\n              value: form.task,\n              onChange: handleChange('task')\n            })\n          }), /*#__PURE__*/_jsx(\"hr\", {}), /*#__PURE__*/_jsx(Col, {\n            xs: 4,\n            className: \"modal_label\",\n            children: /*#__PURE__*/_jsx(\"strong\", {\n              children: \"Status\"\n            })\n          }), /*#__PURE__*/_jsx(Col, {\n            xs: 8,\n            className: \"modal_input\",\n            children: /*#__PURE__*/_jsxs(Form.Control, {\n              as: \"select\",\n              value: form.status,\n              onChange: handleChange('status'),\n              children: [/*#__PURE__*/_jsx(\"option\", {\n                value: \"1\",\n                children: \"NOT STARTED\"\n              }, \"status1\"), /*#__PURE__*/_jsx(\"option\", {\n                value: \"2\",\n                children: \"IN PROGRESS\"\n              }, \"status2\"), /*#__PURE__*/_jsx(\"option\", {\n                value: \"3\",\n                children: \"DONE\"\n              }, \"status3\")]\n            })\n          }), /*#__PURE__*/_jsx(\"hr\", {}), /*#__PURE__*/_jsx(Col, {\n            xs: 4,\n            className: \"modal_label\",\n            children: /*#__PURE__*/_jsx(\"strong\", {\n              children: \"Priority\"\n            })\n          }), /*#__PURE__*/_jsx(Col, {\n            xs: 8,\n            className: \"modal_input\",\n            children: /*#__PURE__*/_jsxs(Form.Control, {\n              as: \"select\",\n              value: form.priority,\n              onChange: handleChange('priority'),\n              children: [/*#__PURE__*/_jsx(\"option\", {\n                value: \"1\",\n                children: \"LOW\"\n              }, \"priority1\"), /*#__PURE__*/_jsx(\"option\", {\n                value: \"2\",\n                children: \"MEDIUM\"\n              }, \"priority2\"), /*#__PURE__*/_jsx(\"option\", {\n                value: \"3\",\n                children: \"HIGH\"\n              }, \"priority3\")]\n            })\n          }), /*#__PURE__*/_jsx(\"hr\", {}), /*#__PURE__*/_jsx(Col, {\n            xs: 4,\n            className: \"modal_label\",\n            children: /*#__PURE__*/_jsx(\"strong\", {\n              children: form.status == 3 ? \"Done Date\" : \"Plan Date\"\n            })\n          }), /*#__PURE__*/_jsx(Col, {\n            xs: 8,\n            className: \"modal_input\",\n            children: /*#__PURE__*/_jsx(DatePicker, {\n              locale: \"ja\",\n              selected: form.date == \"\" ? null : moment(form.date).toDate(),\n              onChange: handleChangeDate,\n              dateFormat: \"yyyy/MM/dd\",\n              customInput: /*#__PURE__*/_jsx(Form.Control, {\n                type: \"text\"\n              })\n            })\n          }), /*#__PURE__*/_jsx(\"hr\", {}), /*#__PURE__*/_jsx(Col, {\n            xs: 4,\n            className: \"modal_label\",\n            children: /*#__PURE__*/_jsx(\"strong\", {\n              children: \"Description\"\n            })\n          }), /*#__PURE__*/_jsx(Col, {\n            xs: 8,\n            className: \"modal_input\",\n            children: /*#__PURE__*/_jsx(Form.Control, {\n              as: \"textarea\",\n              rows: 2,\n              cols: 40,\n              value: form.description,\n              onChange: handleChange('description')\n            })\n          })]\n        })\n      })\n    }), /*#__PURE__*/_jsxs(Modal.Footer, {\n      children: [/*#__PURE__*/_jsx(Button, {\n        variant: \"primary\",\n        onClick: clickExecute,\n        className: \"button_sm\",\n        children: \"execute\"\n      }), /*#__PURE__*/_jsx(Button, {\n        variant: \"dark\",\n        onClick: props.close,\n        className: \"button_sm\",\n        children: \"close\"\n      })]\n    })]\n  }, 'taskEditModal');\n};\n\nexport default TaskEditModal;","map":null,"metadata":{},"sourceType":"module"}