{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/shumiya/Desktop/dev/react/shumipro_front/src/components/TaskGraph.tsx\";\nimport React from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { TaskGraph as TaskGraphClass } from './interface';\nimport Router from 'next/router';\nimport Axios from \"axios\";\n\nconst TaskGraph = props => {\n  /** グラフデータ */\n  const graphData = {\n    labels: [// 軸ラベル\n    // 各ラベルを配列にすることで軸ラベルが改行されて表示される\n    ['2019年', '1月'], ['2019年', '2月'], ['2019年', '3月'], ['2019年', '4月'], ['2019年', '5月'], ['2019年', '6月'], ['2019年', '7月'], ['2019年', '8月'], ['2019年', '9月'], ['2019年', '10月'], ['2019年', '11月'], ['2019年', '12月']],\n    datasets: [// 表示するデータセット\n    {\n      data: [5.6, 7.2, 10.6, 13.6, 20, 21.8, 24.1, 28.4, 25.1, 19.4, 13.1, 8.5],\n      backgroundColor: 'rgba(30, 144, 255, 1)',\n      label: '月別合計降水量(mm)'\n    }]\n  };\n  /** グラフオプション */\n\n  const graphOption = {\n    scales: {\n      xAxes: [// x軸オプション\n      {\n        scaleLabel: {\n          // x軸ラベルオプション\n          display: true,\n          labelString: '2019年'\n        }\n      }],\n      yAxes: [// y軸オプション\n      {\n        scaleLabel: {\n          // y軸ラベルオプション\n          display: true,\n          labelString: '合計降水量(mm)'\n        },\n        ticks: {\n          // y軸メモリオプション\n          beginAtZero: true,\n          callback: function (value, index, values) {\n            return `${value}(mm)`;\n          }\n        }\n      }]\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Bar, {\n      data: graphData,\n      options: graphOption\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 7\n  }, this);\n};\n\nasync function getTaskGraphInfo() {\n  let client = Axios.create({\n    withCredentials: true\n  });\n  var planTaskGraphList = [];\n  var doneTaskGraphList = [];\n  var commentGraphList = [];\n\n  try {\n    const taskGraphInfo = await client.get(process.env.NEXT_PUBLIC_API_SERVER + process.env.NEXT_PUBLIC_API_TASK_GRAPH);\n    planTaskGraphList = createTaskGraphList(taskGraphInfo.data[\"planTask\"]);\n    doneTaskGraphList = createTaskGraphList(taskGraphInfo.data[\"doneTask\"]);\n    commentGraphList = createTaskGraphList(taskGraphInfo.data[\"comment\"]);\n  } catch (error) {\n    Router.push('/Error?400');\n  }\n\n  return [planTaskGraphList, doneTaskGraphList, commentGraphList];\n} // apiレスポンスからタスクリストを生成する\n\n\nfunction createTaskGraphList(responseData) {\n  let length = responseData.length;\n  var taskGraphList = [];\n\n  for (var i = 0; i < length; i++) {\n    let taskGraph = new TaskGraphClass(responseData[i][\"date\"], responseData[i][\"count\"]);\n    taskGraphList.push(taskGraph);\n  }\n\n  return taskGraphList;\n}\n\nexport default TaskGraph;","map":{"version":3,"sources":["/Users/shumiya/Desktop/dev/react/shumipro_front/src/components/TaskGraph.tsx"],"names":["React","Bar","TaskGraph","TaskGraphClass","Router","Axios","props","graphData","labels","datasets","data","backgroundColor","label","graphOption","scales","xAxes","scaleLabel","display","labelString","yAxes","ticks","beginAtZero","callback","value","index","values","getTaskGraphInfo","client","create","withCredentials","planTaskGraphList","doneTaskGraphList","commentGraphList","taskGraphInfo","get","process","env","NEXT_PUBLIC_API_SERVER","NEXT_PUBLIC_API_TASK_GRAPH","createTaskGraphList","error","push","responseData","length","taskGraphList","i","taskGraph"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { TaskGraph as TaskGraphClass } from './interface';\nimport Router from 'next/router';\nimport Axios from \"axios\";\n\ninterface TaskGraphProps {\n\n}\n\nconst TaskGraph: React.FC<TaskGraphProps> = (props) => {\n    /** グラフデータ */\n    const graphData = {\n      labels: [\n        // 軸ラベル\n        // 各ラベルを配列にすることで軸ラベルが改行されて表示される\n        ['2019年', '1月'],\n        ['2019年', '2月'],\n        ['2019年', '3月'],\n        ['2019年', '4月'],\n        ['2019年', '5月'],\n        ['2019年', '6月'],\n        ['2019年', '7月'],\n        ['2019年', '8月'],\n        ['2019年', '9月'],\n        ['2019年', '10月'],\n        ['2019年', '11月'],\n        ['2019年', '12月'],\n      ],\n      datasets: [\n        // 表示するデータセット\n        {\n          data: [5.6, 7.2, 10.6, 13.6, 20, 21.8, 24.1, 28.4, 25.1, 19.4, 13.1, 8.5],\n          backgroundColor: 'rgba(30, 144, 255, 1)',\n          label: '月別合計降水量(mm)',\n        },\n      ],\n    };\n  \n    /** グラフオプション */\n    const graphOption = {\n      scales: {\n        xAxes: [\n          // x軸オプション\n          {\n            scaleLabel: {\n              // x軸ラベルオプション\n              display: true,\n              labelString: '2019年',\n            },\n          },\n        ],\n        yAxes: [\n          // y軸オプション\n          {\n            scaleLabel: {\n              // y軸ラベルオプション\n              display: true,\n              labelString: '合計降水量(mm)',\n            },\n            ticks: {\n              // y軸メモリオプション\n              beginAtZero: true,\n              callback: function (value, index, values) {\n                return `${value}(mm)`;\n              },\n            },\n          },\n        ],\n      },\n    };\n  \n    return (\n      <div className=\"App\">\n        {/* グラフコンポーネントの呼び出し */}\n        <Bar data={graphData} options={graphOption} />\n      </div>\n    );\n}\n\nasync function getTaskGraphInfo(){\n  let client = Axios.create({ withCredentials: true });\n  var planTaskGraphList :TaskGraphClass[] = [];\n  var doneTaskGraphList :TaskGraphClass[] = [];\n  var commentGraphList :TaskGraphClass[] = [];\n  try {\n      const taskGraphInfo = await client.get(process.env.NEXT_PUBLIC_API_SERVER + process.env.NEXT_PUBLIC_API_TASK_GRAPH);\n      \n      planTaskGraphList = createTaskGraphList(taskGraphInfo.data[\"planTask\"]);\n      doneTaskGraphList = createTaskGraphList(taskGraphInfo.data[\"doneTask\"]);\n      commentGraphList = createTaskGraphList(taskGraphInfo.data[\"comment\"]);\n  } catch(error){\n      Router.push('/Error?400');\n  }\n  return [planTaskGraphList, doneTaskGraphList, commentGraphList];\n}\n\n// apiレスポンスからタスクリストを生成する\nfunction createTaskGraphList(responseData: any[]): TaskGraphClass[]{\n  let length: number = responseData.length;\n  var taskGraphList :TaskGraphClass[] = [];\n  for (var i = 0 ; i < length ; i++) {\n      let taskGraph = new TaskGraphClass(responseData[i][\"date\"], responseData[i][\"count\"]);\n      taskGraphList.push(taskGraph);\n  }\n  return taskGraphList;\n}\n\nexport default TaskGraph"]},"metadata":{},"sourceType":"module"}