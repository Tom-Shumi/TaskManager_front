{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport React from 'react';\nimport TaskItem from './TaskItem';\nimport styles from '../../styles/TaskList.module.css';\nimport { ItemTypes, Task } from '../common/interface';\nimport { useDrop } from 'react-dnd';\nimport { getApiClient } from '../util/AuthenticationUtil';\nimport Router from 'next/router';\nimport * as ConversionUtil from '../util/ConversionUtil';\n\nconst TaskList = props => {\n  // cookieを使用するaxios生成\n  let client = getApiClient();\n\n  const updateTaskStatus = (id, status) => {\n    var params = {\n      status: status\n    };\n    var jsonParams = JSON.stringify(params);\n    client.put(process.env.NEXT_PUBLIC_API_SERVER + process.env.NEXT_PUBLIC_API_TASK + \"/status/\" + id, jsonParams, {\n      headers: {\n        'content-type': 'application/json'\n      }\n    }).then(response => {\n      props.setInitDispFlg(true);\n    }).catch(() => {\n      Router.push('/Error?400');\n    });\n  };\n\n  const [{\n    isOver\n  }, drop] = useDrop({\n    accept: ItemTypes.TASK_ITEM,\n    drop: dragItem => {\n      updateTaskStatus(dragItem.id, props.status);\n    },\n    collect: monitor => ({\n      isOver: !!monitor.isOver()\n    })\n  });\n  var status_str = ConversionUtil.conversionStatus(props.status);\n  var style_is_over = isOver ? \"is_over\" : \"is_not_over\";\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: styles.task_list + \" \" + style_is_over,\n    ref: drop,\n    children: [/*#__PURE__*/_jsxs(\"p\", {\n      className: styles.task_status,\n      children: [status_str, \" [ \", Object.keys(props.taskList).length, \" ]\"]\n    }), props.taskList.map(taskItem => /*#__PURE__*/_jsx(TaskItem, {\n      task: taskItem,\n      setInitDispFlg: props.setInitDispFlg,\n      showTaskUpdateModal: props.showTaskUpdateModal,\n      showTaskCommentModal: props.showTaskCommentModal\n    }, \"TaskItem\" + taskItem.id))]\n  });\n};\n\nexport default TaskList;","map":null,"metadata":{},"sourceType":"module"}