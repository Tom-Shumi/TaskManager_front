{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/shumiya/Desktop/dev/react/shumipro_front/src/components/TaskBoard.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Router from 'next/router';\nimport Axios from \"axios\";\nimport { useState } from \"react\";\n\nvar TaskBoard = function TaskBoard(props) {\n  _s();\n\n  var _useState = useState(null),\n      taskListNotStarted = _useState[0],\n      setTaskListNotStarted = _useState[1];\n\n  var _useState2 = useState(null),\n      taskListInProgress = _useState2[0],\n      setTaskListInProgress = _useState2[1];\n\n  var _useState3 = useState(null),\n      taskListDone = _useState3[0],\n      setTaskListDone = _useState3[1];\n\n  var client = Axios.create({\n    withCredentials: true\n  });\n  client.get(process.env.NEXT_PUBLIC_API_SERVER + process.env.NEXT_PUBLIC_API_TASK + \"/1\").then(function (response) {\n    createTaskList(response.data);\n  })[\"catch\"](function () {\n    Router.push('/Error?400');\n  });\n  var taskList = new Array(4);\n  taskList.push({\n    taskTitle: \"test1\",\n    description: \"aaa1\",\n    priority: 1\n  });\n  taskList.push({\n    taskTitle: \"test2\",\n    description: \"aaa2\",\n    priority: 2\n  });\n  taskList.push({\n    taskTitle: \"test3\",\n    description: \"aaa3\",\n    priority: 3\n  });\n  taskList.push({\n    taskTitle: \"test4\",\n    description: \"aaa4\",\n    priority: 2\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(TaskBoard, \"lE4QWCAAbjmKZ2J+2xu8/2axYDk=\");\n\n_c = TaskBoard;\n\nfunction createTaskList(responseData) {\n  for (var t in responseData) {\n    console.log(responseData[0]);\n    console.log(responseData[0].id);\n    console.log(responseData.length);\n  }\n\n  return null;\n}\n\nexport default TaskBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskBoard\");","map":{"version":3,"sources":["/Users/shumiya/Desktop/dev/react/shumipro_front/src/components/TaskBoard.tsx"],"names":["React","Router","Axios","useState","TaskBoard","props","taskListNotStarted","setTaskListNotStarted","taskListInProgress","setTaskListInProgress","taskListDone","setTaskListDone","client","create","withCredentials","get","process","env","NEXT_PUBLIC_API_SERVER","NEXT_PUBLIC_API_TASK","then","response","createTaskList","data","push","taskList","Array","taskTitle","description","priority","responseData","t","console","log","id","length"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAMA,IAAMC,SAAmC,GAAG,SAAtCA,SAAsC,CAACC,KAAD,EAAW;AAAA;;AAAA,kBACCF,QAAQ,CAAS,IAAT,CADT;AAAA,MAC5CG,kBAD4C;AAAA,MACxBC,qBADwB;;AAAA,mBAECJ,QAAQ,CAAS,IAAT,CAFT;AAAA,MAE5CK,kBAF4C;AAAA,MAExBC,qBAFwB;;AAAA,mBAGXN,QAAQ,CAAS,IAAT,CAHG;AAAA,MAG5CO,YAH4C;AAAA,MAG9BC,eAH8B;;AAKnD,MAAIC,MAAM,GAAGV,KAAK,CAACW,MAAN,CAAa;AAAEC,IAAAA,eAAe,EAAE;AAAnB,GAAb,CAAb;AAEAF,EAAAA,MAAM,CAACG,GAAP,CAAWC,OAAO,CAACC,GAAR,CAAYC,sBAAZ,GAAqCF,OAAO,CAACC,GAAR,CAAYE,oBAAjD,GAAwE,IAAnF,EACKC,IADL,CACU,UAAAC,QAAQ,EAAI;AACdC,IAAAA,cAAc,CAACD,QAAQ,CAACE,IAAV,CAAd;AACH,GAHL,WAGa,YAAM;AACXtB,IAAAA,MAAM,CAACuB,IAAP,CAAY,YAAZ;AACH,GALL;AAOA,MAAIC,QAAgB,GAAG,IAAIC,KAAJ,CAAU,CAAV,CAAvB;AACAD,EAAAA,QAAQ,CAACD,IAAT,CAAc;AAACG,IAAAA,SAAS,EAAE,OAAZ;AAAqBC,IAAAA,WAAW,EAAE,MAAlC;AAA0CC,IAAAA,QAAQ,EAAE;AAApD,GAAd;AACAJ,EAAAA,QAAQ,CAACD,IAAT,CAAc;AAACG,IAAAA,SAAS,EAAE,OAAZ;AAAqBC,IAAAA,WAAW,EAAE,MAAlC;AAA0CC,IAAAA,QAAQ,EAAE;AAApD,GAAd;AACAJ,EAAAA,QAAQ,CAACD,IAAT,CAAc;AAACG,IAAAA,SAAS,EAAE,OAAZ;AAAqBC,IAAAA,WAAW,EAAE,MAAlC;AAA0CC,IAAAA,QAAQ,EAAE;AAApD,GAAd;AACAJ,EAAAA,QAAQ,CAACD,IAAT,CAAc;AAACG,IAAAA,SAAS,EAAE,OAAZ;AAAqBC,IAAAA,WAAW,EAAE,MAAlC;AAA0CC,IAAAA,QAAQ,EAAE;AAApD,GAAd;AACA,sBACI;AAAK,IAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,WADJ;AAOH,CA1BD;;GAAMzB,S;;KAAAA,S;;AA4BN,SAASkB,cAAT,CAAwBQ,YAAxB,EAAoD;AAChD,OAAK,IAAIC,CAAT,IAAcD,YAAd,EAA4B;AACxBE,IAAAA,OAAO,CAACC,GAAR,CAAYH,YAAY,CAAC,CAAD,CAAxB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYH,YAAY,CAAC,CAAD,CAAZ,CAAgBI,EAA5B;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYH,YAAY,CAACK,MAAzB;AACH;;AACD,SAAO,IAAP;AACH;;AAED,eAAe/B,SAAf","sourcesContent":["import React from 'react';\nimport TaskList from '../components/TaskList'\nimport { Task } from './interface';\nimport Router from 'next/router';\nimport Axios from \"axios\";\nimport { useState } from \"react\";\n\ninterface TaskBoardProps {\n\n}\n\nconst TaskBoard: React.FC<TaskBoardProps> = (props) => {\n    const [taskListNotStarted, setTaskListNotStarted] = useState<Task[]>(null);\n    const [taskListInProgress, setTaskListInProgress] = useState<Task[]>(null);\n    const [taskListDone, setTaskListDone] = useState<Task[]>(null);\n\n    let client = Axios.create({ withCredentials: true });\n\n    client.get(process.env.NEXT_PUBLIC_API_SERVER + process.env.NEXT_PUBLIC_API_TASK + \"/1\")\n        .then(response => {\n            createTaskList(response.data)\n        }).catch(() => {\n            Router.push('/Error?400');\n        }); \n\n    var taskList: Task[] = new Array(4);\n    taskList.push({taskTitle: \"test1\" ,description: \"aaa1\" ,priority: 1});\n    taskList.push({taskTitle: \"test2\" ,description: \"aaa2\" ,priority: 2});\n    taskList.push({taskTitle: \"test3\" ,description: \"aaa3\" ,priority: 3});\n    taskList.push({taskTitle: \"test4\" ,description: \"aaa4\" ,priority: 2});\n    return (\n        <div className=\"\">\n            {/* <TaskList taskList={taskListNotStarted} status=\"1\" />\n            <TaskList taskList={taskListInProgress} status=\"2\" />\n            <TaskList taskList={taskListDone} status=\"3\" /> */}\n        </div>\n    )\n}\n\nfunction createTaskList(responseData: any[]): Task[]{\n    for (var t in responseData) {\n        console.log(responseData[0]);\n        console.log(responseData[0].id);\n        console.log(responseData.length);\n    }\n    return null;\n}\n\nexport default TaskBoard;"]},"metadata":{},"sourceType":"module"}