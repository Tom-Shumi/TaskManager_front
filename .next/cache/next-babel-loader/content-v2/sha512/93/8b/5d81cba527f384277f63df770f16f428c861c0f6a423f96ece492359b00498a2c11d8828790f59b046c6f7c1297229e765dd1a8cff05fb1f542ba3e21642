{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/shumiya/Desktop/dev/react/shumipro_front/src/pages/DailyTask.tsx\";\nimport React, { useState } from 'react';\nimport Layout from '../components/common/Layout';\nimport { authentication } from '../components/util/AuthenticationUtil';\nimport dynamic from \"next/dynamic\";\nimport { Button } from 'react-bootstrap';\nimport * as DatePickerUtil from '../components/util/DatePickerUtil';\nimport DailyTaskBoard from '../components/DailyTask/DailyTaskBoard';\n\nconst DailyTask = () => {\n  // 初期表示フラグ\n  const {\n    0: initDispFlg,\n    1: setInitDispFlg\n  } = useState(true); // 合計タスク数\n\n  const {\n    0: totalTaskCount,\n    1: setTotalTaskCount\n  } = useState(0); // 完了タスク数\n\n  const {\n    0: doneTaskCount,\n    1: setDoneTaskCount\n  } = useState(0); // 合計Done時間\n\n  const {\n    0: totalDoneTime,\n    1: setTotalDoneTime\n  } = useState(\"\");\n  authentication();\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    title: \"Daily Task : \" + DatePickerUtil.curentDateStrYYYYMMDD() + \".\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      className: \"button_md margin_side_10\",\n      children: \"create task\"\n    }, \"create\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"success\",\n      className: \"button_md\",\n      children: \"history\"\n    }, \"history\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"display_inline margin_side_10\",\n      children: [\"Achievement: \", doneTaskCount, \" of \", totalTaskCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"display_inline margin_side_10\",\n      children: \"TotalDoneTime: 2 h 30 m\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(DailyTaskBoard, {\n      initDispFlg: initDispFlg,\n      setInitDispFlg: setInitDispFlg,\n      setTotalTaskCount: setTotalTaskCount,\n      setDoneTaskCount: setDoneTaskCount,\n      setTotalDoneTime: setTotalDoneTime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\nconst DynamicTask = dynamic({\n  loader: async () => DailyTask\n}, {\n  ssr: false\n});\nexport default DynamicTask;","map":{"version":3,"sources":["/Users/shumiya/Desktop/dev/react/shumipro_front/src/pages/DailyTask.tsx"],"names":["React","useState","Layout","authentication","dynamic","Button","DatePickerUtil","DailyTaskBoard","DailyTask","initDispFlg","setInitDispFlg","totalTaskCount","setTotalTaskCount","doneTaskCount","setDoneTaskCount","totalDoneTime","setTotalDoneTime","curentDateStrYYYYMMDD","DynamicTask","loader","ssr"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,SAAQC,cAAR,QAA6B,uCAA7B;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,SAAQC,MAAR,QAAqB,iBAArB;AACA,OAAO,KAAKC,cAAZ,MAAgC,mCAAhC;AACA,OAAOC,cAAP,MAA2B,wCAA3B;;AAGA,MAAMC,SAAmB,GAAG,MAAM;AAC9B;AACA,QAAM;AAAA,OAACC,WAAD;AAAA,OAAcC;AAAd,MAAgCT,QAAQ,CAAU,IAAV,CAA9C,CAF8B,CAG9B;;AACA,QAAM;AAAA,OAACU,cAAD;AAAA,OAAiBC;AAAjB,MAAsCX,QAAQ,CAAS,CAAT,CAApD,CAJ8B,CAK9B;;AACA,QAAM;AAAA,OAACY,aAAD;AAAA,OAAgBC;AAAhB,MAAoCb,QAAQ,CAAS,CAAT,CAAlD,CAN8B,CAO9B;;AACA,QAAM;AAAA,OAACc,aAAD;AAAA,OAAgBC;AAAhB,MAAoCf,QAAQ,CAAS,EAAT,CAAlD;AAEAE,EAAAA,cAAc;AAEd,sBACI,QAAC,MAAD;AAAQ,IAAA,KAAK,EAAE,kBAAkBG,cAAc,CAACW,qBAAf,EAAlB,GAA2D,GAA1E;AAAA,4BACE,QAAC,MAAD;AAAqB,MAAA,OAAO,EAAC,SAA7B;AAAuC,MAAA,SAAS,EAAC,0BAAjD;AAAA;AAAA,OAAY,QAAZ;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAsB,MAAA,OAAO,EAAC,SAA9B;AAAwC,MAAA,SAAS,EAAC,WAAlD;AAAA;AAAA,OAAY,SAAZ;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAK,MAAA,SAAS,EAAC,+BAAf;AAAA,kCAA6DJ,aAA7D,UAAgFF,cAAhF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAK,MAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAME,QAAC,cAAD;AACE,MAAA,WAAW,EAAIF,WADjB;AAEE,MAAA,cAAc,EAAIC,cAFpB;AAGE,MAAA,iBAAiB,EAAIE,iBAHvB;AAIE,MAAA,gBAAgB,EAAIE,gBAJtB;AAKE,MAAA,gBAAgB,EAAIE;AALtB;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CA5BD;;AA8BA,MAAME,WAAW,GAAGd,OAAO,CACvB;AACEe,EAAAA,MAAM,EAAE,YAAYX;AADtB,CADuB,EAIvB;AAAEY,EAAAA,GAAG,EAAE;AAAP,CAJuB,CAA3B;AAOE,eAAeF,WAAf","sourcesContent":["import React, { useState } from 'react';\nimport Layout from '../components/common/Layout';\nimport {authentication} from '../components/util/AuthenticationUtil';\nimport dynamic from \"next/dynamic\";\nimport {Button} from 'react-bootstrap';\nimport * as DatePickerUtil from '../components/util/DatePickerUtil';\nimport DailyTaskBoard from '../components/DailyTask/DailyTaskBoard';\n\n\nconst DailyTask: React.FC = () => {\n    // 初期表示フラグ\n    const [initDispFlg, setInitDispFlg] = useState<Boolean>(true);\n    // 合計タスク数\n    const [totalTaskCount, setTotalTaskCount] = useState<number>(0);\n    // 完了タスク数\n    const [doneTaskCount, setDoneTaskCount] = useState<number>(0);\n    // 合計Done時間\n    const [totalDoneTime, setTotalDoneTime] = useState<string>(\"\");\n\n    authentication();\n\n    return (\n        <Layout title={\"Daily Task : \" + DatePickerUtil.curentDateStrYYYYMMDD() + \".\"}>\n          <Button key=\"create\" variant=\"primary\" className=\"button_md margin_side_10\">create task</Button>\n          <Button key=\"history\" variant=\"success\" className=\"button_md\">history</Button>\n          <div className=\"display_inline margin_side_10\">Achievement: {doneTaskCount} of {totalTaskCount}</div>\n          <div className=\"display_inline margin_side_10\">TotalDoneTime: 2 h 30 m</div>\n\n          <DailyTaskBoard\n            initDispFlg = {initDispFlg}\n            setInitDispFlg = {setInitDispFlg}\n            setTotalTaskCount = {setTotalTaskCount}\n            setDoneTaskCount = {setDoneTaskCount}\n            setTotalDoneTime = {setTotalDoneTime}\n          />\n        </Layout>\n    )\n}\n\nconst DynamicTask = dynamic(\n    {\n      loader: async () => DailyTask,\n    },\n    { ssr: false }\n  );\n  \n  export default DynamicTask;"]},"metadata":{},"sourceType":"module"}