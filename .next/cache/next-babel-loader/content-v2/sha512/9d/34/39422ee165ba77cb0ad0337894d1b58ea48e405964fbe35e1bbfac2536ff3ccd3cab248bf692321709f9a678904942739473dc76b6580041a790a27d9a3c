{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/shumiya/Desktop/dev/react/shumipro_front/src/pages/index.tsx\";\nimport React, { useState } from 'react';\nimport Router from 'next/router';\nimport { Container, Button, Form } from 'react-bootstrap';\nimport styles from '../styles/Index.module.css';\nimport Axios from \"axios\";\n\nconst index = () => {\n  const {\n    0: username,\n    1: setUsername\n  } = useState(\"shumiya\");\n  const {\n    0: password,\n    1: setPassword\n  } = useState(\"shumiya\"); // cookieを使用するaxios生成\n\n  let client = Axios.create({\n    withCredentials: true\n  }); // ログイン処理\n\n  const login = () => {\n    if (username == \"\" || password == \"\") {\n      return false;\n    }\n\n    client.post(`${process.env.NEXT_PUBLIC_API_SERVER + process.env.NEXT_PUBLIC_API_LOGIN}`, createParams()).then(() => {\n      console.log('login success'); // セッションにログイン情報保持\n\n      sessionStorage.clear();\n      sessionStorage.setItem('n', username);\n      Router.push('/Task');\n    }).catch(err => {\n      console.log('err:', err);\n      Router.push('/Error?401');\n    });\n  };\n\n  const createUser = () => {\n    if (username == \"\" || password == \"\") {\n      return false;\n    }\n\n    console.log(`${process.env.NEXT_PUBLIC_API_SERVER + process.env.NEXT_PUBLIC_API_USER_NOAUTH}`);\n    client.post(`${process.env.NEXT_PUBLIC_API_SERVER + process.env.NEXT_PUBLIC_API_USER_NOAUTH}`, createJsonParams(), {\n      headers: {\n        'content-type': 'application/json'\n      }\n    }).then(() => {\n      console.log('Success to create user');\n      login();\n    }).catch(err => {\n      console.log('err:', err);\n      alert('Failed to create user');\n    });\n  };\n\n  const createParams = () => {\n    var params = new URLSearchParams();\n    params.append('username', username);\n    params.append('password', password);\n    return params;\n  };\n\n  const createJsonParams = () => {\n    var params = {\n      username: username,\n      password: password,\n      enabledflg: 1,\n      adminflg: 0\n    };\n    return JSON.stringify(params);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form_frame\",\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.login_str,\n          children: \"Task manager\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"User Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"User Name\",\n          onChange: e => setUsername(e.target.value),\n          value: username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"Password\",\n          onChange: e => setPassword(e.target.value),\n          value: password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-primary\",\n          size: \"lg\",\n          block: true,\n          onClick: login,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-success\",\n          size: \"lg\",\n          block: true,\n          onClick: createUser,\n          children: \"Create User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n\nexport default index;","map":{"version":3,"sources":["/Users/shumiya/Desktop/dev/react/shumipro_front/src/pages/index.tsx"],"names":["React","useState","Router","Container","Button","Form","styles","Axios","index","username","setUsername","password","setPassword","client","create","withCredentials","login","post","process","env","NEXT_PUBLIC_API_SERVER","NEXT_PUBLIC_API_LOGIN","createParams","then","console","log","sessionStorage","clear","setItem","push","catch","err","createUser","NEXT_PUBLIC_API_USER_NOAUTH","createJsonParams","headers","alert","params","URLSearchParams","append","enabledflg","adminflg","JSON","stringify","login_str","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Router from 'next/router';\nimport {Container, Button, Form} from 'react-bootstrap';\nimport styles from '../styles/Index.module.css';\nimport Axios from \"axios\";\n\nconst index: React.FC = () => {\n\n    const [username, setUsername] = useState<string>(\"shumiya\");\n    const [password, setPassword] = useState<string>(\"shumiya\");\n    // cookieを使用するaxios生成\n    let client = Axios.create({withCredentials: true});\n\n    // ログイン処理\n    const login = () => {\n        if (username == \"\" || password == \"\") {\n            return false;\n        }\n\n        client.post(`${process.env.NEXT_PUBLIC_API_SERVER + process.env.NEXT_PUBLIC_API_LOGIN}`, createParams())\n        .then(() => {\n            console.log('login success');\n            // セッションにログイン情報保持\n            sessionStorage.clear();\n            sessionStorage.setItem('n', username);\n\n            Router.push('/Task');\n\n        }).catch((err) => {\n            console.log('err:', err);\n            Router.push('/Error?401');\n        })\n    }\n\n    const createUser = () => {\n        if (username == \"\" || password == \"\") {\n            return false;\n        }\n        \n        console.log(`${process.env.NEXT_PUBLIC_API_SERVER + process.env.NEXT_PUBLIC_API_USER_NOAUTH}`);\n\n        client.post(`${process.env.NEXT_PUBLIC_API_SERVER + process.env.NEXT_PUBLIC_API_USER_NOAUTH}`\n                    , createJsonParams()\n                    , {headers: {'content-type': 'application/json'}})\n        .then(() => {\n            console.log('Success to create user');\n            login()\n        }).catch((err) => {\n            console.log('err:', err);\n            alert('Failed to create user');\n        })\n    }\n\n    const createParams = () => {\n        var params = new URLSearchParams();\n        params.append('username', username);\n        params.append('password', password);\n\n        return params;\n    }\n\n    const createJsonParams = () => {\n        var params = {\n            username: username,\n            password: password,\n            enabledflg: 1,\n            adminflg: 0\n        }\n        \n        return JSON.stringify(params);\n    }\n\n    return (\n        <div className=\"form_frame\">\n            <Container>\n                <Form>\n                    <p className={styles.login_str}>Task manager</p>\n                    <hr />\n                    <Form.Label>User Name</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"User Name\" onChange={(e: any) => setUsername(e.target.value)} value={username} />\n                    <br />\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Password\" onChange={(e: any) => setPassword(e.target.value)} value={password} />\n                    <br />\n                    <Button variant=\"outline-primary\" size=\"lg\" block onClick={login}>Login</Button>\n                    <br />\n                    <br />\n                    <Button variant=\"outline-success\" size=\"lg\" block onClick={createUser}>Create User</Button>\n                </Form>\n            </Container>\n            <hr />\n        </div>\n    )\n}\nexport default index;"]},"metadata":{},"sourceType":"module"}