{"ast":null,"code":"import _regeneratorRuntime from \"/Users/shumiya/Desktop/dev/react/shumipro_front/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/shumiya/Desktop/dev/react/shumipro_front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/shumiya/Desktop/dev/react/shumipro_front/src/pages/Task.tsx\",\n    _this = this;\n\nimport React from 'react';\nimport Link from 'next/link';\nimport Layout from '../components/Layout';\nimport TaskBoard from '../components/TaskBoard';\nimport { authentication } from '../components/Authentication';\nimport dynamic from \"next/dynamic\";\nimport { Button } from 'react-bootstrap';\nimport Axios from \"axios\";\nimport Router from 'next/router';\n\nvar Task = function Task() {\n  authentication(); // cookieを使用するaxios生成\n\n  var client = Axios.create({\n    withCredentials: true\n  });\n\n  var createTask = function createTask() {\n    var params = new URLSearchParams();\n    params.append('task', '');\n    params.append('priority', '');\n    params.append('status', '');\n    params.append('description', '');\n    client.post(process.env.NEXT_PUBLIC_API_SERVER + process.env.NEXT_PUBLIC_API_TASK, params).then(function (response) {\n      Router.push('/Task');\n    })[\"catch\"](function () {\n      Router.push('/Error?400');\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    title: \"Task.\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      className: \"button_md\",\n      onClick: createTask,\n      children: \"create task\"\n    }, \"create\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(TaskBoard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(Link, {\n      href: \"/\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        children: \"\\uFF1C\\uFF1C Back to login page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, _this);\n};\n\n_c = Task;\nvar DynamicTask = dynamic({\n  loader: function () {\n    var _loader = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", Task);\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function loader() {\n      return _loader.apply(this, arguments);\n    }\n\n    return loader;\n  }()\n}, {\n  ssr: false\n});\nexport default DynamicTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"sources":["/Users/shumiya/Desktop/dev/react/shumipro_front/src/pages/Task.tsx"],"names":["React","Link","Layout","TaskBoard","authentication","dynamic","Button","Axios","Router","Task","client","create","withCredentials","createTask","params","URLSearchParams","append","post","process","env","NEXT_PUBLIC_API_SERVER","NEXT_PUBLIC_API_TASK","then","response","push","DynamicTask","loader","ssr"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAAQC,cAAR,QAA6B,8BAA7B;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,SAAQC,MAAR,QAAqB,iBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;;AAGA,IAAMC,IAAc,GAAG,SAAjBA,IAAiB,GAAM;AACzBL,EAAAA,cAAc,GADW,CAGzB;;AACA,MAAIM,MAAM,GAAGH,KAAK,CAACI,MAAN,CAAa;AAAEC,IAAAA,eAAe,EAAE;AAAnB,GAAb,CAAb;;AAEA,MAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AAErB,QAAIC,MAAM,GAAG,IAAIC,eAAJ,EAAb;AACAD,IAAAA,MAAM,CAACE,MAAP,CAAc,MAAd,EAAsB,EAAtB;AACAF,IAAAA,MAAM,CAACE,MAAP,CAAc,UAAd,EAA0B,EAA1B;AACAF,IAAAA,MAAM,CAACE,MAAP,CAAc,QAAd,EAAwB,EAAxB;AACAF,IAAAA,MAAM,CAACE,MAAP,CAAc,aAAd,EAA6B,EAA7B;AAEAN,IAAAA,MAAM,CAACO,IAAP,CAAYC,OAAO,CAACC,GAAR,CAAYC,sBAAZ,GAAqCF,OAAO,CAACC,GAAR,CAAYE,oBAA7D,EAAmFP,MAAnF,EACCQ,IADD,CACO,UAAAC,QAAQ,EAAI;AAGff,MAAAA,MAAM,CAACgB,IAAP,CAAY,OAAZ;AAEH,KAND,WAMS,YAAM;AACXhB,MAAAA,MAAM,CAACgB,IAAP,CAAY,YAAZ;AACH,KARD;AASH,GAjBD;;AAmBA,sBACI,QAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,OAAd;AAAA,4BACI,QAAC,MAAD;AAAqB,MAAA,OAAO,EAAC,SAA7B;AAAuC,MAAA,SAAS,EAAC,WAAjD;AAA6D,MAAA,OAAO,EAAEX,UAAtE;AAAA;AAAA,OAAY,QAAZ;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,aAFJ,eAGI;AAAA;AAAA;AAAA;AAAA,aAHJ,eAII,QAAC,IAAD;AAAM,MAAA,IAAI,EAAC,GAAX;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,aAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAUH,CAnCD;;KAAMJ,I;AAqCN,IAAMgB,WAAW,GAAGpB,OAAO,CACvB;AACEqB,EAAAA,MAAM;AAAA,2EAAE;AAAA;AAAA;AAAA;AAAA;AAAA,+CAAYjB,IAAZ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AADR,CADuB,EAIvB;AAAEkB,EAAAA,GAAG,EAAE;AAAP,CAJuB,CAA3B;AAOE,eAAeF,WAAf","sourcesContent":["import React from 'react';\nimport Link from 'next/link';\nimport Layout from '../components/Layout';\nimport TaskBoard from '../components/TaskBoard';\nimport {authentication} from '../components/Authentication';\nimport dynamic from \"next/dynamic\";\nimport {Button} from 'react-bootstrap';\nimport Axios from \"axios\";\nimport Router from 'next/router';\n\n\nconst Task: React.FC = () => {\n    authentication();\n\n    // cookieを使用するaxios生成\n    let client = Axios.create({ withCredentials: true });\n\n    const createTask = () => {\n\n        var params = new URLSearchParams();\n        params.append('task', '');\n        params.append('priority', '');\n        params.append('status', '');\n        params.append('description', '');\n    \n        client.post(process.env.NEXT_PUBLIC_API_SERVER + process.env.NEXT_PUBLIC_API_TASK, params)\n        .then( response => {\n\n\n            Router.push('/Task');\n\n        }).catch(() => {\n            Router.push('/Error?400');\n        })\n    }\n\n    return (\n        <Layout title=\"Task.\">\n            <Button key=\"create\" variant=\"primary\" className=\"button_md\" onClick={createTask}>create task</Button>\n            <TaskBoard />\n            <br />\n            <Link href=\"/\">\n                <a>＜＜ Back to login page</a>\n            </Link>\n        </Layout>\n    )\n}\n\nconst DynamicTask = dynamic(\n    {\n      loader: async () => Task,\n    },\n    { ssr: false }\n  );\n  \n  export default DynamicTask;"]},"metadata":{},"sourceType":"module"}