{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/shumiya/Desktop/dev/react/shumipro_front/src/components/DailyTask/DailyTaskBoard.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport DailyTaskList from './DailyTaskList';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport { DailyTask } from '../common/interface';\nimport { getApiClient } from '../util/AuthenticationUtil';\nimport Router from 'next/router';\n\nconst DailyTaskBoard = props => {\n  // デイリータスク\n  const {\n    0: dailyTaskList,\n    1: setDailyTaskList\n  } = useState([]);\n  useEffect(() => {\n    props.setInitDispFlg(false);\n    callGetDailyTaskList();\n  }, [props.initDispFlg]);\n\n  const callGetDailyTaskList = () => {\n    var res = getDailyTaskList();\n    res.then(ret => setDailyTaskList(ret));\n\n    for (let task in dailyTaskList) {}\n\n    props.setTotalTaskCount(dailyTaskList.length);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(DndProvider, {\n      backend: HTML5Backend,\n      children: /*#__PURE__*/_jsxDEV(DailyTaskList, {\n        dailyTaskList: dailyTaskList,\n        setInitDispFlg: props.setInitDispFlg\n      }, \"DailyTaskList\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\nasync function getDailyTaskList() {\n  var dailyTaskList = [];\n\n  try {\n    const res = await getApiClient().get(process.env.NEXT_PUBLIC_API_DAILY_TASK);\n    dailyTaskList = createDailyTaskList(res.data);\n  } catch (error) {\n    Router.push('/Error?400');\n  }\n\n  return dailyTaskList;\n}\n\nfunction createDailyTaskList(responseData) {\n  let length = responseData.length;\n  var dailyTaskList = [];\n\n  for (var i = 0; i < length; i++) {\n    let dailyTask = new DailyTask(responseData[i][\"id\"], responseData[i][\"username\"], responseData[i][\"title\"], responseData[i][\"description\"], responseData[i][\"priority\"], responseData[i][\"quota\"], responseData[i][\"deleteFlg\"], responseData[i][\"createDate\"], responseData[i][\"doneDate\"], responseData[i][\"doneTime\"]);\n    dailyTaskList.push(dailyTask);\n  }\n\n  return dailyTaskList;\n}\n\nexport default DailyTaskBoard;","map":{"version":3,"sources":["/Users/shumiya/Desktop/dev/react/shumipro_front/src/components/DailyTask/DailyTaskBoard.tsx"],"names":["React","useState","useEffect","DailyTaskList","DndProvider","HTML5Backend","DailyTask","getApiClient","Router","DailyTaskBoard","props","dailyTaskList","setDailyTaskList","setInitDispFlg","callGetDailyTaskList","initDispFlg","res","getDailyTaskList","then","ret","task","setTotalTaskCount","length","get","process","env","NEXT_PUBLIC_API_DAILY_TASK","createDailyTaskList","data","error","push","responseData","i","dailyTask"],"mappings":";;AAAA,OAAOA,KAAP,IAA0CC,QAA1C,EAAoDC,SAApD,QAAoE,OAApE;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,WAAT,QAA4B,WAA5B;AACA,SAAQC,YAAR,QAA2B,yBAA3B;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,SAAQC,YAAR,QAA2B,4BAA3B;AACA,OAAOC,MAAP,MAAmB,aAAnB;;AAUA,MAAMC,cAA6C,GAAIC,KAAD,IAAW;AAC7D;AACA,QAAM;AAAA,OAACC,aAAD;AAAA,OAAgBC;AAAhB,MAAoCX,QAAQ,CAAc,EAAd,CAAlD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,KAAK,CAACG,cAAN,CAAqB,KAArB;AACAC,IAAAA,oBAAoB;AACvB,GAHQ,EAGN,CAACJ,KAAK,CAACK,WAAP,CAHM,CAAT;;AAKA,QAAMD,oBAAoB,GAAG,MAAM;AAC/B,QAAIE,GAAyB,GAAGC,gBAAgB,EAAhD;AACAD,IAAAA,GAAG,CAACE,IAAJ,CAASC,GAAG,IAAIP,gBAAgB,CAACO,GAAD,CAAhC;;AAEA,SAAK,IAAIC,IAAT,IAAiBT,aAAjB,EAAgC,CAE/B;;AACDD,IAAAA,KAAK,CAACW,iBAAN,CAAwBV,aAAa,CAACW,MAAtC;AACH,GARD;;AAUA,sBACI;AAAA,2BACI,QAAC,WAAD;AAAa,MAAA,OAAO,EAAEjB,YAAtB;AAAA,6BACI,QAAC,aAAD;AAAmC,QAAA,aAAa,EAAEM,aAAlD;AAAiE,QAAA,cAAc,EAAED,KAAK,CAACG;AAAvF,SAAmB,eAAnB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CA1BD;;AA4BA,eAAeI,gBAAf,GAAiC;AAC7B,MAAIN,aAA2B,GAAG,EAAlC;;AAEA,MAAI;AACA,UAAMK,GAAG,GAAG,MAAMT,YAAY,GAAGgB,GAAf,CAAmBC,OAAO,CAACC,GAAR,CAAYC,0BAA/B,CAAlB;AACAf,IAAAA,aAAa,GAAGgB,mBAAmB,CAACX,GAAG,CAACY,IAAL,CAAnC;AACH,GAHD,CAGE,OAAMC,KAAN,EAAY;AACVrB,IAAAA,MAAM,CAACsB,IAAP,CAAY,YAAZ;AACH;;AACD,SAAOnB,aAAP;AACH;;AAED,SAASgB,mBAAT,CAA6BI,YAA7B,EAA8D;AAC1D,MAAIT,MAAc,GAAGS,YAAY,CAACT,MAAlC;AACA,MAAIX,aAA0B,GAAG,EAAjC;;AAEA,OAAK,IAAIqB,CAAC,GAAG,CAAb,EAAiBA,CAAC,GAAGV,MAArB,EAA8BU,CAAC,EAA/B,EAAmC;AAE/B,QAAIC,SAAS,GAAG,IAAI3B,SAAJ,CAAcyB,YAAY,CAACC,CAAD,CAAZ,CAAgB,IAAhB,CAAd,EAAqCD,YAAY,CAACC,CAAD,CAAZ,CAAgB,UAAhB,CAArC,EAChBD,YAAY,CAACC,CAAD,CAAZ,CAAgB,OAAhB,CADgB,EACUD,YAAY,CAACC,CAAD,CAAZ,CAAgB,aAAhB,CADV,EAC0CD,YAAY,CAACC,CAAD,CAAZ,CAAgB,UAAhB,CAD1C,EAEhBD,YAAY,CAACC,CAAD,CAAZ,CAAgB,OAAhB,CAFgB,EAEUD,YAAY,CAACC,CAAD,CAAZ,CAAgB,WAAhB,CAFV,EAEwCD,YAAY,CAACC,CAAD,CAAZ,CAAgB,YAAhB,CAFxC,EAGhBD,YAAY,CAACC,CAAD,CAAZ,CAAgB,UAAhB,CAHgB,EAGaD,YAAY,CAACC,CAAD,CAAZ,CAAgB,UAAhB,CAHb,CAAhB;AAKArB,IAAAA,aAAa,CAACmB,IAAd,CAAmBG,SAAnB;AACH;;AAED,SAAOtB,aAAP;AACH;;AAED,eAAeF,cAAf","sourcesContent":["import React, { Dispatch, SetStateAction, useState, useEffect} from 'react';\nimport DailyTaskList from './DailyTaskList';\nimport { DndProvider } from 'react-dnd';\nimport {HTML5Backend} from 'react-dnd-html5-backend';\nimport { DailyTask } from '../common/interface';\nimport {getApiClient} from '../util/AuthenticationUtil';\nimport Router from 'next/router';\n\ninterface DailyTaskBoardProps {\n    initDispFlg: Boolean;\n    setInitDispFlg: Dispatch<SetStateAction<Boolean>>;\n    setTotalTaskCount: Dispatch<SetStateAction<number>>;\n    setDoneTaskCount: Dispatch<SetStateAction<number>>;\n    setTotalDoneTime: Dispatch<SetStateAction<string>>;\n}\n\nconst DailyTaskBoard: React.FC<DailyTaskBoardProps> = (props) => {\n    // デイリータスク\n    const [dailyTaskList, setDailyTaskList] = useState<DailyTask[]>([]);\n \n    useEffect(() => {\n        props.setInitDispFlg(false);\n        callGetDailyTaskList();\n    }, [props.initDispFlg]);\n\n    const callGetDailyTaskList = () => {\n        var res: Promise<DailyTask[]> = getDailyTaskList();\n        res.then(ret => setDailyTaskList(ret));\n\n        for (let task in dailyTaskList) {\n\n        }\n        props.setTotalTaskCount(dailyTaskList.length)\n    }\n\n    return (\n        <div>\n            <DndProvider backend={HTML5Backend}>\n                <DailyTaskList key=\"DailyTaskList\" dailyTaskList={dailyTaskList} setInitDispFlg={props.setInitDispFlg}/>\n            </DndProvider>\n        </div>\n    )\n}\n\nasync function getDailyTaskList(){\n    var dailyTaskList : DailyTask[] = [];\n\n    try {\n        const res = await getApiClient().get(process.env.NEXT_PUBLIC_API_DAILY_TASK);\n        dailyTaskList = createDailyTaskList(res.data);\n    } catch(error){\n        Router.push('/Error?400');\n    }\n    return dailyTaskList;\n}\n\nfunction createDailyTaskList(responseData: any[]): DailyTask[]{\n    let length: number = responseData.length;\n    var dailyTaskList :DailyTask[] = [];\n\n    for (var i = 0 ; i < length ; i++) {\n\n        let dailyTask = new DailyTask(responseData[i][\"id\"], responseData[i][\"username\"], \n        responseData[i][\"title\"], responseData[i][\"description\"], responseData[i][\"priority\"], \n        responseData[i][\"quota\"], responseData[i][\"deleteFlg\"], responseData[i][\"createDate\"],\n        responseData[i][\"doneDate\"], responseData[i][\"doneTime\"]);\n\n        dailyTaskList.push(dailyTask);\n    }\n\n    return dailyTaskList;\n}\n\nexport default DailyTaskBoard;"]},"metadata":{},"sourceType":"module"}