{"ast":null,"code":"import _regeneratorRuntime from \"/app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState, useEffect } from 'react';\nimport DailyTaskList from './DailyTaskList';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport { DailyTask } from '../common/interface';\nimport { getApiClient } from '../util/AuthenticationUtil';\nimport Router from 'next/router';\nimport * as NumberUtil from '../util/NumberUtil';\n\nvar DailyTaskBoard = function DailyTaskBoard(props) {\n  // デイリータスク\n  var _useState = useState([]),\n      dailyTaskList = _useState[0],\n      setDailyTaskList = _useState[1];\n\n  useEffect(function () {\n    props.setInitDispFlg(false);\n    callGetDailyTaskList();\n  }, [props.initDispFlg, props.includeDeleteFlg]);\n\n  var callGetDailyTaskList = function callGetDailyTaskList() {\n    var res = getDailyTaskList(props.includeDeleteFlg);\n    res.then(function (ret) {\n      setDailyTaskList(ret);\n      var doneTaskCount = 0;\n      var totalDoneTime = 0;\n      var deleteTaskCount = 0;\n\n      for (var i = 0; i < ret.length; i++) {\n        if (ret[i].deleteFlg == 1) {\n          deleteTaskCount++;\n          continue;\n        }\n\n        if (ret[i].quota <= ret[i].doneTime) {\n          doneTaskCount++;\n        }\n\n        totalDoneTime += ret[i].doneTime;\n      }\n\n      props.setTotalTaskCount(ret.length - deleteTaskCount);\n      props.setDoneTaskCount(doneTaskCount);\n      props.setTotalDoneTime(NumberUtil.convertHourMinute(totalDoneTime));\n    });\n  };\n\n  return /*#__PURE__*/_jsx(\"div\", {\n    children: /*#__PURE__*/_jsx(DndProvider, {\n      backend: HTML5Backend,\n      children: /*#__PURE__*/_jsx(DailyTaskList, {\n        dailyTaskList: dailyTaskList,\n        setInitDispFlg: props.setInitDispFlg,\n        showDailyTaskEditModal: props.showDailyTaskEditModal\n      }, \"DailyTaskList\")\n    })\n  });\n};\n\nfunction getDailyTaskList(_x) {\n  return _getDailyTaskList.apply(this, arguments);\n}\n\nfunction _getDailyTaskList() {\n  _getDailyTaskList = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(includeDeleteFlg) {\n    var dailyTaskList, res;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            dailyTaskList = [];\n            _context.prev = 1;\n            _context.next = 4;\n            return getApiClient().get(process.env.NEXT_PUBLIC_API_DAILY_TASK, {\n              params: {\n                includeDeleteFlg: includeDeleteFlg\n              }\n            });\n\n          case 4:\n            res = _context.sent;\n            dailyTaskList = createDailyTaskList(res.data);\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](1);\n            Router.push('/Error?400');\n\n          case 11:\n            return _context.abrupt(\"return\", dailyTaskList);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 8]]);\n  }));\n  return _getDailyTaskList.apply(this, arguments);\n}\n\nfunction createDailyTaskList(responseData) {\n  var length = responseData.length;\n  var dailyTaskList = [];\n\n  for (var i = 0; i < length; i++) {\n    var dailyTask = new DailyTask(responseData[i][\"id\"], responseData[i][\"username\"], responseData[i][\"title\"], responseData[i][\"description\"], responseData[i][\"priority\"], responseData[i][\"quota\"], responseData[i][\"deleteFlg\"], responseData[i][\"createDate\"], responseData[i][\"deleteDate\"], responseData[i][\"doneDate\"], responseData[i][\"doneTime\"]);\n    dailyTaskList.push(dailyTask);\n  }\n\n  return dailyTaskList;\n}\n\nexport default DailyTaskBoard;","map":null,"metadata":{},"sourceType":"module"}