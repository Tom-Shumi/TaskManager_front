{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/shumiya/Desktop/dev/react/shumipro_front/src/components/TaskList.tsx\";\nimport React from 'react';\nimport TaskItem from '../components/TaskItem';\nimport styles from '../styles/TaskList.module.css';\n\nconst TaskList = props => {\n  var status_str = conversionStatus(props.status);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.task_list,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.task_status,\n      children: [status_str, \" [\", Object.keys(props.taskList).length, \"]\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), props.taskList.map(task_item => /*#__PURE__*/_jsxDEV(TaskItem, {\n      task: task_item\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 21\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n\nfunction conversionStatus(status) {\n  var str;\n\n  switch (status) {\n    case \"1\":\n      str = 'NOT STARTED';\n      break;\n\n    case \"2\":\n      str = 'IN PROGRESS';\n      break;\n\n    case \"3\":\n      str = 'DONE';\n      break;\n  }\n\n  return str;\n}\n\nexport default TaskList;","map":{"version":3,"sources":["/Users/shumiya/Desktop/dev/react/shumipro_front/src/components/TaskList.tsx"],"names":["React","TaskItem","styles","TaskList","props","status_str","conversionStatus","status","task_list","task_status","Object","keys","taskList","length","map","task_item","str"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,MAAP,MAAmB,+BAAnB;;AAQA,MAAMC,QAAiC,GAAIC,KAAD,IAAW;AACjD,MAAIC,UAAU,GAAGC,gBAAgB,CAACF,KAAK,CAACG,MAAP,CAAjC;AACA,sBACI;AAAK,IAAA,SAAS,EAAEL,MAAM,CAACM,SAAvB;AAAA,4BACI;AAAG,MAAA,SAAS,EAAEN,MAAM,CAACO,WAArB;AAAA,iBAAmCJ,UAAnC,QAAiDK,MAAM,CAACC,IAAP,CAAYP,KAAK,CAACQ,QAAlB,EAA4BC,MAA7E;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAGQT,KAAK,CAACQ,QAAN,CAAeE,GAAf,CAAmBC,SAAS,iBACxB,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEA;AAAhB;AAAA;AAAA;AAAA;AAAA,YADJ,CAHR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAZD;;AAcA,SAAST,gBAAT,CAA0BC,MAA1B,EAAyC;AACrC,MAAIS,GAAJ;;AACA,UAAOT,MAAP;AACI,SAAK,GAAL;AACIS,MAAAA,GAAG,GAAG,aAAN;AACA;;AACJ,SAAK,GAAL;AACIA,MAAAA,GAAG,GAAG,aAAN;AACA;;AACJ,SAAK,GAAL;AACIA,MAAAA,GAAG,GAAG,MAAN;AACA;AATR;;AAWA,SAAOA,GAAP;AACH;;AAED,eAAeb,QAAf","sourcesContent":["import React from 'react';\nimport TaskItem from '../components/TaskItem';\nimport styles from '../styles/TaskList.module.css';\nimport { Task } from './interface';\n\ninterface TaskListProps {\n    taskList: Task[];\n    status: string;\n}\n\nconst TaskList: React.FC<TaskListProps> = (props) => {\n    var status_str = conversionStatus(props.status);\n    return (\n        <div className={styles.task_list}>\n            <p className={styles.task_status}>{status_str} [{Object.keys(props.taskList).length}]</p>\n            {\n                props.taskList.map(task_item => (\n                    <TaskItem task={task_item} />\n                ))\n            }\n        </div>\n    )\n}\n\nfunction conversionStatus(status: string){\n    var str: string;\n    switch(status) {\n        case \"1\":\n            str = 'NOT STARTED';\n            break;\n        case \"2\":\n            str = 'IN PROGRESS';\n            break;\n        case \"3\":\n            str = 'DONE';\n            break;\n    }\n    return str;\n}\n\nexport default TaskList;"]},"metadata":{},"sourceType":"module"}