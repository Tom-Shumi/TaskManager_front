{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/shumiya/Desktop/dev/react/shumipro_front/src/components/TaskList.tsx\",\n    _this = this;\n\nimport React from 'react';\nimport TaskItem from '../components/TaskItem';\nimport styles from '../styles/TaskList.module.css';\n\nvar TaskList = function TaskList(props) {\n  var status_str = conversionStatus(props.status);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.task_list,\n    children: [status_str, \" [\", Object.keys(props.taskList).length, \"]\", props.taskList.map(function (task_item) {\n      return /*#__PURE__*/_jsxDEV(TaskItem, {\n        task: task_item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }, _this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, _this);\n};\n\n_c = TaskList;\n\nfunction conversionStatus(status) {\n  var str;\n\n  switch (status) {\n    case \"1\":\n      str = 'NOT STARTED';\n      break;\n\n    case \"2\":\n      str = 'IN PROGRESS';\n      break;\n\n    case \"3\":\n      str = 'DONE';\n      break;\n  }\n\n  return str;\n}\n\nexport default TaskList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"sources":["/Users/shumiya/Desktop/dev/react/shumipro_front/src/components/TaskList.tsx"],"names":["React","TaskItem","styles","TaskList","props","status_str","conversionStatus","status","task_list","Object","keys","taskList","length","map","task_item","str"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,MAAP,MAAmB,+BAAnB;;AAQA,IAAMC,QAAiC,GAAG,SAApCA,QAAoC,CAACC,KAAD,EAAW;AACjD,MAAIC,UAAU,GAAGC,gBAAgB,CAACF,KAAK,CAACG,MAAP,CAAjC;AACA,sBACI;AAAK,IAAA,SAAS,EAAEL,MAAM,CAACM,SAAvB;AAAA,eACKH,UADL,QACmBI,MAAM,CAACC,IAAP,CAAYN,KAAK,CAACO,QAAlB,EAA4BC,MAD/C,OAGQR,KAAK,CAACO,QAAN,CAAeE,GAAf,CAAmB,UAAAC,SAAS;AAAA,0BACxB,QAAC,QAAD;AAAU,QAAA,IAAI,EAAEA;AAAhB;AAAA;AAAA;AAAA;AAAA,eADwB;AAAA,KAA5B,CAHR;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAUH,CAZD;;KAAMX,Q;;AAcN,SAASG,gBAAT,CAA0BC,MAA1B,EAAyC;AACrC,MAAIQ,GAAJ;;AACA,UAAOR,MAAP;AACI,SAAK,GAAL;AACIQ,MAAAA,GAAG,GAAG,aAAN;AACA;;AACJ,SAAK,GAAL;AACIA,MAAAA,GAAG,GAAG,aAAN;AACA;;AACJ,SAAK,GAAL;AACIA,MAAAA,GAAG,GAAG,MAAN;AACA;AATR;;AAWA,SAAOA,GAAP;AACH;;AAED,eAAeZ,QAAf","sourcesContent":["import React from 'react';\nimport TaskItem from '../components/TaskItem';\nimport styles from '../styles/TaskList.module.css';\nimport { Task } from './interface';\n\ninterface TaskListProps {\n    taskList: Task[];\n    status: string;\n}\n\nconst TaskList: React.FC<TaskListProps> = (props) => {\n    var status_str = conversionStatus(props.status);\n    return (\n        <div className={styles.task_list}>\n            {status_str} [{Object.keys(props.taskList).length}]\n            {\n                props.taskList.map(task_item => (\n                    <TaskItem task={task_item} />\n                ))\n            }\n        </div>\n    )\n}\n\nfunction conversionStatus(status: string){\n    var str: string;\n    switch(status) {\n        case \"1\":\n            str = 'NOT STARTED';\n            break;\n        case \"2\":\n            str = 'IN PROGRESS';\n            break;\n        case \"3\":\n            str = 'DONE';\n            break;\n    }\n    return str;\n}\n\nexport default TaskList;"]},"metadata":{},"sourceType":"module"}