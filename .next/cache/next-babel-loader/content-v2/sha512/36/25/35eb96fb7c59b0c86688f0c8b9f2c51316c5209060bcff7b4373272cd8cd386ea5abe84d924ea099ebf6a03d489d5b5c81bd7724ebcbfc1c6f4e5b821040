{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/shumiya/Desktop/dev/react/shumipro_front/src/pages/DailyTask.tsx\";\nimport React, { useState } from 'react';\nimport Layout from '../components/common/Layout';\nimport { authentication } from '../components/util/AuthenticationUtil';\nimport dynamic from \"next/dynamic\";\nimport { Button } from 'react-bootstrap';\nimport * as DatePickerUtil from '../components/util/DatePickerUtil';\nimport DailyTaskBoard from '../components/DailyTask/DailyTaskBoard';\n\nconst DailyTask = () => {\n  // 初期表示フラグ\n  const {\n    0: initDispFlg,\n    1: setInitDispFlg\n  } = useState(true);\n  authentication();\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    title: \"Daily Task : \" + DatePickerUtil.curentDateStrYYYYMMDD() + \".\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      className: \"button_md margin_side_10\",\n      children: \"create task\"\n    }, \"create\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"success\",\n      className: \"button_md\",\n      children: \"history\"\n    }, \"history\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"display_inline margin_side_10\",\n      children: \"Achievement : 5 of 10\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(DailyTaskBoard, {\n      initDispFlg: initDispFlg,\n      setInitDispFlg: setInitDispFlg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\nconst DynamicTask = dynamic({\n  loader: async () => DailyTask\n}, {\n  ssr: false\n});\nexport default DynamicTask;","map":{"version":3,"sources":["/Users/shumiya/Desktop/dev/react/shumipro_front/src/pages/DailyTask.tsx"],"names":["React","useState","Layout","authentication","dynamic","Button","DatePickerUtil","DailyTaskBoard","DailyTask","initDispFlg","setInitDispFlg","curentDateStrYYYYMMDD","DynamicTask","loader","ssr"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,SAAQC,cAAR,QAA6B,uCAA7B;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,SAAQC,MAAR,QAAqB,iBAArB;AACA,OAAO,KAAKC,cAAZ,MAAgC,mCAAhC;AACA,OAAOC,cAAP,MAA2B,wCAA3B;;AAGA,MAAMC,SAAmB,GAAG,MAAM;AAC9B;AACA,QAAM;AAAA,OAACC,WAAD;AAAA,OAAcC;AAAd,MAAgCT,QAAQ,CAAU,IAAV,CAA9C;AAEAE,EAAAA,cAAc;AAEd,sBACI,QAAC,MAAD;AAAQ,IAAA,KAAK,EAAE,kBAAkBG,cAAc,CAACK,qBAAf,EAAlB,GAA2D,GAA1E;AAAA,4BACE,QAAC,MAAD;AAAqB,MAAA,OAAO,EAAC,SAA7B;AAAuC,MAAA,SAAS,EAAC,0BAAjD;AAAA;AAAA,OAAY,QAAZ;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAsB,MAAA,OAAO,EAAC,SAA9B;AAAwC,MAAA,SAAS,EAAC,WAAlD;AAAA;AAAA,OAAY,SAAZ;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAK,MAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAKE,QAAC,cAAD;AACE,MAAA,WAAW,EAAIF,WADjB;AAEE,MAAA,cAAc,EAAIC;AAFpB;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAlBD;;AAoBA,MAAME,WAAW,GAAGR,OAAO,CACvB;AACES,EAAAA,MAAM,EAAE,YAAYL;AADtB,CADuB,EAIvB;AAAEM,EAAAA,GAAG,EAAE;AAAP,CAJuB,CAA3B;AAOE,eAAeF,WAAf","sourcesContent":["import React, { useState } from 'react';\nimport Layout from '../components/common/Layout';\nimport {authentication} from '../components/util/AuthenticationUtil';\nimport dynamic from \"next/dynamic\";\nimport {Button} from 'react-bootstrap';\nimport * as DatePickerUtil from '../components/util/DatePickerUtil';\nimport DailyTaskBoard from '../components/DailyTask/DailyTaskBoard';\n\n\nconst DailyTask: React.FC = () => {\n    // 初期表示フラグ\n    const [initDispFlg, setInitDispFlg] = useState<Boolean>(true);\n\n    authentication();\n\n    return (\n        <Layout title={\"Daily Task : \" + DatePickerUtil.curentDateStrYYYYMMDD() + \".\"}>\n          <Button key=\"create\" variant=\"primary\" className=\"button_md margin_side_10\">create task</Button>\n          <Button key=\"history\" variant=\"success\" className=\"button_md\">history</Button>\n          <div className=\"display_inline margin_side_10\">Achievement : 5 of 10</div>\n\n          <DailyTaskBoard\n            initDispFlg = {initDispFlg}\n            setInitDispFlg = {setInitDispFlg}\n          />\n        </Layout>\n    )\n}\n\nconst DynamicTask = dynamic(\n    {\n      loader: async () => DailyTask,\n    },\n    { ssr: false }\n  );\n  \n  export default DynamicTask;"]},"metadata":{},"sourceType":"module"}