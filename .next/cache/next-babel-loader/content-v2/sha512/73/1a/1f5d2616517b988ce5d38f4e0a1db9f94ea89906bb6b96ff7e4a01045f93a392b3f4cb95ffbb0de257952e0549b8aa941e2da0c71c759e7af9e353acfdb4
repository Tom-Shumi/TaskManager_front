{"ast":null,"code":"import _regeneratorRuntime from \"/Users/shumiya/Desktop/dev/react/shumipro_front/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/shumiya/Desktop/dev/react/shumipro_front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/shumiya/Desktop/dev/react/shumipro_front/src/components/DailyTask/DailyTaskBoard.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport DailyTaskList from './DailyTaskList';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport { DailyTask } from '../common/interface';\nimport { getApiClient } from '../util/AuthenticationUtil';\nimport Router from 'next/router';\nimport * as NumberUtil from '../util/NumberUtil';\n\nvar DailyTaskBoard = function DailyTaskBoard(props) {\n  _s();\n\n  // デイリータスク\n  var _useState = useState([]),\n      dailyTaskList = _useState[0],\n      setDailyTaskList = _useState[1];\n\n  useEffect(function () {\n    props.setInitDispFlg(false);\n    callGetDailyTaskList();\n  }, [props.initDispFlg, props.includeDeleteFlg]);\n\n  var callGetDailyTaskList = function callGetDailyTaskList() {\n    var res = getDailyTaskList(props.includeDeleteFlg);\n    res.then(function (ret) {\n      setDailyTaskList(ret);\n      var doneTaskCount = 0;\n      var totalDoneTime = 0;\n      var deleteTaskCount = 0;\n\n      for (var i = 0; i < ret.length; i++) {\n        if (ret[i].deleteFlg == 1) {\n          deleteTaskCount++;\n          continue;\n        }\n\n        if (ret[i].quota <= ret[i].doneTime) {\n          doneTaskCount++;\n        }\n\n        totalDoneTime += ret[i].doneTime;\n      }\n\n      props.setTotalTaskCount(ret.length - deleteTaskCount);\n      props.setDoneTaskCount(doneTaskCount);\n      props.setTotalDoneTime(NumberUtil.convertHourMinute(totalDoneTime));\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(DndProvider, {\n      backend: HTML5Backend,\n      children: /*#__PURE__*/_jsxDEV(DailyTaskList, {\n        dailyTaskList: dailyTaskList,\n        setInitDispFlg: props.setInitDispFlg\n      }, \"DailyTaskList\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(DailyTaskBoard, \"GTRfM133C31NpejqYX29v2hdCY4=\");\n\n_c = DailyTaskBoard;\n\nfunction getDailyTaskList(_x) {\n  return _getDailyTaskList.apply(this, arguments);\n}\n\nfunction _getDailyTaskList() {\n  _getDailyTaskList = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(includeDeleteFlg) {\n    var dailyTaskList, res;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            dailyTaskList = [];\n            _context.prev = 1;\n            _context.next = 4;\n            return getApiClient().get(process.env.NEXT_PUBLIC_API_DAILY_TASK, {\n              params: {\n                includeDeleteFlg: includeDeleteFlg\n              }\n            });\n\n          case 4:\n            res = _context.sent;\n            dailyTaskList = createDailyTaskList(res.data);\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](1);\n            Router.push('/Error?400');\n\n          case 11:\n            return _context.abrupt(\"return\", dailyTaskList);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 8]]);\n  }));\n  return _getDailyTaskList.apply(this, arguments);\n}\n\nfunction createDailyTaskList(responseData) {\n  var length = responseData.length;\n  var dailyTaskList = [];\n\n  for (var i = 0; i < length; i++) {\n    var dailyTask = new DailyTask(responseData[i][\"id\"], responseData[i][\"username\"], responseData[i][\"title\"], responseData[i][\"description\"], responseData[i][\"priority\"], responseData[i][\"quota\"], responseData[i][\"deleteFlg\"], responseData[i][\"createDate\"], responseData[i][\"doneDate\"], responseData[i][\"doneTime\"]);\n    dailyTaskList.push(dailyTask);\n  }\n\n  return dailyTaskList;\n}\n\nexport default DailyTaskBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"DailyTaskBoard\");","map":{"version":3,"sources":["/Users/shumiya/Desktop/dev/react/shumipro_front/src/components/DailyTask/DailyTaskBoard.tsx"],"names":["React","useState","useEffect","DailyTaskList","DndProvider","HTML5Backend","DailyTask","getApiClient","Router","NumberUtil","DailyTaskBoard","props","dailyTaskList","setDailyTaskList","setInitDispFlg","callGetDailyTaskList","initDispFlg","includeDeleteFlg","res","getDailyTaskList","then","ret","doneTaskCount","totalDoneTime","deleteTaskCount","i","length","deleteFlg","quota","doneTime","setTotalTaskCount","setDoneTaskCount","setTotalDoneTime","convertHourMinute","get","process","env","NEXT_PUBLIC_API_DAILY_TASK","params","createDailyTaskList","data","push","responseData","dailyTask"],"mappings":"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","sourcesContent":["import React, { Dispatch, SetStateAction, useState, useEffect} from 'react';\nimport DailyTaskList from './DailyTaskList';\nimport { DndProvider } from 'react-dnd';\nimport {HTML5Backend} from 'react-dnd-html5-backend';\nimport { DailyTask } from '../common/interface';\nimport {getApiClient} from '../util/AuthenticationUtil';\nimport Router from 'next/router';\nimport * as NumberUtil from '../util/NumberUtil';\n\ninterface DailyTaskBoardProps {\n    initDispFlg: Boolean;\n    includeDeleteFlg: number;\n    setInitDispFlg: Dispatch<SetStateAction<Boolean>>;\n    setTotalTaskCount: Dispatch<SetStateAction<number>>;\n    setDoneTaskCount: Dispatch<SetStateAction<number>>;\n    setTotalDoneTime: Dispatch<SetStateAction<string>>;\n    showDailyTaskEditModal: (DailyTask) => void;\n}\n\nconst DailyTaskBoard: React.FC<DailyTaskBoardProps> = (props) => {\n    // デイリータスク\n    const [dailyTaskList, setDailyTaskList] = useState<DailyTask[]>([]);\n \n    useEffect(() => {\n        props.setInitDispFlg(false);\n        callGetDailyTaskList();\n    }, [props.initDispFlg, props.includeDeleteFlg]);\n\n    const callGetDailyTaskList = () => {\n        var res: Promise<DailyTask[]> = getDailyTaskList(props.includeDeleteFlg);\n        res.then(ret => {\n            setDailyTaskList(ret);\n            let doneTaskCount = 0;\n            let totalDoneTime = 0;\n            let deleteTaskCount = 0;\n            for (var i = 0 ; i < ret.length ; i++) {\n                if (ret[i].deleteFlg == 1) {\n                    deleteTaskCount++;\n                    continue;\n                }\n                if (ret[i].quota <= ret[i].doneTime) {\n                    doneTaskCount++;\n                }\n                totalDoneTime += ret[i].doneTime\n            }\n            props.setTotalTaskCount(ret.length - deleteTaskCount);\n            props.setDoneTaskCount(doneTaskCount);\n            props.setTotalDoneTime(NumberUtil.convertHourMinute(totalDoneTime));\n        });\n    }\n\n    return (\n        <div>\n            <DndProvider backend={HTML5Backend}>\n                <DailyTaskList key=\"DailyTaskList\" dailyTaskList={dailyTaskList} setInitDispFlg={props.setInitDispFlg}/>\n            </DndProvider>\n        </div>\n    )\n}\n\nasync function getDailyTaskList(includeDeleteFlg: number){\n\n    var dailyTaskList : DailyTask[] = [];\n\n    try {\n        const res = await getApiClient().get(process.env.NEXT_PUBLIC_API_DAILY_TASK, {\n            params: {\n                includeDeleteFlg: includeDeleteFlg\n            }\n        });\n        dailyTaskList = createDailyTaskList(res.data);\n    } catch(error){\n        Router.push('/Error?400');\n    }\n    return dailyTaskList;\n}\n\nfunction createDailyTaskList(responseData: any[]): DailyTask[]{\n    let length: number = responseData.length;\n    var dailyTaskList :DailyTask[] = [];\n\n    for (var i = 0 ; i < length ; i++) {\n\n        let dailyTask = new DailyTask(responseData[i][\"id\"], responseData[i][\"username\"], \n        responseData[i][\"title\"], responseData[i][\"description\"], responseData[i][\"priority\"], \n        responseData[i][\"quota\"], responseData[i][\"deleteFlg\"], responseData[i][\"createDate\"],\n        responseData[i][\"doneDate\"], responseData[i][\"doneTime\"]);\n\n        dailyTaskList.push(dailyTask);\n    }\n\n    return dailyTaskList;\n}\n\nexport default DailyTaskBoard;"]},"metadata":{},"sourceType":"module"}