{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState, useEffect } from 'react';\nimport DailyTaskHistoryList from './DailyTaskHistoryList';\nimport { DailyTaskHistory } from '../common/interface';\nimport { getApiClient } from '../util/AuthenticationUtil';\nimport Router from 'next/router';\nimport * as DatePickerUtil from '../util/DatePickerUtil';\nimport styles from '../../styles/DailyTaskHistoryBoard.module.css';\n\nconst DailyTaskHistoryBoard = props => {\n  const {\n    0: dailyTaskHistoryList,\n    1: setDailyTaskHistoryList\n  } = useState([]);\n  useEffect(() => {\n    callGetDailyTaskHistoryList();\n  }, []);\n\n  const callGetDailyTaskHistoryList = () => {\n    var res = getDailyTaskHistoryList(props.targetDate);\n    res.then(ret => {\n      setDailyTaskHistoryList(ret);\n    });\n  };\n\n  const loadNextHistory = () => {\n    let nextTargetDate = new Date(props.targetDate);\n    let diff = props.targetDateDiff + 5;\n    nextTargetDate.setDate(nextTargetDate.getDate() - diff);\n\n    try {\n      getApiClient().get(process.env.NEXT_PUBLIC_API_DAILY_TASK_HISTORY, {\n        params: {\n          nextTargetDate: DatePickerUtil.dateStrYYYYMMDD(nextTargetDate)\n        }\n      }).then(res => {\n        let taskCommentList = createDailyTaskHistoryList(res.data);\n        setDailyTaskHistoryList([...dailyTaskHistoryList, ...taskCommentList]);\n        props.setTargetDateDiff(diff);\n      });\n    } catch (error) {\n      Router.push('/Error?400');\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    children: [/*#__PURE__*/_jsx(DailyTaskHistoryList, {\n      dailyTaskHistoryList: dailyTaskHistoryList,\n      targetDate: props.targetDate,\n      showDailyTaskHistoryDetailModal: props.showDailyTaskHistoryDetailModal\n    }, \"DailyTaskHistoryList\"), /*#__PURE__*/_jsx(\"div\", {\n      className: styles.daily_task_history_load,\n      onClick: loadNextHistory,\n      children: /*#__PURE__*/_jsx(\"i\", {\n        className: \"fa fa-arrow-circle-down faa-wrench animated-hover\"\n      })\n    })]\n  });\n};\n\nasync function getDailyTaskHistoryList(date) {\n  let dateStr = DatePickerUtil.dateStrYYYYMMDD(date);\n  var dailyTaskHistoryList = new Array();\n\n  try {\n    const res = await getApiClient().get(process.env.NEXT_PUBLIC_API_DAILY_TASK_HISTORY, {\n      params: {\n        nextTargetDate: dateStr\n      }\n    });\n    dailyTaskHistoryList = createDailyTaskHistoryList(res.data);\n  } catch (error) {\n    Router.push('/Error?400');\n  }\n\n  return dailyTaskHistoryList;\n}\n\nfunction createDailyTaskHistoryList(responseData) {\n  let outerLength = responseData.length;\n  var dailyTaskHistoryList = [];\n\n  for (var i = 0; i < outerLength; i++) {\n    let tempList = responseData[i];\n    let innerLength = tempList.length;\n    dailyTaskHistoryList[i] = new Array();\n\n    for (var j = 0; j < innerLength; j++) {\n      let dailyTaskHistory = new DailyTaskHistory(responseData[i][j][\"dailyTaskId\"], responseData[i][j][\"title\"], responseData[i][j][\"doneDate\"], responseData[i][j][\"doneTime\"], responseData[i][j][\"quota\"], responseData[i][j][\"doneFlg\"]);\n      dailyTaskHistoryList[i].push(dailyTaskHistory);\n    }\n  }\n\n  return dailyTaskHistoryList;\n}\n\nexport default DailyTaskHistoryBoard;","map":null,"metadata":{},"sourceType":"module"}