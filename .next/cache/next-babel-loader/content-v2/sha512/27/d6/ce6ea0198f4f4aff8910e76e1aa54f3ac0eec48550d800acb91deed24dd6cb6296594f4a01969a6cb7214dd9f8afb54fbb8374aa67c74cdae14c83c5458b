{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/shumiya/Desktop/dev/react/shumipro_front/src/components/DailyTask/DailyTaskBoard.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport DailyTaskList from './DailyTaskList';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport { DailyTask } from '../common/interface';\nimport { getApiClient } from '../util/AuthenticationUtil';\nimport Router from 'next/router';\nimport * as NumberUtil from '../util/NumberUtil';\n\nconst DailyTaskBoard = props => {\n  // デイリータスク\n  const {\n    0: dailyTaskList,\n    1: setDailyTaskList\n  } = useState([]);\n  useEffect(() => {\n    props.setInitDispFlg(false);\n    callGetDailyTaskList();\n  }, [props.initDispFlg, props.includeDeleteFlg]);\n\n  const callGetDailyTaskList = () => {\n    var res = getDailyTaskList(props.includeDeleteFlg);\n    res.then(ret => setDailyTaskList(ret));\n    let doneTaskCount = 0;\n    let totalDoneTime = 0;\n    let deleteTaskCount = 0;\n\n    for (var i = 0; i < dailyTaskList.length; i++) {\n      if (dailyTaskList[i].deleteFlg == 1) {\n        deleteTaskCount++;\n        continue;\n      }\n\n      if (dailyTaskList[i].quota <= dailyTaskList[i].doneTime) {\n        doneTaskCount++;\n      }\n\n      totalDoneTime += dailyTaskList[i].doneTime;\n    }\n\n    props.setTotalTaskCount(dailyTaskList.length - deleteTaskCount);\n    props.setDoneTaskCount(doneTaskCount);\n    props.setTotalDoneTime(NumberUtil.convertHourMinute(totalDoneTime));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(DndProvider, {\n      backend: HTML5Backend,\n      children: /*#__PURE__*/_jsxDEV(DailyTaskList, {\n        dailyTaskList: dailyTaskList,\n        setInitDispFlg: props.setInitDispFlg\n      }, \"DailyTaskList\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\nasync function getDailyTaskList(includeDeleteFlg) {\n  var dailyTaskList = [];\n\n  try {\n    const res = await getApiClient().get(process.env.NEXT_PUBLIC_API_DAILY_TASK, {\n      params: {\n        includeDeleteFlg: includeDeleteFlg\n      }\n    });\n    dailyTaskList = createDailyTaskList(res.data);\n  } catch (error) {\n    Router.push('/Error?400');\n  }\n\n  return dailyTaskList;\n}\n\nfunction createDailyTaskList(responseData) {\n  let length = responseData.length;\n  var dailyTaskList = [];\n\n  for (var i = 0; i < length; i++) {\n    let dailyTask = new DailyTask(responseData[i][\"id\"], responseData[i][\"username\"], responseData[i][\"title\"], responseData[i][\"description\"], responseData[i][\"priority\"], responseData[i][\"quota\"], responseData[i][\"deleteFlg\"], responseData[i][\"createDate\"], responseData[i][\"doneDate\"], responseData[i][\"doneTime\"]);\n    dailyTaskList.push(dailyTask);\n  }\n\n  return dailyTaskList;\n}\n\nexport default DailyTaskBoard;","map":{"version":3,"sources":["/Users/shumiya/Desktop/dev/react/shumipro_front/src/components/DailyTask/DailyTaskBoard.tsx"],"names":["React","useState","useEffect","DailyTaskList","DndProvider","HTML5Backend","DailyTask","getApiClient","Router","NumberUtil","DailyTaskBoard","props","dailyTaskList","setDailyTaskList","setInitDispFlg","callGetDailyTaskList","initDispFlg","includeDeleteFlg","res","getDailyTaskList","then","ret","doneTaskCount","totalDoneTime","deleteTaskCount","i","length","deleteFlg","quota","doneTime","setTotalTaskCount","setDoneTaskCount","setTotalDoneTime","convertHourMinute","get","process","env","NEXT_PUBLIC_API_DAILY_TASK","params","createDailyTaskList","data","error","push","responseData","dailyTask"],"mappings":";;AAAA,OAAOA,KAAP,IAA0CC,QAA1C,EAAoDC,SAApD,QAAoE,OAApE;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,WAAT,QAA4B,WAA5B;AACA,SAAQC,YAAR,QAA2B,yBAA3B;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,SAAQC,YAAR,QAA2B,4BAA3B;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAO,KAAKC,UAAZ,MAA4B,oBAA5B;;AAWA,MAAMC,cAA6C,GAAIC,KAAD,IAAW;AAC7D;AACA,QAAM;AAAA,OAACC,aAAD;AAAA,OAAgBC;AAAhB,MAAoCZ,QAAQ,CAAc,EAAd,CAAlD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,KAAK,CAACG,cAAN,CAAqB,KAArB;AACAC,IAAAA,oBAAoB;AACvB,GAHQ,EAGN,CAACJ,KAAK,CAACK,WAAP,EAAoBL,KAAK,CAACM,gBAA1B,CAHM,CAAT;;AAKA,QAAMF,oBAAoB,GAAG,MAAM;AAC/B,QAAIG,GAAyB,GAAGC,gBAAgB,CAACR,KAAK,CAACM,gBAAP,CAAhD;AACAC,IAAAA,GAAG,CAACE,IAAJ,CAASC,GAAG,IAAIR,gBAAgB,CAACQ,GAAD,CAAhC;AAEA,QAAIC,aAAa,GAAG,CAApB;AACA,QAAIC,aAAa,GAAG,CAApB;AACA,QAAIC,eAAe,GAAG,CAAtB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAiBA,CAAC,GAAGb,aAAa,CAACc,MAAnC,EAA4CD,CAAC,EAA7C,EAAiD;AAC7C,UAAIb,aAAa,CAACa,CAAD,CAAb,CAAiBE,SAAjB,IAA8B,CAAlC,EAAqC;AACjCH,QAAAA,eAAe;AACf;AACH;;AACD,UAAIZ,aAAa,CAACa,CAAD,CAAb,CAAiBG,KAAjB,IAA0BhB,aAAa,CAACa,CAAD,CAAb,CAAiBI,QAA/C,EAAyD;AACrDP,QAAAA,aAAa;AAChB;;AACDC,MAAAA,aAAa,IAAIX,aAAa,CAACa,CAAD,CAAb,CAAiBI,QAAlC;AACH;;AACDlB,IAAAA,KAAK,CAACmB,iBAAN,CAAwBlB,aAAa,CAACc,MAAd,GAAuBF,eAA/C;AACAb,IAAAA,KAAK,CAACoB,gBAAN,CAAuBT,aAAvB;AACAX,IAAAA,KAAK,CAACqB,gBAAN,CAAuBvB,UAAU,CAACwB,iBAAX,CAA6BV,aAA7B,CAAvB;AACH,GApBD;;AAsBA,sBACI;AAAA,2BACI,QAAC,WAAD;AAAa,MAAA,OAAO,EAAElB,YAAtB;AAAA,6BACI,QAAC,aAAD;AAAmC,QAAA,aAAa,EAAEO,aAAlD;AAAiE,QAAA,cAAc,EAAED,KAAK,CAACG;AAAvF,SAAmB,eAAnB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAtCD;;AAwCA,eAAeK,gBAAf,CAAgCF,gBAAhC,EAAyD;AAErD,MAAIL,aAA2B,GAAG,EAAlC;;AAEA,MAAI;AACA,UAAMM,GAAG,GAAG,MAAMX,YAAY,GAAG2B,GAAf,CAAmBC,OAAO,CAACC,GAAR,CAAYC,0BAA/B,EAA2D;AACzEC,MAAAA,MAAM,EAAE;AACJrB,QAAAA,gBAAgB,EAAEA;AADd;AADiE,KAA3D,CAAlB;AAKAL,IAAAA,aAAa,GAAG2B,mBAAmB,CAACrB,GAAG,CAACsB,IAAL,CAAnC;AACH,GAPD,CAOE,OAAMC,KAAN,EAAY;AACVjC,IAAAA,MAAM,CAACkC,IAAP,CAAY,YAAZ;AACH;;AACD,SAAO9B,aAAP;AACH;;AAED,SAAS2B,mBAAT,CAA6BI,YAA7B,EAA8D;AAC1D,MAAIjB,MAAc,GAAGiB,YAAY,CAACjB,MAAlC;AACA,MAAId,aAA0B,GAAG,EAAjC;;AAEA,OAAK,IAAIa,CAAC,GAAG,CAAb,EAAiBA,CAAC,GAAGC,MAArB,EAA8BD,CAAC,EAA/B,EAAmC;AAE/B,QAAImB,SAAS,GAAG,IAAItC,SAAJ,CAAcqC,YAAY,CAAClB,CAAD,CAAZ,CAAgB,IAAhB,CAAd,EAAqCkB,YAAY,CAAClB,CAAD,CAAZ,CAAgB,UAAhB,CAArC,EAChBkB,YAAY,CAAClB,CAAD,CAAZ,CAAgB,OAAhB,CADgB,EACUkB,YAAY,CAAClB,CAAD,CAAZ,CAAgB,aAAhB,CADV,EAC0CkB,YAAY,CAAClB,CAAD,CAAZ,CAAgB,UAAhB,CAD1C,EAEhBkB,YAAY,CAAClB,CAAD,CAAZ,CAAgB,OAAhB,CAFgB,EAEUkB,YAAY,CAAClB,CAAD,CAAZ,CAAgB,WAAhB,CAFV,EAEwCkB,YAAY,CAAClB,CAAD,CAAZ,CAAgB,YAAhB,CAFxC,EAGhBkB,YAAY,CAAClB,CAAD,CAAZ,CAAgB,UAAhB,CAHgB,EAGakB,YAAY,CAAClB,CAAD,CAAZ,CAAgB,UAAhB,CAHb,CAAhB;AAKAb,IAAAA,aAAa,CAAC8B,IAAd,CAAmBE,SAAnB;AACH;;AAED,SAAOhC,aAAP;AACH;;AAED,eAAeF,cAAf","sourcesContent":["import React, { Dispatch, SetStateAction, useState, useEffect} from 'react';\nimport DailyTaskList from './DailyTaskList';\nimport { DndProvider } from 'react-dnd';\nimport {HTML5Backend} from 'react-dnd-html5-backend';\nimport { DailyTask } from '../common/interface';\nimport {getApiClient} from '../util/AuthenticationUtil';\nimport Router from 'next/router';\nimport * as NumberUtil from '../util/NumberUtil';\n\ninterface DailyTaskBoardProps {\n    initDispFlg: Boolean;\n    includeDeleteFlg: number;\n    setInitDispFlg: Dispatch<SetStateAction<Boolean>>;\n    setTotalTaskCount: Dispatch<SetStateAction<number>>;\n    setDoneTaskCount: Dispatch<SetStateAction<number>>;\n    setTotalDoneTime: Dispatch<SetStateAction<string>>;\n}\n\nconst DailyTaskBoard: React.FC<DailyTaskBoardProps> = (props) => {\n    // デイリータスク\n    const [dailyTaskList, setDailyTaskList] = useState<DailyTask[]>([]);\n \n    useEffect(() => {\n        props.setInitDispFlg(false);\n        callGetDailyTaskList();\n    }, [props.initDispFlg, props.includeDeleteFlg]);\n\n    const callGetDailyTaskList = () => {\n        var res: Promise<DailyTask[]> = getDailyTaskList(props.includeDeleteFlg);\n        res.then(ret => setDailyTaskList(ret));\n\n        let doneTaskCount = 0;\n        let totalDoneTime = 0;\n        let deleteTaskCount = 0;\n        for (var i = 0 ; i < dailyTaskList.length ; i++) {\n            if (dailyTaskList[i].deleteFlg == 1) {\n                deleteTaskCount++;\n                continue;\n            }\n            if (dailyTaskList[i].quota <= dailyTaskList[i].doneTime) {\n                doneTaskCount++;\n            }\n            totalDoneTime += dailyTaskList[i].doneTime\n        }\n        props.setTotalTaskCount(dailyTaskList.length - deleteTaskCount);\n        props.setDoneTaskCount(doneTaskCount);\n        props.setTotalDoneTime(NumberUtil.convertHourMinute(totalDoneTime));\n    }\n\n    return (\n        <div>\n            <DndProvider backend={HTML5Backend}>\n                <DailyTaskList key=\"DailyTaskList\" dailyTaskList={dailyTaskList} setInitDispFlg={props.setInitDispFlg}/>\n            </DndProvider>\n        </div>\n    )\n}\n\nasync function getDailyTaskList(includeDeleteFlg: number){\n\n    var dailyTaskList : DailyTask[] = [];\n\n    try {\n        const res = await getApiClient().get(process.env.NEXT_PUBLIC_API_DAILY_TASK, {\n            params: {\n                includeDeleteFlg: includeDeleteFlg\n            }\n        });\n        dailyTaskList = createDailyTaskList(res.data);\n    } catch(error){\n        Router.push('/Error?400');\n    }\n    return dailyTaskList;\n}\n\nfunction createDailyTaskList(responseData: any[]): DailyTask[]{\n    let length: number = responseData.length;\n    var dailyTaskList :DailyTask[] = [];\n\n    for (var i = 0 ; i < length ; i++) {\n\n        let dailyTask = new DailyTask(responseData[i][\"id\"], responseData[i][\"username\"], \n        responseData[i][\"title\"], responseData[i][\"description\"], responseData[i][\"priority\"], \n        responseData[i][\"quota\"], responseData[i][\"deleteFlg\"], responseData[i][\"createDate\"],\n        responseData[i][\"doneDate\"], responseData[i][\"doneTime\"]);\n\n        dailyTaskList.push(dailyTask);\n    }\n\n    return dailyTaskList;\n}\n\nexport default DailyTaskBoard;"]},"metadata":{},"sourceType":"module"}