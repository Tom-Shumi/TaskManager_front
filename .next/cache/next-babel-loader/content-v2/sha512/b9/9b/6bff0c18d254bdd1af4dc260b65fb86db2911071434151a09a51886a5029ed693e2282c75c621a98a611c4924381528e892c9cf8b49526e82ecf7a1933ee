{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/shumiya/Desktop/dev/react/shumipro_front/src/components/DailyTask/DailyTaskItem.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport styles from '../../styles/DailyTaskItem.module.css';\nimport { Row, Col, Form, Button } from 'react-bootstrap';\nimport * as NumberUtil from '../util/NumberUtil';\nimport * as ConversionUtil from '../util/ConversionUtil';\nimport { getApiClient } from '../util/AuthenticationUtil';\n\nvar DailyTaskItem = function DailyTaskItem(props) {\n  _s();\n\n  var _useState = useState(),\n      inputDoneTime = _useState[0],\n      setInputDoneTime = _useState[1];\n\n  var quota = NumberUtil.convertHourMinute(props.dailyTask.quota);\n  var done = NumberUtil.convertHourMinute(props.dailyTask.doneTime);\n  var remaining = NumberUtil.convertRemaining(props.dailyTask.quota, props.dailyTask.doneTime);\n  var taskStatus = ConversionUtil.conversionStatusByTime(props.dailyTask.quota, props.dailyTask.doneTime);\n  var taskStatusStr = taskStatus.str;\n  var taskStatusColor = taskStatus.color; // cookieを使用するaxios生成\n\n  var client = getApiClient();\n\n  var saveDoneTime = function saveDoneTime() {\n    var params = {\n      daily_task_id: props.dailyTask.id,\n      done_time: inputDoneTime,\n      quota: props.dailyTask.quota\n    };\n    var jsonParams = JSON.stringify(params);\n    client.post(process.env.NEXT_PUBLIC_API_SERVER + process.env.NEXT_PUBLIC_API_DAILY_TASK_HISTORY, jsonParams, {\n      headers: {\n        'content-type': 'application/json'\n      }\n    }).then(function (response) {\n      setInitDispFlg(true);\n    })[\"catch\"](function () {\n      Router.push('/Error?400');\n    });\n  };\n\n  var handleChangeInputDoneTime = function handleChangeInputDoneTime() {\n    return function (e) {\n      return setInputDoneTime(e.target.value);\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.daily_task_item + \" \" + taskStatusColor,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.title,\n      children: [props.dailyTask.title, \" [ \", taskStatusStr, \" ]\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: 2,\n        className: styles.quota_label,\n        children: [\"Quota: \", quota]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 2,\n        className: styles.label,\n        children: [\"Done: \", done]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 3,\n        className: styles.label,\n        children: [\"Remaining: \", remaining]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 5,\n        children: [\"logged:\", /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          value: inputDoneTime,\n          className: styles.done_time_textbox,\n          onChange: handleChangeInputDoneTime()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, _this), \" m\", /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          className: styles.done_time_button,\n          onClick: saveDoneTime,\n          children: \"Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(DailyTaskItem, \"nAvhRTK5rNrVHcslrQvgX4X1jKI=\");\n\n_c = DailyTaskItem;\nexport default DailyTaskItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"DailyTaskItem\");","map":{"version":3,"sources":["/Users/shumiya/Desktop/dev/react/shumipro_front/src/components/DailyTask/DailyTaskItem.tsx"],"names":["React","useState","styles","Row","Col","Form","Button","NumberUtil","ConversionUtil","getApiClient","DailyTaskItem","props","inputDoneTime","setInputDoneTime","quota","convertHourMinute","dailyTask","done","doneTime","remaining","convertRemaining","taskStatus","conversionStatusByTime","taskStatusStr","str","taskStatusColor","color","client","saveDoneTime","params","daily_task_id","id","done_time","jsonParams","JSON","stringify","post","process","env","NEXT_PUBLIC_API_SERVER","NEXT_PUBLIC_API_DAILY_TASK_HISTORY","headers","then","response","setInitDispFlg","Router","push","handleChangeInputDoneTime","e","target","value","daily_task_item","title","quota_label","label","done_time_textbox","done_time_button"],"mappings":"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","sourcesContent":["import React, { Dispatch, SetStateAction, useState, useEffect} from 'react';\nimport styles from '../../styles/DailyTaskItem.module.css';\nimport {Row, Col, Form, Button} from 'react-bootstrap';\nimport { DailyTask } from '../common/interface';\nimport * as NumberUtil from '../util/NumberUtil';\nimport * as ConversionUtil from '../util/ConversionUtil';\nimport {getApiClient} from '../util/AuthenticationUtil';\n\ninterface DailyTaskItemProps {\n    dailyTask: DailyTask;\n    setInitDispFlg: Dispatch<SetStateAction<Boolean>>;\n}\n\nconst DailyTaskItem: React.FC<DailyTaskItemProps> = (props) => {\n    const [inputDoneTime, setInputDoneTime] = useState<number>();\n\n    const quota = NumberUtil.convertHourMinute(props.dailyTask.quota);\n    const done = NumberUtil.convertHourMinute(props.dailyTask.doneTime);\n    const remaining = NumberUtil.convertRemaining(props.dailyTask.quota, props.dailyTask.doneTime);\n\n    const taskStatus = ConversionUtil. conversionStatusByTime(props.dailyTask.quota, props.dailyTask.doneTime);\n    var taskStatusStr = taskStatus.str;\n    var taskStatusColor = taskStatus.color;\n\n    // cookieを使用するaxios生成\n    let client = getApiClient();\n\n    const saveDoneTime = () => {\n        var params = {\n            daily_task_id: props.dailyTask.id,\n            done_time: inputDoneTime,\n            quota: props.dailyTask.quota,\n        }\n        var jsonParams = JSON.stringify(params);\n        client.post(process.env.NEXT_PUBLIC_API_SERVER + process.env.NEXT_PUBLIC_API_DAILY_TASK_HISTORY\n            , jsonParams\n            , {headers: {'content-type': 'application/json'}})\n        .then( response => {\n            setInitDispFlg(true);\n        }).catch(() => {\n            Router.push('/Error?400');\n        })\n    }\n\n    const handleChangeInputDoneTime = () => {\n        return e => setInputDoneTime(e.target.value);\n    }\n \n    return (\n        <div className={styles.daily_task_item + \" \" + taskStatusColor}>\n            <div className={styles.title}>{props.dailyTask.title} [ {taskStatusStr} ]</div>\n            <Row>\n                <Col xs={2} className={styles.quota_label}>Quota: {quota}</Col>\n                <Col xs={2} className={styles.label}>Done: {done}</Col>\n                <Col xs={3} className={styles.label}>Remaining: {remaining}</Col>\n                <Col xs={5}>\n                    logged:\n                    <Form.Control type=\"text\" value={inputDoneTime} className={styles.done_time_textbox} onChange={handleChangeInputDoneTime()}/> m\n                    <Button variant=\"primary\" className={styles.done_time_button} onClick={saveDoneTime}>Done</Button>\n                </Col>\n            </Row>\n            \n        </div>\n    )\n}\n\nexport default DailyTaskItem;"]},"metadata":{},"sourceType":"module"}