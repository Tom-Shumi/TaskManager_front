{"ast":null,"code":"import _regeneratorRuntime from \"/Users/shumiya/Desktop/dev/react/shumipro_front/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/shumiya/Desktop/dev/react/shumipro_front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/shumiya/Desktop/dev/react/shumipro_front/src/pages/DailyTask.tsx\",\n    _this = this;\n\nimport React from 'react';\nimport Layout from '../components/Layout';\nimport dynamic from \"next/dynamic\";\n\nvar DailyTask = function DailyTask() {\n  authentication();\n  var today = new Date();\n  var todayStr = new Date().toLocaleString();\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    title: \"Daily Task : \" + currentDate\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, _this);\n};\n\n_c = DailyTask;\nvar DynamicTask = dynamic({\n  loader: function () {\n    var _loader = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", DailyTask);\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function loader() {\n      return _loader.apply(this, arguments);\n    }\n\n    return loader;\n  }()\n}, {\n  ssr: false\n});\nexport default DynamicTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"DailyTask\");","map":{"version":3,"sources":["/Users/shumiya/Desktop/dev/react/shumipro_front/src/pages/DailyTask.tsx"],"names":["React","Layout","dynamic","DailyTask","authentication","today","Date","todayStr","toLocaleString","currentDate","DynamicTask","loader","ssr"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,OAAP,MAAoB,cAApB;;AAIA,IAAMC,SAAmB,GAAG,SAAtBA,SAAsB,GAAM;AAC9BC,EAAAA,cAAc;AAEd,MAAIC,KAAK,GAAG,IAAIC,IAAJ,EAAZ;AACA,MAAIC,QAAQ,GAAG,IAAID,IAAJ,GAAWE,cAAX,EAAf;AAEA,sBACI,QAAC,MAAD;AAAQ,IAAA,KAAK,EAAE,kBAAkBC;AAAjC;AAAA;AAAA;AAAA;AAAA,WADJ;AAKH,CAXD;;KAAMN,S;AAaN,IAAMO,WAAW,GAAGR,OAAO,CACvB;AACES,EAAAA,MAAM;AAAA,2EAAE;AAAA;AAAA;AAAA;AAAA;AAAA,+CAAYR,SAAZ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AADR,CADuB,EAIvB;AAAES,EAAAA,GAAG,EAAE;AAAP,CAJuB,CAA3B;AAOE,eAAeF,WAAf","sourcesContent":["import React, { useState } from 'react';\nimport Layout from '../components/Layout';\nimport dynamic from \"next/dynamic\";\nimport * as DatePickerUtil from './DatePickerUtil';\n\n\nconst DailyTask: React.FC = () => {\n    authentication();\n\n    let today = new Date();\n    let todayStr = new Date().toLocaleString();\n\n    return (\n        <Layout title={\"Daily Task : \" + currentDate}>\n            \n        </Layout>\n    )\n}\n\nconst DynamicTask = dynamic(\n    {\n      loader: async () => DailyTask,\n    },\n    { ssr: false }\n  );\n  \n  export default DynamicTask;"]},"metadata":{},"sourceType":"module"}