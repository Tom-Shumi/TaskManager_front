{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport Router from 'next/router';\nimport { useState } from \"react\";\nimport Axios from \"axios\";\n\nvar getSessionUsername = function getSessionUsername() {\n  return sessionStorage.getItem('n');\n};\n\nvar getSessionJwtToken = function getSessionJwtToken() {\n  return sessionStorage.getItem('t');\n};\n\nexport var authentication = function authentication() {\n  _s();\n\n  var _useState = useState(getSessionUsername()),\n      username = _useState[0];\n\n  if (username == null) {\n    Router.push('/Error?401');\n  }\n};\n\n_s(authentication, \"TNvukIx2szzt7BDJtajwN/sJ1Jo=\");\n\nexport var getUsername = function getUsername() {\n  _s2();\n\n  var _useState2 = useState(getSessionUsername()),\n      username = _useState2[0];\n\n  return username;\n};\n\n_s2(getUsername, \"TNvukIx2szzt7BDJtajwN/sJ1Jo=\");\n\nexport var getApiClient = function getApiClient() {\n  return Axios.create({\n    baseURL: process.env.NEXT_PUBLIC_API_SERVER,\n    headers: {\n      'Content-Type': 'application/json' //   'Authorization': getSessionJwtToken()\n\n    },\n    withCredentials: true\n  });\n};","map":{"version":3,"sources":["/Users/shumiya/Desktop/dev/react/shumipro_front/src/components/Authentication.ts"],"names":["Router","useState","Axios","getSessionUsername","sessionStorage","getItem","getSessionJwtToken","authentication","username","push","getUsername","getApiClient","create","baseURL","process","env","NEXT_PUBLIC_API_SERVER","headers","withCredentials"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,aAAnB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,GAAc;AACrC,SAAOC,cAAc,CAACC,OAAf,CAAuB,GAAvB,CAAP;AACH,CAFD;;AAIA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,GAAc;AACrC,SAAOF,cAAc,CAACC,OAAf,CAAuB,GAAvB,CAAP;AACH,CAFD;;AAKA,OAAO,IAAME,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAAA;;AAAA,kBACbN,QAAQ,CAASE,kBAAkB,EAA3B,CADK;AAAA,MACzBK,QADyB;;AAEhC,MAAIA,QAAQ,IAAI,IAAhB,EAAqB;AACjBR,IAAAA,MAAM,CAACS,IAAP,CAAY,YAAZ;AACH;AACJ,CALM;;GAAMF,c;;AAOb,OAAO,IAAMG,WAAW,GAAG,SAAdA,WAAc,GAAM;AAAA;;AAAA,mBACVT,QAAQ,CAASE,kBAAkB,EAA3B,CADE;AAAA,MACtBK,QADsB;;AAE7B,SAAOA,QAAP;AACH,CAHM;;IAAME,W;;AAKb,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAC9B,SAAOT,KAAK,CAACU,MAAN,CAAa;AAChBC,IAAAA,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYC,sBADL;AAEhBC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT,CAET;;AAFS,KAFO;AAMhBC,IAAAA,eAAe,EAAE;AAND,GAAb,CAAP;AAOH,CARM","sourcesContent":["import Router from 'next/router';\nimport { useState } from \"react\";\nimport Axios from \"axios\";\n\nconst getSessionUsername = (): String => {\n    return sessionStorage.getItem('n');\n}\n\nconst getSessionJwtToken = (): String => {\n    return sessionStorage.getItem('t');\n}\n\n\nexport const authentication = () => {\n    const [username] = useState<String>(getSessionUsername());\n    if (username == null){\n        Router.push('/Error?401');\n    }\n}\n\nexport const getUsername = () => {\n    const [username] = useState<String>(getSessionUsername());\n    return username;\n}\n\nexport const getApiClient = () => {\n    return Axios.create({\n        baseURL: process.env.NEXT_PUBLIC_API_SERVER,\n        headers: {\n          'Content-Type': 'application/json'\n        //   'Authorization': getSessionJwtToken()\n        },\n        withCredentials: true });\n}"]},"metadata":{},"sourceType":"module"}