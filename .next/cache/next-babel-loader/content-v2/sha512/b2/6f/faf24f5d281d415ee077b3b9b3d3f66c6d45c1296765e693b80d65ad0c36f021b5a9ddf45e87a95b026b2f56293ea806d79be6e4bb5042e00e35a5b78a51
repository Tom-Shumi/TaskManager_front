{"ast":null,"code":"import _regeneratorRuntime from \"/Users/shumiya/Desktop/dev/react/shumipro_front/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/shumiya/Desktop/dev/react/shumipro_front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/shumiya/Desktop/dev/react/shumipro_front/src/pages/DailyTask.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Layout from '../components/common/Layout';\nimport { authentication } from '../components/util/AuthenticationUtil';\nimport dynamic from \"next/dynamic\";\nimport { Button } from 'react-bootstrap';\nimport * as DatePickerUtil from '../components/util/DatePickerUtil';\nimport DailyTaskBoard from '../components/DailyTask/DailyTaskBoard';\n\nvar DailyTask = function DailyTask() {\n  _s();\n\n  // 初期表示フラグ\n  var _useState = useState(true),\n      initDispFlg = _useState[0],\n      setInitDispFlg = _useState[1];\n\n  authentication();\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    title: \"Daily Task : \" + DatePickerUtil.curentDateStrYYYYMMDD() + \".\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      className: \"button_md margin_side_10\",\n      children: \"create task\"\n    }, \"create\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }, _this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"success\",\n      className: \"button_md\",\n      children: \"history\"\n    }, \"history\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"display_inline margin_side_10\",\n      children: \"Achievement : 5 of 10\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }, _this), /*#__PURE__*/_jsxDEV(DailyTaskBoard, {\n      initDispFlg: initDispFlg,\n      setInitDispFlg: setInitDispFlg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(DailyTask, \"m2Ty/nXs2nwuC8hWM2ZHMaOsQww=\");\n\n_c = DailyTask;\nvar DynamicTask = dynamic({\n  loader: function () {\n    var _loader = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", DailyTask);\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function loader() {\n      return _loader.apply(this, arguments);\n    }\n\n    return loader;\n  }()\n}, {\n  ssr: false\n});\nexport default DynamicTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"DailyTask\");","map":{"version":3,"sources":["/Users/shumiya/Desktop/dev/react/shumipro_front/src/pages/DailyTask.tsx"],"names":["React","useState","Layout","authentication","dynamic","Button","DatePickerUtil","DailyTaskBoard","DailyTask","initDispFlg","setInitDispFlg","curentDateStrYYYYMMDD","DynamicTask","loader","ssr"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,SAAQC,cAAR,QAA6B,uCAA7B;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,SAAQC,MAAR,QAAqB,iBAArB;AACA,OAAO,KAAKC,cAAZ,MAAgC,mCAAhC;AACA,OAAOC,cAAP,MAA2B,wCAA3B;;AAGA,IAAMC,SAAmB,GAAG,SAAtBA,SAAsB,GAAM;AAAA;;AAC9B;AAD8B,kBAEQP,QAAQ,CAAU,IAAV,CAFhB;AAAA,MAEvBQ,WAFuB;AAAA,MAEVC,cAFU;;AAI9BP,EAAAA,cAAc;AAEd,sBACI,QAAC,MAAD;AAAQ,IAAA,KAAK,EAAE,kBAAkBG,cAAc,CAACK,qBAAf,EAAlB,GAA2D,GAA1E;AAAA,4BACE,QAAC,MAAD;AAAqB,MAAA,OAAO,EAAC,SAA7B;AAAuC,MAAA,SAAS,EAAC,0BAAjD;AAAA;AAAA,OAAY,QAAZ;AAAA;AAAA;AAAA;AAAA,aADF,eAEE,QAAC,MAAD;AAAsB,MAAA,OAAO,EAAC,SAA9B;AAAwC,MAAA,SAAS,EAAC,WAAlD;AAAA;AAAA,OAAY,SAAZ;AAAA;AAAA;AAAA;AAAA,aAFF,eAGE;AAAK,MAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHF,eAKE,QAAC,cAAD;AACE,MAAA,WAAW,EAAIF,WADjB;AAEE,MAAA,cAAc,EAAIC;AAFpB;AAAA;AAAA;AAAA;AAAA,aALF;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAYH,CAlBD;;GAAMF,S;;KAAAA,S;AAoBN,IAAMI,WAAW,GAAGR,OAAO,CACvB;AACES,EAAAA,MAAM;AAAA,2EAAE;AAAA;AAAA;AAAA;AAAA;AAAA,+CAAYL,SAAZ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AADR,CADuB,EAIvB;AAAEM,EAAAA,GAAG,EAAE;AAAP,CAJuB,CAA3B;AAOE,eAAeF,WAAf","sourcesContent":["import React, { useState } from 'react';\nimport Layout from '../components/common/Layout';\nimport {authentication} from '../components/util/AuthenticationUtil';\nimport dynamic from \"next/dynamic\";\nimport {Button} from 'react-bootstrap';\nimport * as DatePickerUtil from '../components/util/DatePickerUtil';\nimport DailyTaskBoard from '../components/DailyTask/DailyTaskBoard';\n\n\nconst DailyTask: React.FC = () => {\n    // 初期表示フラグ\n    const [initDispFlg, setInitDispFlg] = useState<Boolean>(true);\n\n    authentication();\n\n    return (\n        <Layout title={\"Daily Task : \" + DatePickerUtil.curentDateStrYYYYMMDD() + \".\"}>\n          <Button key=\"create\" variant=\"primary\" className=\"button_md margin_side_10\">create task</Button>\n          <Button key=\"history\" variant=\"success\" className=\"button_md\">history</Button>\n          <div className=\"display_inline margin_side_10\">Achievement : 5 of 10</div>\n\n          <DailyTaskBoard\n            initDispFlg = {initDispFlg}\n            setInitDispFlg = {setInitDispFlg}\n          />\n        </Layout>\n    )\n}\n\nconst DynamicTask = dynamic(\n    {\n      loader: async () => DailyTask,\n    },\n    { ssr: false }\n  );\n  \n  export default DynamicTask;"]},"metadata":{},"sourceType":"module"}