{"ast":null,"code":"import moment from 'moment';\n/**\n * JST基準に変換して返す\n * @param {string} dateTimeStr YYYY-MM-DDTHH:mm:00Z\n * @returns {moment.Moment}\n */\n\nconst parseAsMoment = dateTimeStr => {\n  return moment.utc(dateTimeStr, 'YYYY-MM-DDTHH:mm:00Z', 'ja').utcOffset(9);\n};\n/**\n * 日付形式に変換して返す\n * @param {moment.Moment} momentInstance\n * @returns {string}\n */\n\n\nconst toUtcIso8601str = momentInstance => {\n  return momentInstance.clone().utc().format('YYYY-MM-DDTHH:mm:00Z');\n};\n\nconst parseDate = dateStr => {\n  if (!dateStr) {\n    return \"\";\n  } else {\n    return Date.parse(dateStr);\n  }\n};\n\nconst curentDateStrYYYYMMDD = () => {\n  let today = new Date();\n  return today.getFullYear() + \" / \" + String(today.getMonth() + 1).padStart(2, '0') + \" / \" + String(today.getDate()).padStart(2, '0');\n};\n\nconst dateStrDelimiterYYYYMMDD = date => {\n  return date.getFullYear() + \" / \" + String(date.getMonth() + 1).padStart(2, '0') + \" / \" + String(date.getDate()).padStart(2, '0');\n};\n\nconst dateStrYYYYMMDD = date => {\n  return String(date.getFullYear()) + String(date.getMonth() + 1).padStart(2, '0') + String(date.getDate()).padStart(2, '0');\n};\n\nexport { parseAsMoment, toUtcIso8601str, parseDate, curentDateStrYYYYMMDD, dateStrDelimiterYYYYMMDD, dateStrYYYYMMDD };","map":null,"metadata":{},"sourceType":"module"}