{"ast":null,"code":"import _regeneratorRuntime from \"/Users/shumiya/Desktop/dev/react/shumipro_front/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/shumiya/Desktop/dev/react/shumipro_front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/shumiya/Desktop/dev/react/shumipro_front/src/pages/Task.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Link from 'next/link';\nimport Layout from '../components/Layout';\nimport TaskBoard from '../components/TaskBoard';\nimport TaskEditModal from '../components/TaskEditModal';\nimport { authentication } from '../components/Authentication';\nimport dynamic from \"next/dynamic\";\nimport { Button } from 'react-bootstrap';\n\nvar Task = function Task() {\n  _s();\n\n  // タスク作成モーダル表示フラグ\n  var _useState = useState(false),\n      taskCreateModalDispFlg = _useState[0],\n      setTaskCreateModalDispFlg = _useState[1]; // タスク更新モーダル表示フラグ\n\n\n  var _useState2 = useState(false),\n      taskUpdateModalDispFlg = _useState2[0],\n      setTaskUpdateModalDispFlg = _useState2[1]; // 初期表示フラグ\n\n\n  var _useState3 = useState(true),\n      initDispFlg = _useState3[0],\n      setInitDispFlg = _useState3[1];\n\n  authentication();\n\n  var showTaskCreateModal = function showTaskCreateModal() {\n    setTaskCreateModalDispFlg(true);\n  };\n\n  var closeTaskCreateModal = function closeTaskCreateModal() {\n    setTaskCreateModalDispFlg(false);\n  };\n\n  var showTaskUpdateModal = function showTaskUpdateModal() {\n    setTaskUpdateModalDispFlg(true);\n  };\n\n  var closeTaskUpdateModal = function closeTaskUpdateModal() {\n    setTaskUpdateModalDispFlg(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    title: \"Task.\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      className: \"button_md\",\n      onClick: showTaskCreateModal,\n      children: \"create task\"\n    }, \"create\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(TaskBoard, {\n      initDispFlg: initDispFlg,\n      setInitDispFlg: setInitDispFlg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(Link, {\n      href: \"/\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        children: \"\\uFF1C\\uFF1C Back to login page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, _this), taskCreateModalDispFlg && /*#__PURE__*/_jsxDEV(TaskEditModal, {\n      show: showTaskCreateModal,\n      close: closeTaskCreateModal,\n      title: \"Create task\",\n      setInitDispFlg: setInitDispFlg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, _this), taskUpdateModalDispFlg && /*#__PURE__*/_jsxDEV(TaskEditModal, {\n      show: showTaskCreateModal,\n      close: closeTaskCreateModal,\n      title: \"Create task\",\n      setInitDispFlg: setInitDispFlg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Task, \"1NWLPdQMfMwYLTswZTlD0yPNuJo=\");\n\n_c = Task;\nvar DynamicTask = dynamic({\n  loader: function () {\n    var _loader = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", Task);\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function loader() {\n      return _loader.apply(this, arguments);\n    }\n\n    return loader;\n  }()\n}, {\n  ssr: false\n});\nexport default DynamicTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"sources":["/Users/shumiya/Desktop/dev/react/shumipro_front/src/pages/Task.tsx"],"names":["React","useState","Link","Layout","TaskBoard","TaskEditModal","authentication","dynamic","Button","Task","taskCreateModalDispFlg","setTaskCreateModalDispFlg","taskUpdateModalDispFlg","setTaskUpdateModalDispFlg","initDispFlg","setInitDispFlg","showTaskCreateModal","closeTaskCreateModal","showTaskUpdateModal","closeTaskUpdateModal","DynamicTask","loader","ssr"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,SAAQC,cAAR,QAA6B,8BAA7B;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,SAAQC,MAAR,QAAqB,iBAArB;;AAGA,IAAMC,IAAc,GAAG,SAAjBA,IAAiB,GAAM;AAAA;;AACzB;AADyB,kBAEmCR,QAAQ,CAAU,KAAV,CAF3C;AAAA,MAElBS,sBAFkB;AAAA,MAEMC,yBAFN,iBAGzB;;;AAHyB,mBAImCV,QAAQ,CAAU,KAAV,CAJ3C;AAAA,MAIlBW,sBAJkB;AAAA,MAIMC,yBAJN,kBAKzB;;;AALyB,mBAMaZ,QAAQ,CAAU,IAAV,CANrB;AAAA,MAMlBa,WANkB;AAAA,MAMLC,cANK;;AAQzBT,EAAAA,cAAc;;AAEd,MAAMU,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAC9BL,IAAAA,yBAAyB,CAAC,IAAD,CAAzB;AACH,GAFD;;AAIA,MAAMM,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM;AAC/BN,IAAAA,yBAAyB,CAAC,KAAD,CAAzB;AACH,GAFD;;AAIA,MAAMO,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAC9BL,IAAAA,yBAAyB,CAAC,IAAD,CAAzB;AACH,GAFD;;AAIA,MAAMM,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM;AAC/BN,IAAAA,yBAAyB,CAAC,KAAD,CAAzB;AACH,GAFD;;AAIA,sBACI,QAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,OAAd;AAAA,4BACI,QAAC,MAAD;AAAqB,MAAA,OAAO,EAAC,SAA7B;AAAuC,MAAA,SAAS,EAAC,WAAjD;AAA6D,MAAA,OAAO,EAAEG,mBAAtE;AAAA;AAAA,OAAY,QAAZ;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI,QAAC,SAAD;AACI,MAAA,WAAW,EAAIF,WADnB;AAEI,MAAA,cAAc,EAAIC;AAFtB;AAAA;AAAA;AAAA;AAAA,aAFJ,eAKI;AAAA;AAAA;AAAA;AAAA,aALJ,eAMI,QAAC,IAAD;AAAM,MAAA,IAAI,EAAC,GAAX;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,aANJ,EASKL,sBAAsB,iBACnB,QAAC,aAAD;AACI,MAAA,IAAI,EAAIM,mBADZ;AAEI,MAAA,KAAK,EAAIC,oBAFb;AAGI,MAAA,KAAK,EAAG,aAHZ;AAII,MAAA,cAAc,EAAIF;AAJtB;AAAA;AAAA;AAAA;AAAA,aAVR,EAiBKH,sBAAsB,iBACnB,QAAC,aAAD;AACI,MAAA,IAAI,EAAII,mBADZ;AAEI,MAAA,KAAK,EAAIC,oBAFb;AAGI,MAAA,KAAK,EAAG,aAHZ;AAII,MAAA,cAAc,EAAIF;AAJtB;AAAA;AAAA;AAAA;AAAA,aAlBR;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AA4BH,CAtDD;;GAAMN,I;;KAAAA,I;AAwDN,IAAMW,WAAW,GAAGb,OAAO,CACvB;AACEc,EAAAA,MAAM;AAAA,2EAAE;AAAA;AAAA;AAAA;AAAA;AAAA,+CAAYZ,IAAZ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AADR,CADuB,EAIvB;AAAEa,EAAAA,GAAG,EAAE;AAAP,CAJuB,CAA3B;AAOE,eAAeF,WAAf","sourcesContent":["import React, { useState } from 'react';\nimport Link from 'next/link';\nimport Layout from '../components/Layout';\nimport TaskBoard from '../components/TaskBoard';\nimport TaskEditModal from '../components/TaskEditModal';\nimport {authentication} from '../components/Authentication';\nimport dynamic from \"next/dynamic\";\nimport {Button} from 'react-bootstrap';\n\n\nconst Task: React.FC = () => {\n    // タスク作成モーダル表示フラグ\n    const [taskCreateModalDispFlg, setTaskCreateModalDispFlg] = useState<Boolean>(false);\n    // タスク更新モーダル表示フラグ\n    const [taskUpdateModalDispFlg, setTaskUpdateModalDispFlg] = useState<Boolean>(false);\n    // 初期表示フラグ\n    const [initDispFlg, setInitDispFlg] = useState<Boolean>(true);\n\n    authentication();\n\n    const showTaskCreateModal = () => {\n        setTaskCreateModalDispFlg(true);\n    }\n\n    const closeTaskCreateModal = () => {\n        setTaskCreateModalDispFlg(false);\n    }\n\n    const showTaskUpdateModal = () => {\n        setTaskUpdateModalDispFlg(true);\n    }\n\n    const closeTaskUpdateModal = () => {\n        setTaskUpdateModalDispFlg(false);\n    }\n\n    return (\n        <Layout title=\"Task.\">\n            <Button key=\"create\" variant=\"primary\" className=\"button_md\" onClick={showTaskCreateModal}>create task</Button>\n            <TaskBoard\n                initDispFlg = {initDispFlg}\n                setInitDispFlg = {setInitDispFlg} />\n            <br />\n            <Link href=\"/\">\n                <a>＜＜ Back to login page</a>\n            </Link>\n            {taskCreateModalDispFlg && \n                <TaskEditModal \n                    show = {showTaskCreateModal}\n                    close = {closeTaskCreateModal}\n                    title = \"Create task\"\n                    setInitDispFlg = {setInitDispFlg}\n                />\n            }\n            {taskUpdateModalDispFlg && \n                <TaskEditModal \n                    show = {showTaskCreateModal}\n                    close = {closeTaskCreateModal}\n                    title = \"Create task\"\n                    setInitDispFlg = {setInitDispFlg}\n                />\n            }\n        </Layout>\n    )\n}\n\nconst DynamicTask = dynamic(\n    {\n      loader: async () => Task,\n    },\n    { ssr: false }\n  );\n  \n  export default DynamicTask;"]},"metadata":{},"sourceType":"module"}