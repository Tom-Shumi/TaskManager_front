{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState, useEffect } from 'react';\nimport DailyTaskList from './DailyTaskList';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport { DailyTask } from '../common/interface';\nimport { getApiClient } from '../util/AuthenticationUtil';\nimport Router from 'next/router';\nimport * as NumberUtil from '../util/NumberUtil';\n\nconst DailyTaskBoard = props => {\n  // デイリータスク\n  const {\n    0: dailyTaskList,\n    1: setDailyTaskList\n  } = useState([]);\n  useEffect(() => {\n    props.setInitDispFlg(false);\n    callGetDailyTaskList();\n  }, [props.initDispFlg, props.includeDeleteFlg]);\n\n  const callGetDailyTaskList = () => {\n    var res = getDailyTaskList(props.includeDeleteFlg);\n    res.then(ret => {\n      setDailyTaskList(ret);\n      let doneTaskCount = 0;\n      let totalDoneTime = 0;\n      let deleteTaskCount = 0;\n\n      for (var i = 0; i < ret.length; i++) {\n        if (ret[i].deleteFlg == 1) {\n          deleteTaskCount++;\n          continue;\n        }\n\n        if (ret[i].quota <= ret[i].doneTime) {\n          doneTaskCount++;\n        }\n\n        totalDoneTime += ret[i].doneTime;\n      }\n\n      props.setTotalTaskCount(ret.length - deleteTaskCount);\n      props.setDoneTaskCount(doneTaskCount);\n      props.setTotalDoneTime(NumberUtil.convertHourMinute(totalDoneTime));\n    });\n  };\n\n  return /*#__PURE__*/_jsx(\"div\", {\n    children: /*#__PURE__*/_jsx(DndProvider, {\n      backend: HTML5Backend,\n      children: /*#__PURE__*/_jsx(DailyTaskList, {\n        dailyTaskList: dailyTaskList,\n        setInitDispFlg: props.setInitDispFlg,\n        showDailyTaskEditModal: props.showDailyTaskEditModal\n      }, \"DailyTaskList\")\n    })\n  });\n};\n\nasync function getDailyTaskList(includeDeleteFlg) {\n  var dailyTaskList = [];\n\n  try {\n    const res = await getApiClient().get(process.env.NEXT_PUBLIC_API_DAILY_TASK, {\n      params: {\n        includeDeleteFlg: includeDeleteFlg\n      }\n    });\n    dailyTaskList = createDailyTaskList(res.data);\n  } catch (error) {\n    Router.push('/Error?400');\n  }\n\n  return dailyTaskList;\n}\n\nfunction createDailyTaskList(responseData) {\n  let length = responseData.length;\n  var dailyTaskList = [];\n\n  for (var i = 0; i < length; i++) {\n    let dailyTask = new DailyTask(responseData[i][\"id\"], responseData[i][\"username\"], responseData[i][\"title\"], responseData[i][\"description\"], responseData[i][\"priority\"], responseData[i][\"quota\"], responseData[i][\"deleteFlg\"], responseData[i][\"createDate\"], responseData[i][\"deleteDate\"], responseData[i][\"doneDate\"], responseData[i][\"doneTime\"]);\n    dailyTaskList.push(dailyTask);\n  }\n\n  return dailyTaskList;\n}\n\nexport default DailyTaskBoard;","map":null,"metadata":{},"sourceType":"module"}