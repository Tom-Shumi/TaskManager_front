{"ast":null,"code":"import _regeneratorRuntime from \"/Users/shumiya/Desktop/dev/react/shumipro_front/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/shumiya/Desktop/dev/react/shumipro_front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/shumiya/Desktop/dev/react/shumipro_front/src/pages/Task.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Link from 'next/link';\nimport Layout from '../components/Layout';\nimport TaskBoard from '../components/TaskBoard';\nimport TaskEditModal from '../components/TaskEditModal';\nimport { authentication } from '../components/Authentication';\nimport dynamic from \"next/dynamic\";\nimport { Button } from 'react-bootstrap';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\n\nvar Task = function Task() {\n  _s();\n\n  // タスク作成モーダル表示フラグ\n  var _useState = useState(false),\n      taskCreateModalDispFlg = _useState[0],\n      setTaskCreateModalDispFlg = _useState[1]; // タスク更新モーダル表示フラグ\n\n\n  var _useState2 = useState(false),\n      taskUpdateModalDispFlg = _useState2[0],\n      setTaskUpdateModalDispFlg = _useState2[1]; // 初期表示フラグ\n\n\n  var _useState3 = useState(true),\n      initDispFlg = _useState3[0],\n      setInitDispFlg = _useState3[1]; // 編集対象タスク\n\n\n  var _useState4 = useState(null),\n      targetTask = _useState4[0],\n      setTargetTaskk = _useState4[1];\n\n  authentication();\n\n  var showTaskCreateModal = function showTaskCreateModal(task) {\n    setTargetTaskk(task);\n    setTaskCreateModalDispFlg(true);\n  };\n\n  var closeTaskCreateModal = function closeTaskCreateModal() {\n    setTaskCreateModalDispFlg(false);\n  };\n\n  var showTaskUpdateModal = function showTaskUpdateModal(task) {\n    setTargetTaskk(task);\n    setTaskUpdateModalDispFlg(true);\n  };\n\n  var closeTaskUpdateModal = function closeTaskUpdateModal() {\n    setTaskUpdateModalDispFlg(false);\n  };\n\n  var onDragEnd = function onDragEnd(result) {\n    if (!result.destination) {\n      return;\n    }\n\n    if (result.destination.index === result.source.index) {\n      return;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    title: \"Task.\",\n    children: /*#__PURE__*/_jsxDEV(DndProvider, {\n      backend: HTML5Backend,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        className: \"button_md\",\n        onClick: function onClick() {\n          return showTaskCreateModal(null);\n        },\n        children: \"create task\"\n      }, \"create\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(TaskBoard, {\n        initDispFlg: initDispFlg,\n        setInitDispFlg: setInitDispFlg,\n        show: showTaskUpdateModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Link, {\n        href: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          children: \"\\uFF1C\\uFF1C Back to login page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, _this), taskCreateModalDispFlg && /*#__PURE__*/_jsxDEV(TaskEditModal, {\n        close: closeTaskCreateModal,\n        execSbt: \"1\",\n        setInitDispFlg: setInitDispFlg,\n        task: targetTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, _this), taskUpdateModalDispFlg && /*#__PURE__*/_jsxDEV(TaskEditModal, {\n        close: closeTaskUpdateModal,\n        execSbt: \"2\",\n        setInitDispFlg: setInitDispFlg,\n        task: targetTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Task, \"/kBoXGlBRahQ36wFj/zh3CkAe+o=\");\n\n_c = Task;\nvar DynamicTask = dynamic({\n  loader: function () {\n    var _loader = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", Task);\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function loader() {\n      return _loader.apply(this, arguments);\n    }\n\n    return loader;\n  }()\n}, {\n  ssr: false\n});\nexport default DynamicTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"sources":["/Users/shumiya/Desktop/dev/react/shumipro_front/src/pages/Task.tsx"],"names":["React","useState","Link","Layout","TaskBoard","TaskEditModal","authentication","dynamic","Button","DndProvider","HTML5Backend","Task","taskCreateModalDispFlg","setTaskCreateModalDispFlg","taskUpdateModalDispFlg","setTaskUpdateModalDispFlg","initDispFlg","setInitDispFlg","targetTask","setTargetTaskk","showTaskCreateModal","task","closeTaskCreateModal","showTaskUpdateModal","closeTaskUpdateModal","onDragEnd","result","destination","index","source","DynamicTask","loader","ssr"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Link from 'next/link';\nimport Layout from '../components/Layout';\nimport TaskBoard from '../components/TaskBoard';\nimport TaskEditModal from '../components/TaskEditModal';\nimport {authentication} from '../components/Authentication';\nimport dynamic from \"next/dynamic\";\nimport {Button} from 'react-bootstrap';\nimport { Task as TaskClass } from '../components/interface';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\n\n\nconst Task: React.FC = () => {\n    // タスク作成モーダル表示フラグ\n    const [taskCreateModalDispFlg, setTaskCreateModalDispFlg] = useState<Boolean>(false);\n    // タスク更新モーダル表示フラグ\n    const [taskUpdateModalDispFlg, setTaskUpdateModalDispFlg] = useState<Boolean>(false);\n    // 初期表示フラグ\n    const [initDispFlg, setInitDispFlg] = useState<Boolean>(true);\n    // 編集対象タスク\n    const [targetTask, setTargetTaskk] = useState<TaskClass>(null);\n\n    authentication();\n\n    const showTaskCreateModal = (task: TaskClass) => {\n        setTargetTaskk(task);\n        setTaskCreateModalDispFlg(true);\n    }\n\n    const closeTaskCreateModal = () => {\n        setTaskCreateModalDispFlg(false);\n    }\n\n    const showTaskUpdateModal = (task: TaskClass) => {\n        setTargetTaskk(task);\n        setTaskUpdateModalDispFlg(true);\n    }\n\n    const closeTaskUpdateModal = () => {\n        setTaskUpdateModalDispFlg(false);\n    }\n\n    const onDragEnd = result => {\n        if (!result.destination) {\n          return;\n        }\n    \n        if (result.destination.index === result.source.index) {\n          return;\n        }\n    };\n\n\n    return (\n        <Layout title=\"Task.\">\n            <DndProvider backend={HTML5Backend}>\n                <Button key=\"create\" variant=\"primary\" className=\"button_md\" onClick={ () => showTaskCreateModal(null)}>create task</Button>\n                <TaskBoard\n                    initDispFlg = {initDispFlg}\n                    setInitDispFlg = {setInitDispFlg}\n                    show = {showTaskUpdateModal} />\n                <br />\n                <Link href=\"/\">\n                    <a>＜＜ Back to login page</a>\n                </Link>\n                {taskCreateModalDispFlg && \n                    <TaskEditModal \n                        close = {closeTaskCreateModal}\n                        execSbt = \"1\"\n                        setInitDispFlg = {setInitDispFlg}\n                        task = {targetTask}\n                    />\n                }\n                {taskUpdateModalDispFlg && \n                    <TaskEditModal \n                        close = {closeTaskUpdateModal}\n                        execSbt = \"2\"\n                        setInitDispFlg = {setInitDispFlg}\n                        task = {targetTask}\n                    />\n                }\n            </DndProvider>\n        </Layout>\n    )\n}\n\nconst DynamicTask = dynamic(\n    {\n      loader: async () => Task,\n    },\n    { ssr: false }\n  );\n  \n  export default DynamicTask;"]},"metadata":{},"sourceType":"module"}