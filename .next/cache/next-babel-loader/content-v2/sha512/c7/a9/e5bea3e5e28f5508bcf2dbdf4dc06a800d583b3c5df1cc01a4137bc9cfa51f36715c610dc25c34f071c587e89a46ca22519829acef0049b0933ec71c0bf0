{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/shumiya/Desktop/dev/react/shumipro_front/src/components/TaskBoard/TaskComment.tsx\";\nimport React, { useState } from 'react';\nimport styles from '../../styles/TaskComment.module.css';\nimport { Form } from 'react-bootstrap';\nimport Router from 'next/router';\nimport { getApiClient } from '../util/AuthenticationUtil';\n\nconst TaskComment = props => {\n  const {\n    0: updateFlg,\n    1: setUpdateFlg\n  } = useState(false);\n  const {\n    0: inputComment,\n    1: setInputComment\n  } = useState(props.taskComment.comment); // cookieを使用するaxios生成\n\n  let client = getApiClient();\n\n  const handleChangeInputComment = () => {\n    return e => setInputComment(e.target.value);\n  };\n\n  const cancelTaskCommentEdit = () => {\n    setUpdateFlg(false);\n  };\n\n  const deleteTaskComment = () => {\n    if (confirm(\"Do you want to delete it?\")) {\n      client.delete(`${process.env.NEXT_PUBLIC_API_SERVER + process.env.NEXT_PUBLIC_API_TASK_COMMENT}/${props.taskComment.taskId}/${props.taskComment.id}`).then(response => {\n        props.setInitDispFlg(true);\n      }).catch(() => {\n        Router.push('/Error?400');\n      });\n    }\n  };\n\n  const updateTaskComment = () => {\n    if (updateFlg) {\n      var params = {\n        comment: inputComment\n      };\n      var jsonParams = JSON.stringify(params);\n      client.put(`${process.env.NEXT_PUBLIC_API_SERVER + process.env.NEXT_PUBLIC_API_TASK_COMMENT}/${props.taskComment.taskId}/${props.taskComment.id}`, jsonParams, {\n        headers: {\n          'content-type': 'application/json'\n        }\n      }).then(response => {\n        props.setInitDispFlg(true);\n        setUpdateFlg(false);\n      }).catch(() => {\n        Router.push('/Error?400');\n      });\n    } else {\n      setUpdateFlg(true);\n    }\n  };\n\n  let comment = [];\n\n  if (updateFlg) {\n    comment.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.task_comment_cancel_icon,\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        onClick: cancelTaskCommentEdit,\n        className: \"fa fa-times faa-wrench animated-hover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 116\n      }, this)\n    }, \"commentCancel\" + props.taskComment.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 22\n    }, this));\n    comment.push( /*#__PURE__*/_jsxDEV(Form.Control, {\n      as: \"textarea\",\n      rows: 2,\n      cols: 40,\n      value: inputComment,\n      onChange: handleChangeInputComment()\n    }, \"comment\" + props.taskComment.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 22\n    }, this));\n  } else {\n    comment.push(props.taskComment.comment);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.task_comment,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [comment, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.task_comment_icons,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.task_comment_icon,\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            onClick: updateTaskComment,\n            className: \"fa fa-edit faa-wrench animated-hover\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 63\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.task_comment_icon,\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            onClick: deleteTaskComment,\n            className: \"fa fa-trash faa-wrench animated-hover\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 63\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n\nexport default TaskComment;","map":{"version":3,"sources":["/Users/shumiya/Desktop/dev/react/shumipro_front/src/components/TaskBoard/TaskComment.tsx"],"names":["React","useState","styles","Form","Router","getApiClient","TaskComment","props","updateFlg","setUpdateFlg","inputComment","setInputComment","taskComment","comment","client","handleChangeInputComment","e","target","value","cancelTaskCommentEdit","deleteTaskComment","confirm","delete","process","env","NEXT_PUBLIC_API_SERVER","NEXT_PUBLIC_API_TASK_COMMENT","taskId","id","then","response","setInitDispFlg","catch","push","updateTaskComment","params","jsonParams","JSON","stringify","put","headers","task_comment_cancel_icon","task_comment","task_comment_icons","task_comment_icon"],"mappings":"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","sourcesContent":["import React, { Dispatch, SetStateAction, useState } from 'react';\nimport styles from '../../styles/TaskComment.module.css';\nimport { TaskComment as TaskCommentClass } from '../common/interface';\nimport {Form} from 'react-bootstrap';\nimport Router from 'next/router';\nimport {getApiClient} from '../util/AuthenticationUtil';\n\ninterface TaskCommentProps {\n    taskComment: TaskCommentClass;\n    setInitDispFlg: Dispatch<SetStateAction<boolean>>;\n}\n\nconst TaskComment: React.FC<TaskCommentProps> = (props) => {\n    const [updateFlg, setUpdateFlg] = useState<boolean>(false);\n    const [inputComment, setInputComment] = useState<string>(props.taskComment.comment);\n\n    // cookieを使用するaxios生成\n    let client = getApiClient();\n\n    const handleChangeInputComment = () => {\n        return e => setInputComment(e.target.value);\n    }\n\n    const cancelTaskCommentEdit = () => {\n        setUpdateFlg(false);\n    }\n\n    const deleteTaskComment = () => {\n        if(confirm(\"Do you want to delete it?\")){\n            client.delete(`${process.env.NEXT_PUBLIC_API_SERVER + process.env.NEXT_PUBLIC_API_TASK_COMMENT}/${props.taskComment.taskId}/${props.taskComment.id}`)\n            .then( response => {\n                props.setInitDispFlg(true);\n            }).catch(() => {\n                Router.push('/Error?400');\n            })\n        }\n    }\n\n    const updateTaskComment = () => {\n        if (updateFlg) {\n            var params = {\n                comment: inputComment\n            }\n            var jsonParams = JSON.stringify(params);\n\n            client.put(`${process.env.NEXT_PUBLIC_API_SERVER + process.env.NEXT_PUBLIC_API_TASK_COMMENT}/${props.taskComment.taskId}/${props.taskComment.id}`\n                , jsonParams\n                , {headers: {'content-type': 'application/json'}})\n            .then( response => {\n                props.setInitDispFlg(true);\n                setUpdateFlg(false);\n            }).catch(() => {\n                Router.push('/Error?400');\n            })\n        } else {\n            setUpdateFlg(true);\n        }\n    }\n\n    let comment = [];\n    if (updateFlg) {\n        comment.push(<div className={styles.task_comment_cancel_icon}　key={\"commentCancel\" + props.taskComment.id}><i onClick={cancelTaskCommentEdit} className=\"fa fa-times faa-wrench animated-hover\" /></div>);\n        comment.push(<Form.Control as=\"textarea\" rows={2} cols={40} value={inputComment} onChange={handleChangeInputComment()} key={\"comment\" + props.taskComment.id} />);\n    } else {\n        comment.push(props.taskComment.comment);\n    }\n\n    return (\n        <div className={styles.task_comment}>\n            <div>\n                {comment}\n                <div className={styles.task_comment_icons}>\n                    <div className={styles.task_comment_icon}><i onClick={updateTaskComment} className=\"fa fa-edit faa-wrench animated-hover\" /></div>\n                    <div className={styles.task_comment_icon}><i onClick={deleteTaskComment} className=\"fa fa-trash faa-wrench animated-hover\" /></div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default TaskComment;"]},"metadata":{},"sourceType":"module"}