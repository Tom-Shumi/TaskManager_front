{"ast":null,"code":"import _regeneratorRuntime from \"/Users/shumiya/Desktop/dev/react/shumipro_front/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/shumiya/Desktop/dev/react/shumipro_front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/shumiya/Desktop/dev/react/shumipro_front/src/pages/Task.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Layout from '../components/Layout';\nimport TaskBoard from '../components/TaskBoard';\nimport TaskEditModal from '../components/TaskEditModal';\nimport TaskCommentModal from '../components/TaskCommentModal';\nimport { authentication, logout } from '../components/Authentication';\nimport dynamic from \"next/dynamic\";\nimport { Button } from 'react-bootstrap';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport Menu from '../components/Menu';\n\nvar Task = function Task() {\n  _s();\n\n  // タスク作成モーダル表示フラグ\n  var _useState = useState(false),\n      taskCreateModalDispFlg = _useState[0],\n      setTaskCreateModalDispFlg = _useState[1]; // タスク更新モーダル表示フラグ\n\n\n  var _useState2 = useState(false),\n      taskUpdateModalDispFlg = _useState2[0],\n      setTaskUpdateModalDispFlg = _useState2[1]; // タスクコメントモーダル表示フラグ\n\n\n  var _useState3 = useState(false),\n      taskCommentModalDispFlg = _useState3[0],\n      setTaskCommentModalDispFlg = _useState3[1]; // 初期表示フラグ\n\n\n  var _useState4 = useState(true),\n      initDispFlg = _useState4[0],\n      setInitDispFlg = _useState4[1]; // 編集対象タスク\n\n\n  var _useState5 = useState(null),\n      targetTask = _useState5[0],\n      setTargetTaskk = _useState5[1];\n\n  authentication();\n\n  var showTaskCreateModal = function showTaskCreateModal(task) {\n    setTargetTaskk(task);\n    setTaskCreateModalDispFlg(true);\n  };\n\n  var closeTaskCreateModal = function closeTaskCreateModal() {\n    setTaskCreateModalDispFlg(false);\n  };\n\n  var showTaskUpdateModal = function showTaskUpdateModal(task) {\n    setTargetTaskk(task);\n    setTaskUpdateModalDispFlg(true);\n  };\n\n  var closeTaskUpdateModal = function closeTaskUpdateModal() {\n    setTaskUpdateModalDispFlg(false);\n  };\n\n  var showTaskCommentModal = function showTaskCommentModal(task) {\n    setTargetTaskk(task);\n    setTaskCommentModalDispFlg(true);\n  };\n\n  var closeTaskCommentModal = function closeTaskCommentModal() {\n    setTaskCommentModalDispFlg(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    title: \"Task Board.\",\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: 4,\n          className: \"margin_top_5\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            className: \"button_md\",\n            onClick: function onClick() {\n              return showTaskCreateModal(null);\n            },\n            children: \"create task\"\n          }, \"create\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 8,\n          className: \"div_link_right\",\n          children: /*#__PURE__*/_jsxDEV(Menu, {\n            width: 250\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(TaskBoard, {\n      initDispFlg: initDispFlg,\n      setInitDispFlg: setInitDispFlg,\n      showTaskUpdateModal: showTaskUpdateModal,\n      showTaskCommentModal: showTaskCommentModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"div_link\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"div_link_left\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          onClick: logout,\n          href: \"#\",\n          children: \"\\uFF1C\\uFF1C Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, _this), taskCreateModalDispFlg && /*#__PURE__*/_jsxDEV(TaskEditModal, {\n      close: closeTaskCreateModal,\n      execSbt: \"1\",\n      setInitDispFlg: setInitDispFlg,\n      task: targetTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }, _this), taskUpdateModalDispFlg && /*#__PURE__*/_jsxDEV(TaskEditModal, {\n      close: closeTaskUpdateModal,\n      execSbt: \"2\",\n      setInitDispFlg: setInitDispFlg,\n      task: targetTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }, _this), taskCommentModalDispFlg && /*#__PURE__*/_jsxDEV(TaskCommentModal, {\n      close: closeTaskCommentModal,\n      task: targetTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Task, \"PzQ4siYjjZuZ8lfbLTA6tFx4t0M=\");\n\n_c = Task;\nvar DynamicTask = dynamic({\n  loader: function () {\n    var _loader = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", Task);\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function loader() {\n      return _loader.apply(this, arguments);\n    }\n\n    return loader;\n  }()\n}, {\n  ssr: false\n});\nexport default DynamicTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"sources":["/Users/shumiya/Desktop/dev/react/shumipro_front/src/pages/Task.tsx"],"names":["React","useState","Layout","TaskBoard","TaskEditModal","TaskCommentModal","authentication","logout","dynamic","Button","Container","Row","Col","Menu","Task","taskCreateModalDispFlg","setTaskCreateModalDispFlg","taskUpdateModalDispFlg","setTaskUpdateModalDispFlg","taskCommentModalDispFlg","setTaskCommentModalDispFlg","initDispFlg","setInitDispFlg","targetTask","setTargetTaskk","showTaskCreateModal","task","closeTaskCreateModal","showTaskUpdateModal","closeTaskUpdateModal","showTaskCommentModal","closeTaskCommentModal","DynamicTask","loader","ssr"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Link from 'next/link';\nimport Layout from '../components/Layout';\nimport TaskBoard from '../components/TaskBoard';\nimport TaskEditModal from '../components/TaskEditModal';\nimport TaskCommentModal from '../components/TaskCommentModal';\nimport {authentication, logout} from '../components/Authentication';\nimport dynamic from \"next/dynamic\";\nimport {Button} from 'react-bootstrap';\nimport { Task as TaskClass } from '../components/interface';\nimport {Container, Row, Col} from 'react-bootstrap';\nimport Menu from '../components/Menu';\n\n\nconst Task: React.FC = () => {\n    // タスク作成モーダル表示フラグ\n    const [taskCreateModalDispFlg, setTaskCreateModalDispFlg] = useState<Boolean>(false);\n    // タスク更新モーダル表示フラグ\n    const [taskUpdateModalDispFlg, setTaskUpdateModalDispFlg] = useState<Boolean>(false);\n    // タスクコメントモーダル表示フラグ\n    const [taskCommentModalDispFlg, setTaskCommentModalDispFlg] = useState<Boolean>(false);\n    // 初期表示フラグ\n    const [initDispFlg, setInitDispFlg] = useState<Boolean>(true);\n    // 編集対象タスク\n    const [targetTask, setTargetTaskk] = useState<TaskClass>(null);\n\n    authentication();\n\n    const showTaskCreateModal = (task: TaskClass) => {\n        setTargetTaskk(task);\n        setTaskCreateModalDispFlg(true);\n    }\n\n    const closeTaskCreateModal = () => {\n        setTaskCreateModalDispFlg(false);\n    }\n\n    const showTaskUpdateModal = (task: TaskClass) => {\n        setTargetTaskk(task);\n        setTaskUpdateModalDispFlg(true);\n    }\n\n    const closeTaskUpdateModal = () => {\n        setTaskUpdateModalDispFlg(false);\n    }\n\n    const showTaskCommentModal = (task: TaskClass) => {\n        setTargetTaskk(task);\n        setTaskCommentModalDispFlg(true);\n    }\n\n    const closeTaskCommentModal = () => {\n        setTaskCommentModalDispFlg(false);\n    }\n\n    return (\n        <Layout title=\"Task Board.\">\n            <Container>\n                <Row>\n                    <Col xs={4} className=\"margin_top_5\">\n                        <Button key=\"create\" variant=\"primary\" className=\"button_md\" onClick={ () => showTaskCreateModal(null)}>create task</Button>\n                    </Col>\n                    <Col xs={8} className=\"div_link_right\">\n                        <Menu width={250}/>\n                    </Col>\n                </Row>\n            </Container>\n            <TaskBoard\n                initDispFlg = {initDispFlg}\n                setInitDispFlg = {setInitDispFlg}\n                showTaskUpdateModal = {showTaskUpdateModal}\n                showTaskCommentModal = {showTaskCommentModal} />\n            <br />\n            <div className=\"div_link\">\n                <div className=\"div_link_left\">\n                    <a onClick={logout} href=\"#\">＜＜ Logout</a>\n                </div>\n            </div>\n            {taskCreateModalDispFlg && \n                <TaskEditModal \n                    close = {closeTaskCreateModal}\n                    execSbt = \"1\"\n                    setInitDispFlg = {setInitDispFlg}\n                    task = {targetTask}\n                />\n            }\n            {taskUpdateModalDispFlg && \n                <TaskEditModal \n                    close = {closeTaskUpdateModal}\n                    execSbt = \"2\"\n                    setInitDispFlg = {setInitDispFlg}\n                    task = {targetTask}\n                />\n            }\n            {taskCommentModalDispFlg && \n                <TaskCommentModal \n                    close = {closeTaskCommentModal}\n                    task = {targetTask}\n                />\n            }\n        </Layout>\n    )\n}\n\nconst DynamicTask = dynamic(\n    {\n      loader: async () => Task,\n    },\n    { ssr: false }\n  );\n  \n  export default DynamicTask;"]},"metadata":{},"sourceType":"module"}