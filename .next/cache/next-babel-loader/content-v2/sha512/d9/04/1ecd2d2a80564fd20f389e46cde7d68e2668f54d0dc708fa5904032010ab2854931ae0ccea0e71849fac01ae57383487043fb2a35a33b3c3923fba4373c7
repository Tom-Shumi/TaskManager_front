{"ast":null,"code":"import _regeneratorRuntime from \"/Users/shumiya/Desktop/dev/react/shumipro_front/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/shumiya/Desktop/dev/react/shumipro_front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _toConsumableArray from \"/Users/shumiya/Desktop/dev/react/shumipro_front/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"/Users/shumiya/Desktop/dev/react/shumipro_front/src/components/DailyTaskHistory/DailyTaskHistoryBoard.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport DailyTaskHistoryList from './DailyTaskHistoryList';\nimport { DailyTaskHistory } from '../common/interface';\nimport { getApiClient } from '../util/AuthenticationUtil';\nimport Router from 'next/router';\nimport * as DatePickerUtil from '../util/DatePickerUtil';\nimport styles from '../../styles/DailyTaskHistoryBoard.module.css';\n\nvar DailyTaskHistoryBoard = function DailyTaskHistoryBoard(props) {\n  _s();\n\n  var _useState = useState([]),\n      dailyTaskHistoryList = _useState[0],\n      setDailyTaskHistoryList = _useState[1];\n\n  useEffect(function () {\n    callGetDailyTaskHistoryList();\n  }, []);\n\n  var callGetDailyTaskHistoryList = function callGetDailyTaskHistoryList() {\n    var res = getDailyTaskHistoryList(props.targetDate);\n    res.then(function (ret) {\n      setDailyTaskHistoryList(ret);\n    });\n  };\n\n  var loadNextHistory = function loadNextHistory() {\n    var nextTargetDate = props.targetDate.setDate(props.targetDate.getDate() - 5);\n\n    try {\n      getApiClient().get(process.env.NEXT_PUBLIC_API_DAILY_TASK_HISTORY, {\n        params: {\n          nextTargetDate: nextTargetDate\n        }\n      }).then(function (res) {\n        var taskCommentList = createDailyTaskHistoryList(res.data);\n        setDailyTaskHistoryList([].concat(_toConsumableArray(dailyTaskHistoryList), _toConsumableArray(taskCommentList)));\n      });\n    } catch (error) {\n      Router.push('/Error?400');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(DailyTaskHistoryList, {\n      dailyTaskHistoryList: dailyTaskHistoryList,\n      targetDate: props.targetDate\n    }, \"DailyTaskHistoryList\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.daily_task_history_load,\n      onClick: loadNextHistory,\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa fa-arrow-circle-down faa-wrench animated-hover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 87\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(DailyTaskHistoryBoard, \"2EBrC7q888oT2ujUMH2PcI1ZPaw=\");\n\n_c = DailyTaskHistoryBoard;\n\nfunction getDailyTaskHistoryList(_x) {\n  return _getDailyTaskHistoryList.apply(this, arguments);\n}\n\nfunction _getDailyTaskHistoryList() {\n  _getDailyTaskHistoryList = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(date) {\n    var dateStr, dailyTaskHistoryList, res;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            dateStr = DatePickerUtil.dateStrYYYYMMDD(date);\n            dailyTaskHistoryList = new Array();\n            _context.prev = 2;\n            _context.next = 5;\n            return getApiClient().get(process.env.NEXT_PUBLIC_API_DAILY_TASK_HISTORY, {\n              params: {\n                nextTargetDate: dateStr\n              }\n            });\n\n          case 5:\n            res = _context.sent;\n            dailyTaskHistoryList = createDailyTaskHistoryList(res.data);\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](2);\n            Router.push('/Error?400');\n\n          case 12:\n            return _context.abrupt(\"return\", dailyTaskHistoryList);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[2, 9]]);\n  }));\n  return _getDailyTaskHistoryList.apply(this, arguments);\n}\n\nfunction createDailyTaskHistoryList(responseData) {\n  var outerLength = responseData.length;\n  var dailyTaskHistoryList = [];\n\n  for (var i = 0; i < outerLength; i++) {\n    var tempList = responseData[i];\n    var innerLength = tempList.length;\n    dailyTaskHistoryList[i] = new Array();\n\n    for (var j = 0; j < innerLength; j++) {\n      var dailyTaskHistory = new DailyTaskHistory(responseData[i][j][\"dailyTaskId\"], responseData[i][j][\"title\"], responseData[i][j][\"doneDate\"], responseData[i][j][\"doneTime\"], responseData[i][j][\"quota\"], responseData[i][j][\"doneFlg\"]);\n      dailyTaskHistoryList[i].push(dailyTaskHistory);\n    }\n  }\n\n  return dailyTaskHistoryList;\n}\n\nexport default DailyTaskHistoryBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"DailyTaskHistoryBoard\");","map":{"version":3,"sources":["/Users/shumiya/Desktop/dev/react/shumipro_front/src/components/DailyTaskHistory/DailyTaskHistoryBoard.tsx"],"names":["React","useState","useEffect","DailyTaskHistoryList","DailyTaskHistory","getApiClient","Router","DatePickerUtil","styles","DailyTaskHistoryBoard","props","dailyTaskHistoryList","setDailyTaskHistoryList","callGetDailyTaskHistoryList","res","getDailyTaskHistoryList","targetDate","then","ret","loadNextHistory","nextTargetDate","setDate","getDate","get","process","env","NEXT_PUBLIC_API_DAILY_TASK_HISTORY","params","taskCommentList","createDailyTaskHistoryList","data","error","push","daily_task_history_load","date","dateStr","dateStrYYYYMMDD","Array","responseData","outerLength","length","i","tempList","innerLength","j","dailyTaskHistory"],"mappings":"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","sourcesContent":["import React, { Dispatch, SetStateAction, useState, useEffect} from 'react';\nimport DailyTaskHistoryList from './DailyTaskHistoryList';\nimport { DailyTaskHistory } from '../common/interface';\nimport {getApiClient} from '../util/AuthenticationUtil';\nimport Router from 'next/router';\nimport * as DatePickerUtil from '../util/DatePickerUtil';\nimport styles from '../../styles/DailyTaskHistoryBoard.module.css';\n\n\ninterface DailyTaskHistoryBoardProps {\n    targetDate: Date;\n    setTargetDate: Dispatch<SetStateAction<Date>>;\n}\n\nconst DailyTaskHistoryBoard: React.FC<DailyTaskHistoryBoardProps> = (props) => {\n    const [dailyTaskHistoryList, setDailyTaskHistoryList] = useState<DailyTaskHistory[][]>([]);\n\n    useEffect(() => {\n        callGetDailyTaskHistoryList();\n    }, []);\n\n    const callGetDailyTaskHistoryList = () => {\n        var res: Promise<DailyTaskHistory[][]> = getDailyTaskHistoryList(props.targetDate);\n        res.then(ret => {\n            setDailyTaskHistoryList(ret);\n        });\n    }\n\n    const loadNextHistory = () => {\n        let nextTargetDate = props.targetDate.setDate(props.targetDate.getDate() - 5)\n        try {\n\n            getApiClient().get(process.env.NEXT_PUBLIC_API_DAILY_TASK_HISTORY, {\n                params: {\n                    nextTargetDate: nextTargetDate\n                }\n            }).then(res => {\n                let taskCommentList = createDailyTaskHistoryList(res.data);\n                setDailyTaskHistoryList([...dailyTaskHistoryList, ...taskCommentList])\n            })\n        } catch(error){\n            Router.push('/Error?400');\n        }\n    }\n\n    return (\n        <div>\n            <DailyTaskHistoryList \n                key=\"DailyTaskHistoryList\"\n                dailyTaskHistoryList={dailyTaskHistoryList}\n                targetDate={props.targetDate}\n            />\n\n            <div className={styles.daily_task_history_load} onClick={loadNextHistory}><i className=\"fa fa-arrow-circle-down faa-wrench animated-hover\" /></div>\n        </div>\n    )\n}\n\nasync function getDailyTaskHistoryList(date: Date){\n    let dateStr = DatePickerUtil.dateStrYYYYMMDD(date)\n    var dailyTaskHistoryList : DailyTaskHistory[][] = new Array();\n\n    try {\n        const res = await getApiClient().get(process.env.NEXT_PUBLIC_API_DAILY_TASK_HISTORY, {\n            params: {\n                nextTargetDate: dateStr\n            }\n        });\n        dailyTaskHistoryList = createDailyTaskHistoryList(res.data);\n    } catch(error){\n        Router.push('/Error?400');\n    }\n    return dailyTaskHistoryList;\n}\n\nfunction createDailyTaskHistoryList(responseData: any[]): DailyTaskHistory[][]{\n\n    let outerLength: number = responseData.length;\n    var dailyTaskHistoryList :DailyTaskHistory[][] = [];\n\n    for (var i = 0; i < outerLength; i++) {\n\n        let tempList = responseData[i]\n        let innerLength = tempList.length;\n\n        dailyTaskHistoryList[i] = new Array();\n\n        for (var j = 0; j < innerLength; j++) {\n\n            let dailyTaskHistory = new DailyTaskHistory(responseData[i][j][\"dailyTaskId\"], responseData[i][j][\"title\"],\n            responseData[i][j][\"doneDate\"], responseData[i][j][\"doneTime\"], responseData[i][j][\"quota\"], responseData[i][j][\"doneFlg\"]);\n\n            dailyTaskHistoryList[i].push(dailyTaskHistory);\n        }\n    }\n    return dailyTaskHistoryList;\n}\n\nexport default DailyTaskHistoryBoard;"]},"metadata":{},"sourceType":"module"}