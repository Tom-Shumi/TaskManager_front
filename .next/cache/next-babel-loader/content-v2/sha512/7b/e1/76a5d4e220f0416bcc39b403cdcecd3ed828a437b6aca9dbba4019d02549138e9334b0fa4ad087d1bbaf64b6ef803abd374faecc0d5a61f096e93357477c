{"ast":null,"code":"export const convertHourMinute = time => {\n  if (time == null) {\n    return '0 m';\n  }\n\n  const hour = Math.floor(time / 60);\n  const minute = time % 60;\n  let hourMinute = \"\";\n\n  if (hour < 0) {\n    return \"0 m\";\n  }\n\n  if (hour != 0) {\n    hourMinute += `${hour} h`;\n  }\n\n  if (minute != 0) {\n    hourMinute = hourMinute == \"\" ? hourMinute : hourMinute + \" \";\n    hourMinute += `${minute} m`;\n  }\n\n  return hourMinute == \"\" ? \"0 m\" : hourMinute;\n};\nexport const convertRemaining = remaining => {\n  if (props.dailyTask.doneTime == null) {\n    remaining = quota;\n  } else {\n    remaining = NumberUtil.convertHourMinute(props.dailyTask.quota - props.dailyTask.doneTime);\n  }\n};","map":{"version":3,"sources":["/Users/shumiya/Desktop/dev/react/shumipro_front/src/components/util/NumberUtil.ts"],"names":["convertHourMinute","time","hour","Math","floor","minute","hourMinute","convertRemaining","remaining","props","dailyTask","doneTime","quota","NumberUtil"],"mappings":"AACA,OAAO,MAAMA,iBAAiB,GAAIC,IAAD,IAAkB;AAC/C,MAAIA,IAAI,IAAI,IAAZ,EAAkB;AACd,WAAO,KAAP;AACH;;AACD,QAAMC,IAAY,GAAGC,IAAI,CAACC,KAAL,CAAWH,IAAI,GAAG,EAAlB,CAArB;AACA,QAAMI,MAAc,GAAGJ,IAAI,GAAG,EAA9B;AACA,MAAIK,UAAU,GAAG,EAAjB;;AACA,MAAIJ,IAAI,GAAG,CAAX,EAAc;AACV,WAAO,KAAP;AACH;;AACD,MAAIA,IAAI,IAAI,CAAZ,EAAe;AACXI,IAAAA,UAAU,IAAK,GAAEJ,IAAK,IAAtB;AACH;;AACD,MAAIG,MAAM,IAAI,CAAd,EAAiB;AACbC,IAAAA,UAAU,GAAGA,UAAU,IAAI,EAAd,GAAmBA,UAAnB,GAAgCA,UAAU,GAAG,GAA1D;AACAA,IAAAA,UAAU,IAAK,GAAED,MAAO,IAAxB;AACH;;AACD,SAAOC,UAAU,IAAI,EAAd,GAAmB,KAAnB,GAA2BA,UAAlC;AACH,CAlBM;AAoBP,OAAO,MAAMC,gBAAgB,GAAIC,SAAD,IAAuB;AACnD,MAAIC,KAAK,CAACC,SAAN,CAAgBC,QAAhB,IAA4B,IAAhC,EAAsC;AAClCH,IAAAA,SAAS,GAAGI,KAAZ;AACH,GAFD,MAEO;AACHJ,IAAAA,SAAS,GAAGK,UAAU,CAACb,iBAAX,CAA6BS,KAAK,CAACC,SAAN,CAAgBE,KAAhB,GAAwBH,KAAK,CAACC,SAAN,CAAgBC,QAArE,CAAZ;AACH;AACJ,CANM","sourcesContent":["\nexport const convertHourMinute = (time: number) => {\n    if (time == null) {\n        return '0 m';\n    }\n    const hour: number = Math.floor(time / 60);\n    const minute: number = time % 60;\n    let hourMinute = \"\"\n    if (hour < 0) {\n        return \"0 m\"\n    }\n    if (hour != 0) {\n        hourMinute += `${hour} h`\n    }\n    if (minute != 0) {\n        hourMinute = hourMinute == \"\" ? hourMinute : hourMinute + \" \";\n        hourMinute += `${minute} m`;\n    }\n    return hourMinute == \"\" ? \"0 m\" : hourMinute;\n}\n\nexport const convertRemaining = (remaining: number) => {\n    if (props.dailyTask.doneTime == null) {\n        remaining = quota;\n    } else {\n        remaining = NumberUtil.convertHourMinute(props.dailyTask.quota - props.dailyTask.doneTime);\n    }\n}"]},"metadata":{},"sourceType":"module"}