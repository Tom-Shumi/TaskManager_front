{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/shumiya/Desktop/dev/react/shumipro_front/src/components/TaskComment.tsx\";\nimport React, { useState } from 'react';\nimport styles from '../styles/TaskComment.module.css';\nimport { Form } from 'react-bootstrap';\nimport Router from 'next/router';\nimport Axios from \"axios\";\n\nconst TaskComment = props => {\n  const {\n    0: updateFlg,\n    1: setUpdateFlg\n  } = useState(false);\n  const {\n    0: inputComment,\n    1: setInputComment\n  } = useState(props.taskComment.comment); // cookieを使用するaxios生成\n\n  let client = Axios.create({\n    withCredentials: true\n  });\n\n  const handleChangeInputComment = () => {\n    return e => setInputComment(e.target.value);\n  };\n\n  const cancelTaskCommentEdit = () => {\n    setUpdateFlg(false);\n  };\n\n  let comment = [];\n\n  if (updateFlg) {\n    comment.push( /*#__PURE__*/_jsxDEV(\"i\", {\n      onClick: cancelTaskCommentEdit,\n      className: \"fa fa-times faa-wrench animated-hover\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 22\n    }, this));\n    comment.push( /*#__PURE__*/_jsxDEV(Form.Control, {\n      as: \"textarea\",\n      rows: 2,\n      cols: 40,\n      value: inputComment,\n      onChange: handleChangeInputComment\n    }, \"comment\" + props.taskComment.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 22\n    }, this));\n  } else {\n    comment.push(props.taskComment.comment);\n  }\n\n  const deleteTaskComment = () => {\n    if (confirm(\"Do you want to delete it?\")) {\n      client.delete(`${process.env.NEXT_PUBLIC_API_SERVER + process.env.NEXT_PUBLIC_API_TASK_COMMENT}${props.taskComment.taskId}/${props.taskComment.id}`).then(response => {\n        props.setInitDispFlg(true);\n      }).catch(() => {\n        Router.push('/Error?400');\n      });\n    }\n  };\n\n  const updateTaskComment = () => {\n    if (updateFlg) {} else {\n      setUpdateFlg(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.task_comment,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [comment, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.task_comment_icons,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.task_comment_icon,\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            onClick: updateTaskComment,\n            className: \"fa fa-edit faa-wrench animated-hover\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 63\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.task_comment_icon,\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            onClick: deleteTaskComment,\n            className: \"fa fa-trash faa-wrench animated-hover\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 63\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\nexport default TaskComment;","map":{"version":3,"sources":["/Users/shumiya/Desktop/dev/react/shumipro_front/src/components/TaskComment.tsx"],"names":["React","useState","styles","Form","Router","Axios","TaskComment","props","updateFlg","setUpdateFlg","inputComment","setInputComment","taskComment","comment","client","create","withCredentials","handleChangeInputComment","e","target","value","cancelTaskCommentEdit","push","id","deleteTaskComment","confirm","delete","process","env","NEXT_PUBLIC_API_SERVER","NEXT_PUBLIC_API_TASK_COMMENT","taskId","then","response","setInitDispFlg","catch","updateTaskComment","task_comment","task_comment_icons","task_comment_icon"],"mappings":"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","sourcesContent":["import React, { Dispatch, SetStateAction, useState } from 'react';\nimport styles from '../styles/TaskComment.module.css';\nimport { TaskComment as TaskCommentClass } from './interface';\nimport {Form} from 'react-bootstrap';\nimport Router from 'next/router';\nimport Axios from \"axios\";\n\ninterface TaskCommentProps {\n    taskComment: TaskCommentClass;\n    setInitDispFlg: Dispatch<SetStateAction<boolean>>;\n}\n\nconst TaskComment: React.FC<TaskCommentProps> = (props) => {\n    const [updateFlg, setUpdateFlg] = useState<boolean>(false);\n    const [inputComment, setInputComment] = useState<string>(props.taskComment.comment);\n\n    // cookieを使用するaxios生成\n    let client = Axios.create({ withCredentials: true });\n\n    const handleChangeInputComment = () => {\n        return e => setInputComment(e.target.value);\n    }\n\n    const cancelTaskCommentEdit = () => {\n        setUpdateFlg(false);\n    }\n\n    let comment = [];\n    if (updateFlg) {\n        comment.push(<i onClick={cancelTaskCommentEdit} className=\"fa fa-times faa-wrench animated-hover\" />);\n        comment.push(<Form.Control as=\"textarea\" rows={2} cols={40} value={inputComment} onChange={handleChangeInputComment} key={\"comment\" + props.taskComment.id} />);\n    } else {\n        comment.push(props.taskComment.comment);\n    }\n\n    const deleteTaskComment = () => {\n        if(confirm(\"Do you want to delete it?\")){\n            client.delete(`${process.env.NEXT_PUBLIC_API_SERVER + process.env.NEXT_PUBLIC_API_TASK_COMMENT}${props.taskComment.taskId}/${props.taskComment.id}`)\n            .then( response => {\n                props.setInitDispFlg(true);\n            }).catch(() => {\n                Router.push('/Error?400');\n            })\n        }\n    }\n\n    const updateTaskComment = () => {\n        if (updateFlg) {\n\n        } else {\n            setUpdateFlg(true);\n        }\n    }\n\n    return (\n        <div className={styles.task_comment}>\n            <div>\n                {comment}\n                <div className={styles.task_comment_icons}>\n                    <div className={styles.task_comment_icon}><i onClick={updateTaskComment} className=\"fa fa-edit faa-wrench animated-hover\" /></div>\n                    <div className={styles.task_comment_icon}><i onClick={deleteTaskComment} className=\"fa fa-trash faa-wrench animated-hover\" /></div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default TaskComment;"]},"metadata":{},"sourceType":"module"}