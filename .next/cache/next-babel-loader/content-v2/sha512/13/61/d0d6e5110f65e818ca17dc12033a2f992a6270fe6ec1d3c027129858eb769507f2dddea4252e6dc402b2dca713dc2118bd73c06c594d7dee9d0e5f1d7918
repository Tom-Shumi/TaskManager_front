{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"/Users/shumiya/Desktop/dev/react/shumipro_front/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/shumiya/Desktop/dev/react/shumipro_front/src/components/TaskEditModal.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport { Modal, Button, Form, Row, Col } from 'react-bootstrap';\nimport Axios from \"axios\";\nimport Router from 'next/router';\n\nvar TaskEditModal = function TaskEditModal(props) {\n  _s();\n\n  var _useState = useState({\n    id: -1,\n    task: \"\",\n    priority: 1,\n    description: \"\"\n  }),\n      form = _useState[0],\n      setForm = _useState[1];\n\n  useEffect(function () {\n    if (props.task != null) {\n      setForm({\n        id: props.task.id,\n        task: props.task.taskTitle,\n        priority: props.task.priority,\n        description: props.task.description\n      });\n    }\n  }, []); // form入力のハンドリング\n\n  var handleChange = function handleChange(input) {\n    return function (e) {\n      return setForm(_objectSpread(_objectSpread({}, form), {}, _defineProperty({}, input, e.target.value)));\n    };\n  }; // cookieを使用するaxios生成\n\n\n  var client = Axios.create({\n    withCredentials: true\n  }); // executeボタン押下処理\n\n  var clickExecute = function clickExecute() {\n    execute();\n  }; // リクエスト用json取得\n\n\n  var getJsonParams = function getJsonParams() {\n    var params = {\n      task: form.task,\n      priority: form.priority,\n      status: '1',\n      description: form.description\n    };\n    return JSON.stringify(params);\n  }; // task登録\n\n\n  var create = function create() {\n    var jsonParams = getJsonParams();\n    client.post(process.env.NEXT_PUBLIC_API_SERVER + process.env.NEXT_PUBLIC_API_TASK, jsonParams, {\n      headers: {\n        'content-type': 'application/json'\n      }\n    }).then(function (response) {\n      props.setInitDispFlg(true);\n      props.close();\n    })[\"catch\"](function () {\n      Router.push('/Error?400');\n    });\n  }; // task更新\n\n\n  var update = function update() {\n    var jsonParams = getJsonParams();\n    client.put(process.env.NEXT_PUBLIC_API_SERVER + process.env.NEXT_PUBLIC_API_TASK + \"/\" + props.task.id, jsonParams, {\n      headers: {\n        'content-type': 'application/json'\n      }\n    }).then(function (response) {\n      props.setInitDispFlg(true);\n      props.close();\n    })[\"catch\"](function () {\n      Router.push('/Error?400');\n    });\n  };\n\n  var title;\n  var execute;\n\n  switch (props.execSbt) {\n    case \"1\":\n      title = 'Create task';\n      execute = create;\n      break;\n\n    case \"2\":\n      title = 'Update task';\n      execute = update;\n      break;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: props.show,\n    onHide: props.close,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            xs: 4,\n            className: \"modal_label\",\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 29\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(Col, {\n            xs: 8,\n            className: \"modal_input\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              value: form.task,\n              onChange: handleChange('task')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 33\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(Col, {\n            xs: 4,\n            className: \"modal_label\",\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Priority\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 29\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(Col, {\n            xs: 8,\n            className: \"modal_input\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              value: form.priority,\n              onChange: handleChange('priority'),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"1\",\n                children: \"LOW\"\n              }, \"priority1\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 33\n              }, _this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"2\",\n                children: \"MEDIUM\"\n              }, \"priority2\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 33\n              }, _this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"3\",\n                children: \"HIGH\"\n              }, \"priority3\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 33\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 29\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(Col, {\n            xs: 4,\n            className: \"modal_label\",\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 29\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(Col, {\n            xs: 8,\n            className: \"modal_input\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 4,\n              cols: 40,\n              value: form.description,\n              onChange: handleChange('description')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 33\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: clickExecute,\n        className: \"button_sm\",\n        children: \"execute\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 16\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"dark\",\n        onClick: props.close,\n        className: \"button_sm\",\n        children: \"close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, _this)]\n  }, 'taskEditModal', true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(TaskEditModal, \"Ckb/YX+dy6ZEhddw68E1cAvsXaA=\");\n\n_c = TaskEditModal;\nexport default TaskEditModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskEditModal\");","map":{"version":3,"sources":["/Users/shumiya/Desktop/dev/react/shumipro_front/src/components/TaskEditModal.tsx"],"names":["React","useState","useEffect","Modal","Button","Form","Row","Col","Axios","Router","TaskEditModal","props","id","task","priority","description","form","setForm","taskTitle","handleChange","input","e","target","value","client","create","withCredentials","clickExecute","execute","getJsonParams","params","status","JSON","stringify","jsonParams","post","process","env","NEXT_PUBLIC_API_SERVER","NEXT_PUBLIC_API_TASK","headers","then","response","setInitDispFlg","close","push","update","put","title","execSbt","show"],"mappings":"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","sourcesContent":["import React, { Dispatch, SetStateAction, useState, useEffect } from 'react';\nimport {Modal, Button, Form, Row, Col} from 'react-bootstrap';\nimport Axios from \"axios\";\nimport Router from 'next/router';\nimport { Task } from '../components/interface'\n\ninterface TaskEditModalProps {\n    show: () => void;\n    close: () => void;\n    execSbt: string;\n    setInitDispFlg: Dispatch<SetStateAction<Boolean>>;\n    task: Task;\n}\n\n\nconst TaskEditModal: React.FC<TaskEditModalProps> = (props) => {\n    const [form, setForm] = useState({id: -1, task: \"\", priority: 1, description: \"\"});\n　　\n    useEffect(() => {\n        if (props.task != null) {\n            setForm({id: props.task.id, task: props.task.taskTitle, priority: props.task.priority, description: props.task.description});\n        }\n    }, []);\n\n    // form入力のハンドリング\n    const handleChange = (input) => {\n        return e => setForm({...form, [input]: e.target.value})\n    }\n    // cookieを使用するaxios生成\n    let client = Axios.create({ withCredentials: true });\n\n    // executeボタン押下処理\n    const clickExecute = () => {\n        execute();\n    }\n\n    // リクエスト用json取得\n    const getJsonParams = () => {\n        var params = {\n            task: form.task,\n            priority: form.priority,\n            status: '1',\n            description: form.description\n        }\n        \n        return JSON.stringify(params);\n    }\n\n    // task登録\n    const create = () => {\n        var jsonParams = getJsonParams();\n    \n        client.post(process.env.NEXT_PUBLIC_API_SERVER + process.env.NEXT_PUBLIC_API_TASK\n            , jsonParams\n            , {headers: {'content-type': 'application/json'}})\n        .then( response => {\n            props.setInitDispFlg(true);\n            props.close();\n        }).catch(() => {\n            Router.push('/Error?400');\n        })\n    }\n\n    // task更新\n    const update = () => {\n        var jsonParams = getJsonParams();\n    \n        client.put(process.env.NEXT_PUBLIC_API_SERVER + process.env.NEXT_PUBLIC_API_TASK + \"/\" + props.task.id\n            , jsonParams\n            , {headers: {'content-type': 'application/json'}})\n        .then( response => {\n            props.setInitDispFlg(true);\n            props.close();\n        }).catch(() => {\n            Router.push('/Error?400');\n        })\n    }\n\n    let title: string;\n    let execute: () => void;\n    switch(props.execSbt) {\n        case \"1\":\n            title = 'Create task';\n            execute = create;\n            break;\n        case \"2\":\n            title = 'Update task';\n            execute = update;\n            break;\n    }\n\n    return (\n        <Modal show={props.show} onHide={props.close} key='taskEditModal'>\n            <Modal.Header closeButton>\n                <Modal.Title>{title}</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Row>\n                        <Col xs={4} className=\"modal_label\">\n                            <strong>Task</strong>\n                        </Col>\n                        <Col xs={8} className=\"modal_input\">\n                                <Form.Control type=\"text\" value={form.task} onChange={handleChange('task')} />\n                        </Col>\n                        <hr />\n                        <Col xs={4} className=\"modal_label\">\n                            <strong>Priority</strong>\n                        </Col>\n                        <Col xs={8} className=\"modal_input\">\n                            <Form.Control as=\"select\" value={form.priority} onChange={handleChange('priority')}>\n                                <option key=\"priority1\" value=\"1\">LOW</option>\n                                <option key=\"priority2\" value=\"2\">MEDIUM</option>\n                                <option key=\"priority3\" value=\"3\">HIGH</option>\n                            </Form.Control>\n                        </Col>\n                        <hr />\n                        <Col xs={4} className=\"modal_label\">\n                            <strong>Description</strong>\n                        </Col>\n                        <Col xs={8} className=\"modal_input\">\n                                <Form.Control as=\"textarea\" rows={4} cols={40} value={form.description} onChange={handleChange('description')} />\n                        </Col>\n                    </Row>\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n               <Button variant=\"primary\" onClick={clickExecute} className=\"button_sm\" >execute</Button>\n                <Button variant=\"dark\" onClick={props.close} className=\"button_sm\" >close</Button>\n            </Modal.Footer>\n        </Modal>\n    )\n}\n\nexport default TaskEditModal;"]},"metadata":{},"sourceType":"module"}