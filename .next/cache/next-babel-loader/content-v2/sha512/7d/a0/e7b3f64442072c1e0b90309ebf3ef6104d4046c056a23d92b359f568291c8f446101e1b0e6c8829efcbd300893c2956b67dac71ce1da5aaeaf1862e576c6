{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/shumiya/Desktop/dev/react/shumipro_front/src/components/TaskItem.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport styles from '../styles/TaskItem.module.css';\nimport Axios from \"axios\";\nimport Router from 'next/router';\nimport TaskEditModal from '../components/TaskEditModal';\n\nvar TaskItem = function TaskItem(props) {\n  _s();\n\n  // モーダル表示フラグ\n  var _useState = useState(false),\n      taskUpdateModalDispFlg = _useState[0],\n      setTaskUpdateModalDispFlg = _useState[1];\n\n  var priority = conversionPriority(props.task.priority);\n  var priority_str = priority.str;\n  var priority_className = priority.className; // cookieを使用するaxios生成\n\n  var client = Axios.create({\n    withCredentials: true\n  });\n\n  var deleteTask = function deleteTask() {\n    if (confirm(\"Do you want to delete it?\")) {\n      client[\"delete\"](process.env.NEXT_PUBLIC_API_SERVER + process.env.NEXT_PUBLIC_API_TASK + \"/\" + props.task.id).then(function (response) {\n        props.setInitDispFlg(true);\n      })[\"catch\"](function () {\n        Router.push('/Error?400');\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.task_item,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.task_item_title,\n      children: [\"[\", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: priority_className,\n        children: priority_str\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 18\n      }, _this), \"]\", props.task.taskTitle, /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.task_item_icon,\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          onClick: deleteTask,\n          className: \"fa fa-trash\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 54\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.task_item_description,\n      children: props.task.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, _this), taskUpdateModalDispFlg && /*#__PURE__*/_jsxDEV(TaskEditModal, {\n      show: showTaskEditModal,\n      close: closeTaskEditModal,\n      title: \"Create task\",\n      setInitDispFlg: setInitDispFlg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(TaskItem, \"ZJmHMOvhRpiRK+6jl8xbKd8R490=\");\n\n_c = TaskItem;\n\nfunction conversionPriority(priority) {\n  var str;\n  var className;\n\n  switch (priority) {\n    case 1:\n      str = 'LOW';\n      className = 'blue';\n      break;\n\n    case 2:\n      str = 'MEDIUM';\n      break;\n\n    case 3:\n      str = 'HIGH';\n      className = 'red';\n      break;\n  }\n\n  return {\n    str: str,\n    className: className\n  };\n}\n\nexport default TaskItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskItem\");","map":{"version":3,"sources":["/Users/shumiya/Desktop/dev/react/shumipro_front/src/components/TaskItem.tsx"],"names":["React","useState","styles","Axios","Router","TaskEditModal","TaskItem","props","taskUpdateModalDispFlg","setTaskUpdateModalDispFlg","priority","conversionPriority","task","priority_str","str","priority_className","className","client","create","withCredentials","deleteTask","confirm","process","env","NEXT_PUBLIC_API_SERVER","NEXT_PUBLIC_API_TASK","id","then","response","setInitDispFlg","push","task_item","task_item_title","taskTitle","task_item_icon","task_item_description","description","showTaskEditModal","closeTaskEditModal"],"mappings":"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","sourcesContent":["import React , { Dispatch, SetStateAction, useState } from 'react';\nimport styles from '../styles/TaskItem.module.css';\nimport { Task } from './interface';\nimport Axios from \"axios\";\nimport Router from 'next/router';\nimport TaskEditModal from '../components/TaskEditModal';\n\ninterface TaskItemProps {\n    task: Task;\n    setInitDispFlg: Dispatch<SetStateAction<Boolean>>;\n}\n\nconst TaskItem: React.FC<TaskItemProps> = (props) => {\n    // モーダル表示フラグ\n    const [taskUpdateModalDispFlg, setTaskUpdateModalDispFlg] = useState<Boolean>(false);\n\n    var priority = conversionPriority(props.task.priority);\n    var priority_str = priority.str;\n    var priority_className = priority.className;\n\n    // cookieを使用するaxios生成\n    let client = Axios.create({ withCredentials: true });\n\n    const deleteTask = () => {\n        if(confirm(\"Do you want to delete it?\")){\n            client.delete(process.env.NEXT_PUBLIC_API_SERVER + process.env.NEXT_PUBLIC_API_TASK + \"/\" + props.task.id)\n            .then( response => {\n                props.setInitDispFlg(true);\n            }).catch(() => {\n                Router.push('/Error?400');\n            })\n        }\n    }\n\n    return (\n        <div className={styles.task_item}>\n            <div className={styles.task_item_title}>\n                [<span className={priority_className}>{priority_str}</span>]\n                {props.task.taskTitle}\n                <p className={styles.task_item_icon}><i onClick={deleteTask} className=\"fa fa-trash\" /></p> \n            </div>\n            <div className={styles.task_item_description}>{props.task.description}</div>\n            {taskUpdateModalDispFlg && \n                <TaskEditModal \n                    show = {showTaskEditModal}\n                    close = {closeTaskEditModal}\n                    title = \"Create task\"\n                    setInitDispFlg = {setInitDispFlg}\n                />\n            }\n        </div>\n    )\n}\n\nfunction conversionPriority(priority: number){\n    var str: string;\n    var className: string;\n    switch(priority) {\n        case 1:\n            str = 'LOW';\n            className = 'blue';\n            break;\n        case 2:\n            str = 'MEDIUM';\n            break;\n        case 3:\n            str = 'HIGH';\n            className = 'red';\n            break;\n    }\n    return { str: str, className: className }\n}\n\nexport default TaskItem;"]},"metadata":{},"sourceType":"module"}