{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport Layout from '../components/common/Layout';\nimport { useState } from \"react\";\nimport dynamic from \"next/dynamic\";\nimport { logout } from '../components/util/AuthenticationUtil';\n\nconst getErrorCd = () => {\n  return window.location.search.substring(1);\n};\n\nconst Error = () => {\n  const {\n    0: errorCd\n  } = useState(getErrorCd());\n  let errorMsg;\n\n  switch (errorCd) {\n    case \"400\":\n      errorMsg = \"不正なリクエストです。\";\n      break;\n\n    case \"401\":\n      errorMsg = \"認証に失敗しました。\";\n      break;\n\n    default:\n      errorMsg = \"エラーが発生しました。\";\n      break;\n  }\n\n  return /*#__PURE__*/_jsxs(Layout, {\n    title: \"Error.\",\n    children: [errorMsg, /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(\"a\", {\n      onClick: logout,\n      className: \"cursor_pointer\",\n      children: \"\\uFF1C\\uFF1C Back to login page\"\n    })]\n  });\n};\n\nconst DynamicError = dynamic({\n  loader: async () => Error\n}, {\n  ssr: false\n});\nexport default DynamicError;","map":null,"metadata":{},"sourceType":"module"}