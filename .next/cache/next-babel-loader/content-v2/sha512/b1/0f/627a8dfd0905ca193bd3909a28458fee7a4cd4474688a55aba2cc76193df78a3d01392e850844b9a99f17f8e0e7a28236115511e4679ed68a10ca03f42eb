{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/shumiya/Desktop/dev/react/shumipro_front/src/components/TaskCommentModal.tsx\";\nimport React, { useEffect } from 'react';\nimport { Modal, Form, Row, Col } from 'react-bootstrap';\nimport { registerLocale } from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport ja from 'date-fns/locale/ja';\nimport TaskComment from '../components/TaskComment';\nregisterLocale('ja', ja);\n\nconst TaskCommentModal = props => {\n  // 初期表示処理\n  useEffect(() => {}, []);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: true,\n    onHide: props.close,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: \"Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            xs: 12,\n            className: \"modal_input\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), props.task.comments.map(taskComment => /*#__PURE__*/_jsxDEV(TaskComment, {\n        id: taskComment.id,\n        taskId: taskComment.taskId,\n        comment: taskComment.comment\n      }, \"taskComment\" + taskComment.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, 'taskCommentModal', true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\nexport default TaskCommentModal;","map":{"version":3,"sources":["/Users/shumiya/Desktop/dev/react/shumipro_front/src/components/TaskCommentModal.tsx"],"names":["React","useEffect","Modal","Form","Row","Col","registerLocale","ja","TaskComment","TaskCommentModal","props","close","task","comments","map","taskComment","id","taskId","comment"],"mappings":";;AAAA,OAAOA,KAAP,IAAoDC,SAApD,QAAqE,OAArE;AACA,SAAQC,KAAR,EAAuBC,IAAvB,EAA6BC,GAA7B,EAAkCC,GAAlC,QAA4C,iBAA5C;AAIA,SAAqBC,cAArB,QAA2C,kBAA3C;AAEA,OAAO,4CAAP;AACA,OAAOC,EAAP,MAAe,oBAAf;AAGA,OAAOC,WAAP,MAAwB,2BAAxB;AAGAF,cAAc,CAAC,IAAD,EAAOC,EAAP,CAAd;;AAUA,MAAME,gBAAiD,GAAIC,KAAD,IAAW;AAEjE;AACAT,EAAAA,SAAS,CAAC,MAAM,CAEf,CAFQ,EAEN,EAFM,CAAT;AAIA,sBACI,QAAC,KAAD;AAAO,IAAA,IAAI,EAAE,IAAb;AAAmB,IAAA,MAAM,EAAES,KAAK,CAACC,KAAjC;AAAA,4BACI,QAAC,KAAD,CAAO,MAAP;AAAc,MAAA,WAAW,MAAzB;AAAA,6BACI,QAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,KAAD,CAAO,IAAP;AAAA,8BACA,QAAC,IAAD;AAAA,+BACI,QAAC,GAAD;AAAA,kCACI,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE,EAAT;AAAa,YAAA,SAAS,EAAC,aAAvB;AAAA,mCACI,QAAC,IAAD,CAAM,OAAN;AAAc,cAAA,EAAE,EAAC,UAAjB;AAA4B,cAAA,IAAI,EAAE;AAAlC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADA,EAUID,KAAK,CAACE,IAAN,CAAWC,QAAX,CAAoBC,GAApB,CAAwBC,WAAW,iBAC/B,QAAC,WAAD;AACI,QAAA,EAAE,EAAEA,WAAW,CAACC,EADpB;AAEI,QAAA,MAAM,EAAED,WAAW,CAACE,MAFxB;AAGI,QAAA,OAAO,EAAEF,WAAW,CAACG;AAHzB,SAIS,gBAAgBH,WAAW,CAACC,EAJrC;AAAA;AAAA;AAAA;AAAA,cADJ,CAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAwBI,QAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA,YAxBJ;AAAA,KAA4C,kBAA5C;AAAA;AAAA;AAAA;AAAA,UADJ;AA6BH,CApCD;;AAsCA,eAAeP,gBAAf","sourcesContent":["import React, { Dispatch, SetStateAction, useState, useEffect } from 'react';\nimport {Modal, Button, Form, Row, Col} from 'react-bootstrap';\nimport Axios from \"axios\";\nimport Router from 'next/router';\nimport { Task } from '../components/interface';\nimport DatePicker, { registerLocale } from \"react-datepicker\";\nimport moment from 'moment';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport ja from 'date-fns/locale/ja';\nimport * as DatePickerUtil from './DatePickerUtil';\nimport * as ConversionUtil from './ConversionUtil';\nimport TaskComment from '../components/TaskComment';\n\n\nregisterLocale('ja', ja)\n\n\ninterface TaskCommentModalProps {\n    close: () => void;\n    setInitDispFlg: Dispatch<SetStateAction<Boolean>>;\n    task: Task;\n}\n\n\nconst TaskCommentModal: React.FC<TaskCommentModalProps> = (props) => {\n　　\n    // 初期表示処理\n    useEffect(() => {        \n\n    }, []);\n  \n    return (\n        <Modal show={true} onHide={props.close} key='taskCommentModal'>\n            <Modal.Header closeButton>\n                <Modal.Title>Comment</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n            <Form>\n                <Row>\n                    <Col xs={12} className=\"modal_input\">\n                        <Form.Control as=\"textarea\" rows={2} />\n                    </Col>\n                    <hr />\n                </Row>\n            </Form>\n            {\n                props.task.comments.map(taskComment => (\n                    <TaskComment\n                        id={taskComment.id}\n                        taskId={taskComment.taskId}\n                        comment={taskComment.comment}\n                        key={\"taskComment\" + taskComment.id}\n                    />\n                ))\n            }\n            </Modal.Body>\n            <Modal.Footer>\n            </Modal.Footer>\n        </Modal>\n    )\n}\n\nexport default TaskCommentModal;"]},"metadata":{},"sourceType":"module"}