{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/shumiya/Desktop/dev/react/shumipro_front/src/components/TaskCommentModal.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Modal, Button, Form, Row, Col } from 'react-bootstrap';\nimport { registerLocale } from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport ja from 'date-fns/locale/ja';\nimport TaskComment from '../components/TaskComment';\nimport styles from '../styles/TaskComment.module.css';\nregisterLocale('ja', ja);\n\nconst TaskCommentModal = props => {\n  const {\n    0: saveComment,\n    1: setSaveComment\n  } = useState(\"\");\n  const {\n    0: comments,\n    1: setComments\n  } = useState(props.task.comments); // 初期表示処理\n\n  useEffect(() => {}, []);\n\n  const handleChangeSaveComment = () => {\n    return e => setSaveComment(e.target.value);\n  };\n\n  const clearSaveComment = () => {\n    return setSaveComment(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: true,\n    onHide: props.close,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: \"Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            xs: 12,\n            className: \"modal_input\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 2,\n              value: saveComment,\n              onChange: handleChangeSaveComment()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.task_comment_button_frame,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.task_comment_button,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                className: \"button_sm\",\n                children: \"save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 69\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.task_comment_button,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outline-dark\",\n                className: \"button_sm\",\n                onClick: clearSaveComment,\n                children: \"clear\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 69\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), props.task.comments.map(taskComment => /*#__PURE__*/_jsxDEV(TaskComment, {\n        id: taskComment.id,\n        taskId: taskComment.taskId,\n        comment: taskComment.comment\n      }, \"taskComment\" + taskComment.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"dark\",\n        onClick: props.close,\n        className: \"button_sm\",\n        children: \"close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, 'taskCommentModal', true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\nexport default TaskCommentModal;","map":{"version":3,"sources":["/Users/shumiya/Desktop/dev/react/shumipro_front/src/components/TaskCommentModal.tsx"],"names":["React","useState","useEffect","Modal","Button","Form","Row","Col","registerLocale","ja","TaskComment","styles","TaskCommentModal","props","saveComment","setSaveComment","comments","setComments","task","handleChangeSaveComment","e","target","value","clearSaveComment","close","task_comment_button_frame","task_comment_button","map","taskComment","id","taskId","comment"],"mappings":"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","sourcesContent":["import React, { Dispatch, SetStateAction, useState, useEffect } from 'react';\nimport {Modal, Button, Form, Row, Col} from 'react-bootstrap';\nimport Axios from \"axios\";\nimport Router from 'next/router';\nimport { Task } from '../components/interface';\nimport DatePicker, { registerLocale } from \"react-datepicker\";\nimport moment from 'moment';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport ja from 'date-fns/locale/ja';\nimport * as DatePickerUtil from './DatePickerUtil';\nimport * as ConversionUtil from './ConversionUtil';\nimport TaskComment from '../components/TaskComment';\nimport styles from '../styles/TaskComment.module.css';\n\n\nregisterLocale('ja', ja)\n\n\ninterface TaskCommentModalProps {\n    close: () => void;\n    setInitDispFlg: Dispatch<SetStateAction<Boolean>>;\n    task: Task;\n}\n\n\nconst TaskCommentModal: React.FC<TaskCommentModalProps> = (props) => {\n    const [saveComment, setSaveComment] = useState<string>(\"\");\n    const [comments, setComments] = useState<TaskComment[]>(props.task.comments);\n　　\n   // 初期表示処理\n    useEffect(() => {        \n\n    }, []);\n  \n    const handleChangeSaveComment = () => {\n        return e => setSaveComment(e.target.value);\n    }\n\n    const clearSaveComment = () => {\n        return setSaveComment(\"\");\n    }\n\n    return (\n        <Modal show={true} onHide={props.close} key='taskCommentModal'>\n            <Modal.Header closeButton>\n                <Modal.Title>Comment</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n            <Form>\n                <Row>\n                    <Col xs={12} className=\"modal_input\">\n                        <Form.Control as=\"textarea\" rows={2} value={saveComment} onChange={handleChangeSaveComment()}/>\n                    </Col>\n                    <div className={styles.task_comment_button_frame}>\n                        <div className={styles.task_comment_button}><Button variant=\"primary\" className=\"button_sm\" >save</Button></div>\n                        <div className={styles.task_comment_button}><Button variant=\"outline-dark\" className=\"button_sm\" onClick={clearSaveComment} >clear</Button></div>\n                    </div>\n                    <hr />\n                </Row>\n            </Form>\n            {\n                props.task.comments.map(taskComment => (\n                    <TaskComment\n                        id={taskComment.id}\n                        taskId={taskComment.taskId}\n                        comment={taskComment.comment}\n                        key={\"taskComment\" + taskComment.id}\n                    />\n                ))\n            }\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"dark\" onClick={props.close} className=\"button_sm\" >close</Button>\n            </Modal.Footer>\n        </Modal>\n    )\n}\n\nexport default TaskCommentModal;"]},"metadata":{},"sourceType":"module"}