{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/shumiya/Desktop/dev/react/shumipro_front/src/components/TaskBoard.tsx\";\nimport React from 'react';\nimport Router from 'next/router';\nimport Axios from \"axios\";\nimport { useState } from \"react\";\n\nconst TaskBoard = props => {\n  const {\n    0: taskListNotStarted,\n    1: setTaskListNotStarted\n  } = useState(null);\n  const {\n    0: taskListInProgress,\n    1: setTaskListInProgress\n  } = useState(null);\n  const {\n    0: taskListDone,\n    1: setTaskListDone\n  } = useState(null);\n  let client = Axios.create({\n    withCredentials: true\n  });\n  client.get(process.env.NEXT_PUBLIC_API_SERVER + process.env.NEXT_PUBLIC_API_TASK + \"/1\").then(response => {\n    console.log(response.data[0]);\n    console.log(response.data[0].id);\n    console.log(response.data.length);\n  }).catch(() => {\n    Router.push('/Error?400');\n  });\n  var taskList = new Array(4);\n  taskList.push({\n    taskTitle: \"test1\",\n    description: \"aaa1\",\n    priority: 1\n  });\n  taskList.push({\n    taskTitle: \"test2\",\n    description: \"aaa2\",\n    priority: 2\n  });\n  taskList.push({\n    taskTitle: \"test3\",\n    description: \"aaa3\",\n    priority: 3\n  });\n  taskList.push({\n    taskTitle: \"test4\",\n    description: \"aaa4\",\n    priority: 2\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\nfunction getTaskListInProgress() {\n  return null;\n}\n\nfunction getTaskListDone() {\n  return null;\n}\n\nexport default TaskBoard;","map":{"version":3,"sources":["/Users/shumiya/Desktop/dev/react/shumipro_front/src/components/TaskBoard.tsx"],"names":["React","Router","Axios","useState","TaskBoard","props","taskListNotStarted","setTaskListNotStarted","taskListInProgress","setTaskListInProgress","taskListDone","setTaskListDone","client","create","withCredentials","get","process","env","NEXT_PUBLIC_API_SERVER","NEXT_PUBLIC_API_TASK","then","response","console","log","data","id","length","catch","push","taskList","Array","taskTitle","description","priority","getTaskListInProgress","getTaskListDone"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAMA,MAAMC,SAAmC,GAAIC,KAAD,IAAW;AACnD,QAAM;AAAA,OAACC,kBAAD;AAAA,OAAqBC;AAArB,MAA8CJ,QAAQ,CAAS,IAAT,CAA5D;AACA,QAAM;AAAA,OAACK,kBAAD;AAAA,OAAqBC;AAArB,MAA8CN,QAAQ,CAAS,IAAT,CAA5D;AACA,QAAM;AAAA,OAACO,YAAD;AAAA,OAAeC;AAAf,MAAkCR,QAAQ,CAAS,IAAT,CAAhD;AAEA,MAAIS,MAAM,GAAGV,KAAK,CAACW,MAAN,CAAa;AAAEC,IAAAA,eAAe,EAAE;AAAnB,GAAb,CAAb;AAEAF,EAAAA,MAAM,CAACG,GAAP,CAAWC,OAAO,CAACC,GAAR,CAAYC,sBAAZ,GAAqCF,OAAO,CAACC,GAAR,CAAYE,oBAAjD,GAAwE,IAAnF,EACKC,IADL,CACUC,QAAQ,IAAI;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAAT,CAAc,CAAd,CAAZ;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAAT,CAAc,CAAd,EAAiBC,EAA7B;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAAT,CAAcE,MAA1B;AACH,GALL,EAKOC,KALP,CAKa,MAAM;AACX1B,IAAAA,MAAM,CAAC2B,IAAP,CAAY,YAAZ;AACH,GAPL;AASA,MAAIC,QAAgB,GAAG,IAAIC,KAAJ,CAAU,CAAV,CAAvB;AACAD,EAAAA,QAAQ,CAACD,IAAT,CAAc;AAACG,IAAAA,SAAS,EAAE,OAAZ;AAAqBC,IAAAA,WAAW,EAAE,MAAlC;AAA0CC,IAAAA,QAAQ,EAAE;AAApD,GAAd;AACAJ,EAAAA,QAAQ,CAACD,IAAT,CAAc;AAACG,IAAAA,SAAS,EAAE,OAAZ;AAAqBC,IAAAA,WAAW,EAAE,MAAlC;AAA0CC,IAAAA,QAAQ,EAAE;AAApD,GAAd;AACAJ,EAAAA,QAAQ,CAACD,IAAT,CAAc;AAACG,IAAAA,SAAS,EAAE,OAAZ;AAAqBC,IAAAA,WAAW,EAAE,MAAlC;AAA0CC,IAAAA,QAAQ,EAAE;AAApD,GAAd;AACAJ,EAAAA,QAAQ,CAACD,IAAT,CAAc;AAACG,IAAAA,SAAS,EAAE,OAAZ;AAAqBC,IAAAA,WAAW,EAAE,MAAlC;AAA0CC,IAAAA,QAAQ,EAAE;AAApD,GAAd;AACA,sBACI;AAAK,IAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CA5BD;;AA8BA,SAASC,qBAAT,GAAwC;AACpC,SAAO,IAAP;AACH;;AAED,SAASC,eAAT,GAAkC;AAC9B,SAAO,IAAP;AACH;;AAED,eAAe/B,SAAf","sourcesContent":["import React from 'react';\nimport TaskList from '../components/TaskList'\nimport { Task } from './interface';\nimport Router from 'next/router';\nimport Axios from \"axios\";\nimport { useState } from \"react\";\n\ninterface TaskBoardProps {\n\n}\n\nconst TaskBoard: React.FC<TaskBoardProps> = (props) => {\n    const [taskListNotStarted, setTaskListNotStarted] = useState<Task[]>(null);\n    const [taskListInProgress, setTaskListInProgress] = useState<Task[]>(null);\n    const [taskListDone, setTaskListDone] = useState<Task[]>(null);\n\n    let client = Axios.create({ withCredentials: true });\n\n    client.get(process.env.NEXT_PUBLIC_API_SERVER + process.env.NEXT_PUBLIC_API_TASK + \"/1\")\n        .then(response => {\n            console.log(response.data[0]);\n            console.log(response.data[0].id);\n            console.log(response.data.length);\n        }).catch(() => {\n            Router.push('/Error?400');\n        }); \n\n    var taskList: Task[] = new Array(4);\n    taskList.push({taskTitle: \"test1\" ,description: \"aaa1\" ,priority: 1});\n    taskList.push({taskTitle: \"test2\" ,description: \"aaa2\" ,priority: 2});\n    taskList.push({taskTitle: \"test3\" ,description: \"aaa3\" ,priority: 3});\n    taskList.push({taskTitle: \"test4\" ,description: \"aaa4\" ,priority: 2});\n    return (\n        <div className=\"\">\n            {/* <TaskList taskList={taskListNotStarted} status=\"1\" />\n            <TaskList taskList={taskListInProgress} status=\"2\" />\n            <TaskList taskList={taskListDone} status=\"3\" /> */}\n        </div>\n    )\n}\n\nfunction getTaskListInProgress(): Task[]{\n    return null;\n}\n\nfunction getTaskListDone(): Task[]{\n    return null;\n}\n\nexport default TaskBoard;"]},"metadata":{},"sourceType":"module"}