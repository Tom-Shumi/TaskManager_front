{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/shumiya/Desktop/dev/react/shumipro_front/src/components/DailyTask/DailyTaskItem.tsx\";\nimport React, { useState } from 'react';\nimport styles from '../../styles/DailyTaskItem.module.css';\nimport { Row, Col, Form, Button } from 'react-bootstrap';\nimport * as NumberUtil from '../util/NumberUtil';\nimport * as ConversionUtil from '../util/ConversionUtil';\nimport { getApiClient } from '../util/AuthenticationUtil';\nimport Router from 'next/router';\n\nconst DailyTaskItem = props => {\n  const {\n    0: inputDoneTime,\n    1: setInputDoneTime\n  } = useState(\"\");\n  const quota = NumberUtil.convertHourMinute(props.dailyTask.quota);\n  const done = NumberUtil.convertHourMinute(props.dailyTask.doneTime);\n  const remaining = NumberUtil.convertRemaining(props.dailyTask.quota, props.dailyTask.doneTime);\n  const taskStatus = ConversionUtil.conversionStatusByTime(props.dailyTask.quota, props.dailyTask.doneTime, props.dailyTask.deleteFlg);\n  var taskStatusStr = props.dailyTask.deleteFlg == 1 ? \"【\" + taskStatus.str + \"】\" : \"\";\n  var taskStatusColor = taskStatus.color; // cookieを使用するaxios生成\n\n  let client = getApiClient();\n\n  const saveDoneTime = () => {\n    if (!NumberUtil.isNumber(inputDoneTime)) {\n      setInputDoneTime(\"\");\n      return;\n    }\n\n    var params = {\n      daily_task_id: props.dailyTask.id,\n      done_time: inputDoneTime,\n      quota: props.dailyTask.quota\n    };\n    var jsonParams = JSON.stringify(params);\n    setInputDoneTime(\"\");\n    client.post(process.env.NEXT_PUBLIC_API_SERVER + process.env.NEXT_PUBLIC_API_DAILY_TASK_HISTORY, jsonParams, {\n      headers: {\n        'content-type': 'application/json'\n      }\n    }).then(() => {\n      props.setInitDispFlg(true);\n    }).catch(() => {\n      Router.push('/Error?400');\n    });\n  };\n\n  const handleChangeInputDoneTime = () => {\n    return e => setInputDoneTime(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.daily_task_item + \" \" + taskStatusColor,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.title,\n      children: [props.dailyTask.title, taskStatusStr, props.dailyTask.deleteFlg == 1 && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.icon,\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          onClick: deleteDailyTask,\n          className: \"fa fa-trash faa-wrench animated-hover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 48\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: 2,\n        className: styles.quota_label,\n        children: [\"Quota: \", quota]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 2,\n        className: styles.label,\n        children: [\"Done: \", done]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 3,\n        className: styles.label,\n        children: [\"Remaining: \", remaining]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 5,\n        children: [\"logged:\", /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          value: inputDoneTime,\n          className: styles.done_time_textbox,\n          onChange: handleChangeInputDoneTime(),\n          disabled: props.dailyTask.deleteFlg == 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), \" m\", /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          className: styles.done_time_button,\n          onClick: saveDoneTime,\n          children: \"Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n\nexport default DailyTaskItem;","map":{"version":3,"sources":["/Users/shumiya/Desktop/dev/react/shumipro_front/src/components/DailyTask/DailyTaskItem.tsx"],"names":["React","useState","styles","Row","Col","Form","Button","NumberUtil","ConversionUtil","getApiClient","Router","DailyTaskItem","props","inputDoneTime","setInputDoneTime","quota","convertHourMinute","dailyTask","done","doneTime","remaining","convertRemaining","taskStatus","conversionStatusByTime","deleteFlg","taskStatusStr","str","taskStatusColor","color","client","saveDoneTime","isNumber","params","daily_task_id","id","done_time","jsonParams","JSON","stringify","post","process","env","NEXT_PUBLIC_API_SERVER","NEXT_PUBLIC_API_DAILY_TASK_HISTORY","headers","then","setInitDispFlg","catch","push","handleChangeInputDoneTime","e","target","value","daily_task_item","title","icon","deleteDailyTask","quota_label","label","done_time_textbox","done_time_button"],"mappings":"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","sourcesContent":["import React, { Dispatch, SetStateAction, useState, useEffect} from 'react';\nimport styles from '../../styles/DailyTaskItem.module.css';\nimport {Row, Col, Form, Button} from 'react-bootstrap';\nimport { DailyTask } from '../common/interface';\nimport * as NumberUtil from '../util/NumberUtil';\nimport * as ConversionUtil from '../util/ConversionUtil';\nimport {getApiClient} from '../util/AuthenticationUtil';\nimport Router from 'next/router';\n\ninterface DailyTaskItemProps {\n    dailyTask: DailyTask;\n    setInitDispFlg: Dispatch<SetStateAction<Boolean>>;\n}\n\nconst DailyTaskItem: React.FC<DailyTaskItemProps> = (props) => {\n    const [inputDoneTime, setInputDoneTime] = useState<string>(\"\");\n\n    const quota = NumberUtil.convertHourMinute(props.dailyTask.quota);\n    const done = NumberUtil.convertHourMinute(props.dailyTask.doneTime);\n    const remaining = NumberUtil.convertRemaining(props.dailyTask.quota, props.dailyTask.doneTime);\n\n    const taskStatus = ConversionUtil. conversionStatusByTime(props.dailyTask.quota, props.dailyTask.doneTime, props.dailyTask.deleteFlg);\n    var taskStatusStr = props.dailyTask.deleteFlg == 1 ? \"【\" + taskStatus.str + \"】\" : \"\";\n    var taskStatusColor = taskStatus.color;\n\n    // cookieを使用するaxios生成\n    let client = getApiClient();\n\n    const saveDoneTime = () => {\n\n        if (!NumberUtil.isNumber(inputDoneTime)) {\n            setInputDoneTime(\"\");\n            return;\n        }\n\n        var params = {\n            daily_task_id: props.dailyTask.id,\n            done_time: inputDoneTime,\n            quota: props.dailyTask.quota,\n        }\n        var jsonParams = JSON.stringify(params);\n\n        setInputDoneTime(\"\")\n\n        client.post(process.env.NEXT_PUBLIC_API_SERVER + process.env.NEXT_PUBLIC_API_DAILY_TASK_HISTORY\n            , jsonParams\n            , {headers: {'content-type': 'application/json'}})\n        .then(() => {\n            props.setInitDispFlg(true);\n        }).catch(() => {\n            Router.push('/Error?400');\n        })\n    }\n\n    const handleChangeInputDoneTime = () => {\n        return e => setInputDoneTime(e.target.value);\n    }\n \n    return (\n        <div className={styles.daily_task_item + \" \" + taskStatusColor}>\n            <div className={styles.title}>\n                {props.dailyTask.title}{taskStatusStr}\n                {props.dailyTask.deleteFlg == 1 && \n                    <p className={styles.icon}><i onClick={deleteDailyTask} className=\"fa fa-trash faa-wrench animated-hover\" /></p> \n                }\n            </div>\n            <Row>\n                <Col xs={2} className={styles.quota_label}>Quota: {quota}</Col>\n                <Col xs={2} className={styles.label}>Done: {done}</Col>\n                <Col xs={3} className={styles.label}>Remaining: {remaining}</Col>\n                <Col xs={5}>\n                    logged:\n                    <Form.Control type=\"text\" value={inputDoneTime} className={styles.done_time_textbox} onChange={handleChangeInputDoneTime()} disabled={props.dailyTask.deleteFlg == 1} /> m\n                    <Button variant=\"primary\" className={styles.done_time_button} onClick={saveDoneTime}>Done</Button>\n                </Col>\n            </Row>\n            \n        </div>\n    )\n}\n\nexport default DailyTaskItem;"]},"metadata":{},"sourceType":"module"}